;1	19.09.2013 14:12:56	null	null
X0 003f40d0 0 0 0 0 0 0

O0 003f3f8c 0 0 0 0 0 0

E0 003f3ff8 0 0 0 0 0 0

L0 003f4064 0 0 0 0 0 0

B0 003f4214 0 0 0 0 0 0

P0 003f413c 0 0 0 0 0 0

F0 003f41a8 0 003f2928 0 0 0 0

F1 003f2928 003f41a8 003f46f0 003f5008 0 0 2
-- Utility Functions --
Funktion

F1 003f46f0 003f2928 0 003f4870 0 0 2
Table Effective Date(effectiveDate)
Funktion
DATE(effectiveDate;0;0;0;"YMD") //(year(effective_date) * 10000) + (month(effective_date) * 100) + day(effective_date)ä
F1 003f4870 003f2928 003f49a8 0 0 0 2
-- Wildcard Lookup Functions --
Funktion

F1 003f49a8 003f4870 0 003f4b98 0 0 2
key2 lookup(tablename; key1; key2)
Funktion
IF (EXISTS(table(tablename);key1;key2) ; çä  key2 ; çä  IF (EXISTS(table(tablename);key1;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & " not found in " & tablename)çä    )çä)çä)
F1 003f4b98 003f4870 0 003f4e18 0 0 2
key3 lookup(tablename; key1; key2; key3)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3) ; çä  key3 ; çä  IF (EXISTS(table(tablename);key1;key2;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & " not found in " & tablename)çä    )çä)çä)
F1 003f4e18 003f4870 0 003f4f78 0 0 2
key4 lookup(tablename; key1; key2; key3; key4)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4) ; çä  key4 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;1000) ; çä    1000 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;0) ; çä      0 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & " not found in " & tablename)çä    )çä)çä)
F1 003f4f78 003f4870 0 01e607b0 0 0 2
key5 lookup(tablename; key1; key2; key3; key4; key5)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5) ; çä  key5 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & " not found in " & tablename)çä    )çä)çä)
F1 01e607b0 003f4870 0 01e605a8 0 0 2
key6 lookup(tablename; key1; key2; key3; key4; key5; key6)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6) ; çä  key6 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & " not found in " & tablename)çä    )çä)çä)
F1 01e605a8 003f4870 0 01e60cf0 0 0 2
key7 lookup(tablename; key1; key2; key3; key4; key5; key6; key7)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7) ; çä  key7 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf0 003f4870 0 01e60cf1 0 0 2
key8 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8) ; çä  key8 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & key8 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf1 003f4870 0 01e60cf2 0 0 2
key9 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9) ; çä  key9 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf2 003f4870 0 0 0 0 2
key10 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9, key10)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;key10) ; çä  key10 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & "/" & key10 & " not found in " & tablename)çä    )çä)çä)
F1 003f5008 003f41a8 003f5fe0 0 0 0 2
-- NEW Table Access Functions --
Funktion

F1 003f5fe0 003f5008 003f61a0 0 0 0 2
-- Table Access functions --
Funktion

F1 003f61a0 003f5fe0 003f6350 0 0 0 2
--
Funktion

F1 003f6350 003f61a0 0 3eacf291 0 0 2
--
Funktion

F1 3eacf291 003f61a0 0 666f1833 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteriaçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3) //operationçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 666f1833 003f61a0 0 50189862 0 0 2
PP IPInfo Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 50189862 003f61a0 0 505b7815 0 0 2
PP LP CP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct PremiumRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct PremiumRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 505b7815 003f61a0 0 471a2937 0 0 2
PP DHP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 471a2937 003f61a0 0 7a3be398 0 0 2
PP PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailableçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a3be398 003f61a0 0 313a4be0 0 0 2
Party Producer CarrierAppointment Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment AttachmentçäIF (EXISTS('Table Party Producer CarrierAppointment Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 313a4be0 003f61a0 0 5d3c49a5 0 0 2
PP LP CP COP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d3c49a5 003f61a0 0 26b08e8 0 0 2
PP AP FP FOP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 26b08e8 003f61a0 0 1563d697 0 0 2
PP LP CP COP ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1563d697 003f61a0 0 5da1ebea 0 0 2
PP AP FP FOPExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5da1ebea 003f61a0 0 38e896e3 0 0 2
PP IPInfoExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 38e896e3 003f61a0 0 5b58f1e 0 0 2
PP PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b58f1e 003f61a0 0 1f4ff0f 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f4ff0f 003f61a0 0 147794a8 0 0 2
StatutoryCompanyCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table StatutoryCompanyCCçäIF (EXISTS('Table StatutoryCompanyCC';e_(v_construct(s_keys);0) //StatutoryCompanyCC_id_extçä) ; çä   // then read from the table çä'Table StatutoryCompanyCC'[e_(v_construct(s_keys);0) //StatutoryCompanyCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 147794a8 003f61a0 0 1f1b8979 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f1b8979 003f61a0 0 5c75ecde 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c75ecde 003f61a0 0 233a3bce 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 233a3bce 003f61a0 0 7929cd52 0 0 2
PP LP ArrangementProduct ArrangementOptProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7929cd52 003f61a0 0 6aa415e3 0 0 2
PP AP FP FOP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6aa415e3 003f61a0 0 6fcf80fb 0 0 2
PP Dividend(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DividendçäIF (EXISTS('Table PolicyProduct Dividend';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //divTypeçäe_(v_construct(s_keys);5) //divOYTOptTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Dividend'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //divTypeçäe_(v_construct(s_keys);5) //divOYTOptTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fcf80fb 003f61a0 0 693bce09 0 0 2
Party Carrier License LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License LineOfAuthority ExamçäIF (EXISTS('Table Party Carrier License LineOfAuthority Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä) ; çä   // then read from the table çä'Table Party Carrier License LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 693bce09 003f61a0 0 307549b1 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 307549b1 003f61a0 0 4c9db4f2 0 0 2
PP LP CP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions MannerOfLossOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c9db4f2 003f61a0 0 712e9c59 0 0 2
PP LP CP COP RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 712e9c59 003f61a0 0 e5e049c 0 0 2
PP TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct TableRefçäIF (EXISTS('Table PolicyProduct TableRef';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct TableRef'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e5e049c 003f61a0 0 2cf0428d 0 0 2
PP DHP RP COP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2cf0428d 003f61a0 0 7f535a50 0 0 2
PP DHP RP COP BenefitChangeAllowed AllowedPercent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedPercentçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedPercent';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedPercent';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f535a50 003f61a0 0 30030f4d 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30030f4d 003f61a0 0 4436028a 0 0 2
PP LP CP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenePeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4436028a 003f61a0 0 c80819b 0 0 2
Party Producer License Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table Party Producer License Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer License Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c80819b 003f61a0 0 30052e38 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30052e38 003f61a0 0 20d49a1e 0 0 2
PP Ownership QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 20d49a1e 003f61a0 0 81de164 0 0 2
PP IPInfoExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 81de164 003f61a0 0 6347e82c 0 0 2
PP DHP RP COP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6347e82c 003f61a0 0 7193361d 0 0 2
PP AP FP FOP ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct ExclusionInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct ExclusionInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7193361d 003f61a0 0 5714613 0 0 2
PP AP FP FOP BenefitChangeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5714613 003f61a0 0 3be5268e 0 0 2
PeriodCertainCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PeriodCertainCCçäIF (EXISTS('Table PeriodCertainCC';e_(v_construct(s_keys);0) //PeriodCertainCC_id_extçä) ; çä   // then read from the table çä'Table PeriodCertainCC'[e_(v_construct(s_keys);0) //PeriodCertainCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3be5268e 003f61a0 0 21c63698 0 0 2
IP IPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'key4 lookup'("Table InvestProduct InvestProductInfo JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçä'key4 lookup'("Table InvestProduct InvestProductInfo JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 21c63698 003f61a0 0 4890493e 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4890493e 003f61a0 0 6a2372cd 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a2372cd 003f61a0 0 7c316d9f 0 0 2
BestDayToCallCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table BestDayToCallCCçäIF (EXISTS('Table BestDayToCallCC';e_(v_construct(s_keys);0) //BestDayToCallCC_id_extçä) ; çä   // then read from the table çä'Table BestDayToCallCC'[e_(v_construct(s_keys);0) //BestDayToCallCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c316d9f 003f61a0 0 63005727 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63005727 003f61a0 0 164d8e2d 0 0 2
PP DHP RP UnderwritingClassProduct TempTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 164d8e2d 003f61a0 0 2c1d2e11 0 0 2
PP AP FP FOP AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c1d2e11 003f61a0 0 769b8c57 0 0 2
PP DHP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions MedProviderOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 769b8c57 003f61a0 0 7423438d 0 0 2
Party Producer License Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer License Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7423438d 003f61a0 0 4fff4f15 0 0 2
PP AP IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //taxWithholdingPlaceçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //taxWithholdingPlaceçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4fff4f15 003f61a0 0 4e920368 0 0 2
PP Reward(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct RewardçäIF (EXISTS('Table PolicyProduct Reward';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Reward'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e920368 003f61a0 0 1b3a9213 0 0 2
PP AP IncomePayoutProductOption JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b3a9213 003f61a0 0 5c841b23 0 0 2
PP LP CP ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c841b23 003f61a0 0 4dca6aad 0 0 2
PP AP IncomePayoutProductOption FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptConflict';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptConflict'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dca6aad 003f61a0 0 79a47b0a 0 0 2
Party Carrier License Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee TableRefçäIF (EXISTS('Table Party Carrier License Fee TableRef';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee TableRef'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79a47b0a 003f61a0 0 7ccb0921 0 0 2
Party Producer Registration RegistrationJurisdiction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdictionçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ccb0921 003f61a0 0 66a2a0db 0 0 2
Party Producer CarrierAppointment Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 66a2a0db 003f61a0 0 e240723 0 0 2
PP LP CPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e240723 003f61a0 0 10797f46 0 0 2
PP DHP RP RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct RestrictionInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10797f46 003f61a0 0 2e6a7f3a 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e6a7f3a 003f61a0 0 52fd099c 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52fd099c 003f61a0 0 1be3ef71 0 0 2
PP AP IncomePayoutProductOption AllowedChange AllowedChangeMode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedChangeModeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedChangeMode';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedChangeMode'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1be3ef71 003f61a0 0 2b9f97b7 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef ExtensionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b9f97b7 003f61a0 0 5e082c0b 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e082c0b 003f61a0 0 1541b792 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension GenericRDR(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension GenericRDRçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension GenericRDR';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension GenericRDR'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1541b792 003f61a0 0 4dcfe09d 0 0 2
PP LP CP COP BenefitChangeAllowed RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dcfe09d 003f61a0 0 55a2580a 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55a2580a 003f61a0 0 29e8214b 0 0 2
Party Carrier License Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Attachment AttachmentReferenceçäIF (EXISTS('Table Party Carrier License Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29e8214b 003f61a0 0 14ae66eb 0 0 2
Party EMailAddress(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party EMailAddressçäIF (EXISTS('Table Party EMailAddress';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party EMailAddress'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14ae66eb 003f61a0 0 23dabd51 0 0 2
PP AP FP FOPExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23dabd51 003f61a0 0 5615a519 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5615a519 003f61a0 0 4f3b867e 0 0 2
PP LP CP PremiumRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçäe_(v_construct(s_keys);9); //premiumRateTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);9);  //premiumRateTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f3b867e 003f61a0 0 5fc916b7 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5fc916b7 003f61a0 0 6ee7b61 0 0 2
PP DHP RP UnderwritingClassProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)); //issueGenderçä'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8));e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8));  //issueGenderçä'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8));e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ee7b61 003f61a0 0 72a6c657 0 0 2
PP DHP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72a6c657 003f61a0 0 f56b643 0 0 2
PP DHP RP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f56b643 003f61a0 0 610e5e9b 0 0 2
PP DHP RP COP RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 610e5e9b 003f61a0 0 4d6c616b 0 0 2
PP LP CP ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d6c616b 003f61a0 0 48faaeb3 0 0 2
Party Producer CarrierAppointment Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee JurisdictionApprovalçäIF (EXISTS('Table Party Producer CarrierAppointment Fee JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 48faaeb3 003f61a0 0 b8b29af 0 0 2
Party Producer CarrierAppointment Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer CarrierAppointment Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b8b29af 003f61a0 0 2f588642 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f588642 003f61a0 0 14d4d35 0 0 2
BusinessMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table BusinessMethodCCçäIF (EXISTS('Table BusinessMethodCC';e_(v_construct(s_keys);0) //BusinessMethodCC_id_extçä) ; çä   // then read from the table çä'Table BusinessMethodCC'[e_(v_construct(s_keys);0) //BusinessMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14d4d35 003f61a0 0 2e5f6c21 0 0 2
PP AP FP FOP AdditionalArrClassification(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalArrClassificationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalArrClassification';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalArrClassification'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e5f6c21 003f61a0 0 b684d29 0 0 2
PP AP FP FOPExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b684d29 003f61a0 0 25be5bbd 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25be5bbd 003f61a0 0 75b1ca4b 0 0 2
PP DHP RP COP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75b1ca4b 003f61a0 0 598ef647 0 0 2
SourceOfFundsCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceOfFundsCCçäIF (EXISTS('Table SourceOfFundsCC';e_(v_construct(s_keys);0) //SourceOfFundsCC_id_extçä) ; çä   // then read from the table çä'Table SourceOfFundsCC'[e_(v_construct(s_keys);0) //SourceOfFundsCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 598ef647 003f61a0 0 519abe1 0 0 2
PP DHP RP COP UnderwritingClassProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key");e_(v_construct(s_keys);11)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key");e_(v_construct(s_keys);11)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 519abe1 003f61a0 0 677a5f8a 0 0 2
IP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee JurisdictionApprovalçäIF (EXISTS('Table InvestProduct Fee JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçä'key3 lookup'("Table InvestProduct Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct Fee JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçä'key3 lookup'("Table InvestProduct Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 677a5f8a 003f61a0 0 2c7929f6 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c7929f6 003f61a0 0 f7fbf9b 0 0 2
PP LP CP UnderwritingClassProduct UndClassGuidelineInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f7fbf9b 003f61a0 0 75633fbf 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75633fbf 003f61a0 0 985117d 0 0 2
PP LP CP COP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 985117d 003f61a0 0 4a98966 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a98966 003f61a0 0 7a1bfb4a 0 0 2
PP AP FP FOP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a1bfb4a 003f61a0 0 7e494f1c 0 0 2
PP AP FP FOP PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e494f1c 003f61a0 0 75f6233f 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75f6233f 003f61a0 0 170315e 0 0 2
PP AP FP FOPExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //rateVariationCodeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //rateVariationCodeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 170315e 003f61a0 0 1c56e541 0 0 2
PP APExt ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c56e541 003f61a0 0 6db90cbe 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6db90cbe 003f61a0 0 4288a06a 0 0 2
PPExt QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4288a06a 003f61a0 0 a38c49f 0 0 2
PP AP FP FOP IncomeOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a38c49f 003f61a0 0 6b2cc15e 0 0 2
PP LP CP DeathBenefitOptionInfo RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b2cc15e 003f61a0 0 6e8f7c40 0 0 2
PP AP IncomePayoutProductOption DateCollection(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption DateCollectionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption DateCollection';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption DateCollection'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e8f7c40 003f61a0 0 1f3c278c 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f3c278c 003f61a0 0 75016916 0 0 2
PP DeliveryInfo DeliveryDestination(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DeliveryInfo DeliveryDestinationçäIF (EXISTS('Table PolicyProduct DeliveryInfo DeliveryDestination';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DeliveryInfo DeliveryDestination'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75016916 003f61a0 0 5c302bc3 0 0 2
PP LP ArrangementProduct ArrangementOptProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c302bc3 003f61a0 0 d5c31ab 0 0 2
PP DHP RP COP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d5c31ab 003f61a0 0 4d5ea106 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d5ea106 003f61a0 0 737283c 0 0 2
DistributionAgreement PPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçä'key3 lookup'("Table DistributionAgreement PolicyProductInfo JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçä'key3 lookup'("Table DistributionAgreement PolicyProductInfo JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 737283c 003f61a0 0 59949a2 0 0 2
PP CMProduct CommOptionAvailable FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable FeatureOptConflictçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable FeatureOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable FeatureOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59949a2 003f61a0 0 5f6992ef 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f6992ef 003f61a0 0 12a002f2 0 0 2
PP LP ArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12a002f2 003f61a0 0 f55ff71 0 0 2
PP Authorization QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f55ff71 003f61a0 0 a24f440 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a24f440 003f61a0 0 23b3c7d7 0 0 2
IP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct AttachmentçäIF (EXISTS('Table InvestProduct Attachment';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct Attachment'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23b3c7d7 003f61a0 0 730d3204 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 730d3204 003f61a0 0 7267a610 0 0 2
IP IPInfo Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7267a610 003f61a0 0 437db9ce 0 0 2
PP Ownership AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationshipçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 437db9ce 003f61a0 0 6b31f225 0 0 2
PP LP CP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ElimPeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b31f225 003f61a0 0 212f9bad 0 0 2
PP AP FP FOP RoleRelationRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 212f9bad 003f61a0 0 b5534f1 0 0 2
PP Ownership JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçä'key3 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçä'key3 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b5534f1 003f61a0 0 6755384d 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6755384d 003f61a0 0 7a502e2d 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a502e2d 003f61a0 0 7afa8abc 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7afa8abc 003f61a0 0 14109ba9 0 0 2
PP LP CP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14109ba9 003f61a0 0 24bfbda3 0 0 2
DefLifeInsMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DefLifeInsMethodCCçäIF (EXISTS('Table DefLifeInsMethodCC';e_(v_construct(s_keys);0) //DefLifeInsMethodCC_id_extçä) ; çä   // then read from the table çä'Table DefLifeInsMethodCC'[e_(v_construct(s_keys);0) //DefLifeInsMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24bfbda3 003f61a0 0 3206377e 0 0 2
PP DHP RP UnderwritingClassProduct AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3206377e 003f61a0 0 3ffa5919 0 0 2
PP LP CP COP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions MannerOfLossOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ffa5919 003f61a0 0 4ff40a3f 0 0 2
PP AP FP FOP BenefitChangeAllowed AllowedChangeMode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedChangeModeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedChangeMode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedChangeMode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ff40a3f 003f61a0 0 403a3bba 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 403a3bba 003f61a0 0 7adbfea0 0 0 2
PP AP FP FOP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7adbfea0 003f61a0 0 35068c26 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35068c26 003f61a0 0 467ba0df 0 0 2
PP DHP RP COPExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 467ba0df 003f61a0 0 43309e8a 0 0 2
PP AP FP FOP SurrenderChargeSchedule ChargePctSchedule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule ChargePctScheduleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule ChargePctSchedule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule ChargePctSchedule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43309e8a 003f61a0 0 15d6ccac 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude EntityTypeçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude EntityType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude EntityType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15d6ccac 003f61a0 0 2555bc8 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef ExtensionçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2555bc8 003f61a0 0 2121dcc6 0 0 2
PP LP CP COP PremiumRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //mortalityAssumptionTypeçäe_(v_construct(s_keys);11) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);11) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2121dcc6 003f61a0 0 a77d6ca 0 0 2
PP DHP RP COP RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct RestrictionInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a77d6ca 003f61a0 0 22c01a31 0 0 2
PP LP CP CashValueRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22c01a31 003f61a0 0 646f70cb 0 0 2
PP AP IncomePayoutProductOption Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 646f70cb 003f61a0 0 5ad532f6 0 0 2
PP DHP RP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions DeductionOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ad532f6 003f61a0 0 1ce6bd0c 0 0 2
PP AP FP FOP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ce6bd0c 003f61a0 0 52a0b011 0 0 2
AgeRestrictionRoleCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AgeRestrictionRoleCCçäIF (EXISTS('Table AgeRestrictionRoleCC';e_(v_construct(s_keys);0) //AgeRestrictionRoleCC_id_extçä) ; çä   // then read from the table çä'Table AgeRestrictionRoleCC'[e_(v_construct(s_keys);0) //AgeRestrictionRoleCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52a0b011 003f61a0 0 149ef833 0 0 2
PP LP CP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 149ef833 003f61a0 0 24078d61 0 0 2
PP DHP RP ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24078d61 003f61a0 0 65c76fbc 0 0 2
Party Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Attachment SignatureInfoçäIF (EXISTS('Table Party Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65c76fbc 003f61a0 0 61c8fe6a 0 0 2
Party DesignationInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party DesignationInfoçäIF (EXISTS('Table Party DesignationInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party DesignationInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61c8fe6a 003f61a0 0 4ce3f7f 0 0 2
PP AP FP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'key3 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'key3 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ce3f7f 003f61a0 0 638e0714 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 638e0714 003f61a0 0 12811c13 0 0 2
PP Dividend TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Dividend TableRefçäIF (EXISTS('Table PolicyProduct Dividend TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //divTypeçäe_(v_construct(s_keys);5) //divOYTOptTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Dividend TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //divTypeçäe_(v_construct(s_keys);5) //divOYTOptTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12811c13 003f61a0 0 1ead1ed3 0 0 2
PP DHP RP COP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ead1ed3 003f61a0 0 4c1b7d2f 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c1b7d2f 003f61a0 0 7e4d639b 0 0 2
PP LP CP COP ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e4d639b 003f61a0 0 13cdc3bc 0 0 2
Party Producer ProducerAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer ProducerAgreementçäIF (EXISTS('Table Party Producer ProducerAgreement';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer ProducerAgreement'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13cdc3bc 003f61a0 0 26eeb51e 0 0 2
PP DHP RP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 26eeb51e 003f61a0 0 1c6e93bf 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c6e93bf 003f61a0 0 3a1a3a50 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a1a3a50 003f61a0 0 55d20304 0 0 2
PP IPInfoExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55d20304 003f61a0 0 3153c613 0 0 2
PP AP FP FOP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MedProviderOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3153c613 003f61a0 0 43b55501 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43b55501 003f61a0 0 4f5555dd 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f5555dd 003f61a0 0 69fe7b4c 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69fe7b4c 003f61a0 0 14588942 0 0 2
PP LP CP COP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions OccupClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14588942 003f61a0 0 72a9f4c2 0 0 2
PP DHP RP COP DividendRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRateçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //dividendRateTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //dividendRateTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72a9f4c2 003f61a0 0 632bf413 0 0 2
PP LP CP COP ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 632bf413 003f61a0 0 526605d 0 0 2
PPExt PolicyComponentNonForRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension PolicyComponentNonForRuleçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension PolicyComponentNonForRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //divTypeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension PolicyComponentNonForRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //divTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 526605d 003f61a0 0 64bd7766 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64bd7766 003f61a0 0 63a3dcaa 0 0 2
PP LP CP DeathBenefitOptionInfo Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63a3dcaa 003f61a0 0 538ff45c 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 538ff45c 003f61a0 0 9d60dfc 0 0 2
PP LoanProvision RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9d60dfc 003f61a0 0 74db49d4 0 0 2
PP AP FP FeatureConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 74db49d4 003f61a0 0 1e0d9097 0 0 2
PP AP FP FOP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8);  //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e0d9097 003f61a0 0 7f2042e7 0 0 2
PP IPInfo FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f2042e7 003f61a0 0 81b6e1 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 81b6e1 003f61a0 0 226db488 0 0 2
IP IPInfo Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo FeeçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 226db488 003f61a0 0 1f60697a 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f60697a 003f61a0 0 1333ca9c 0 0 2
Party Address(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party AddressçäIF (EXISTS('Table Party Address';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Address'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1333ca9c 003f61a0 0 166d0fa1 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 166d0fa1 003f61a0 0 4d4f019 0 0 2
PP LP CP COP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions HealthServiceOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d4f019 003f61a0 0 a49764a 0 0 2
PP AP FP FOP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a49764a 003f61a0 0 3db9626e 0 0 2
PP DHP RP COP PremiumRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäe_(v_construct(s_keys);8); //premiumRateTypeçä'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäe_(v_construct(s_keys);8); //premiumRateTypeçä'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3db9626e 003f61a0 0 330e3ab2 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 330e3ab2 003f61a0 0 39143b12 0 0 2
PolicyIssueTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyIssueTypeCCçäIF (EXISTS('Table PolicyIssueTypeCC';e_(v_construct(s_keys);0) //PolicyIssueTypeCC_id_extçä) ; çä   // then read from the table çä'Table PolicyIssueTypeCC'[e_(v_construct(s_keys);0) //PolicyIssueTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39143b12 003f61a0 0 6f172beb 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6f172beb 003f61a0 0 2d010eeb 0 0 2
PP DHP RP COP ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d010eeb 003f61a0 0 5b8d6594 0 0 2
PP AP FP FOP RequisiteIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RequisiteInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RequisiteInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RequisiteInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b8d6594 003f61a0 0 107f5d48 0 0 2
PP LP CP COP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 107f5d48 003f61a0 0 499624fd 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValueçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 499624fd 003f61a0 0 71b6574 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //transTypeçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //transTypeçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71b6574 003f61a0 0 3d32ac75 0 0 2
PP PPInfo CommOptionAvailable FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable FeatureOptConflictçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable FeatureOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable FeatureOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d32ac75 003f61a0 0 163541a9 0 0 2
Party Producer Registration RegistrationJurisdiction Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdiction AttachmentçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 163541a9 003f61a0 0 57f459fe 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDefçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4) //axisNameçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57f459fe 003f61a0 0 501a381d 0 0 2
PP IPInfoExt MVA(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVAçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 501a381d 003f61a0 0 3f56049d 0 0 2
DistributionAgreement PPInfo CommissionScheduleKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommissionScheduleKeyçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommissionScheduleKey';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommissionScheduleKey'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f56049d 003f61a0 0 16c1e50e 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16c1e50e 003f61a0 0 12c46555 0 0 2
PP Ownership AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12c46555 003f61a0 0 5a3b61b 0 0 2
PP LP CP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ConditionTypeOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a3b61b 003f61a0 0 23426de1 0 0 2
PPExt Activity Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //activityTypeCodeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //activityTypeCodeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23426de1 003f61a0 0 4ad50ce3 0 0 2
PP APExt ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ad50ce3 003f61a0 0 683af312 0 0 2
PP DHP RP COP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 683af312 003f61a0 0 2cb05914 0 0 2
DistributionAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreementçäIF (EXISTS('Table DistributionAgreement';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2cb05914 003f61a0 0 7a1578bb 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a1578bb 003f61a0 0 6fb9a80c 0 0 2
IP IPInfo Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fb9a80c 003f61a0 0 f319ee5 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpressionçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f319ee5 003f61a0 0 3aa253bc 0 0 2
PP IPInfoExt MVA TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3aa253bc 003f61a0 0 218bc25f 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 218bc25f 003f61a0 0 6a3b1f6f 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a3b1f6f 003f61a0 0 1097c10b 0 0 2
LineOfAuthorityCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LineOfAuthorityCCçäIF (EXISTS('Table LineOfAuthorityCC';e_(v_construct(s_keys);0) //LineOfAuthorityCC_id_extçä) ; çä   // then read from the table çä'Table LineOfAuthorityCC'[e_(v_construct(s_keys);0) //LineOfAuthorityCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1097c10b 003f61a0 0 2e29c945 0 0 2
PP DHP RP COPExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //rateVariationCodeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e29c945 003f61a0 0 329a5610 0 0 2
PP IPInfo Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo FeeçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 329a5610 003f61a0 0 902be58 0 0 2
PP IPInfoExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 902be58 003f61a0 0 4e547a32 0 0 2
PP IPInfo Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e547a32 003f61a0 0 30169937 0 0 2
PP PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30169937 003f61a0 0 47a7b1b7 0 0 2
Party Carrier License Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee JurisdictionApprovalçäIF (EXISTS('Table Party Carrier License Fee JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Carrier License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Carrier License Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Carrier License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47a7b1b7 003f61a0 0 5734040c 0 0 2
PP AP FP FOP AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5734040c 003f61a0 0 18c61102 0 0 2
PP DHP RP UnderwritingClassProduct UnderwritingClassProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLatçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18c61102 003f61a0 0 511c98e6 0 0 2
LevelizationOptionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCCçäIF (EXISTS('Table LevelizationOptionCC';e_(v_construct(s_keys);0) //LevelizationOptionCC_id_extçä) ; çä   // then read from the table çä'Table LevelizationOptionCC'[e_(v_construct(s_keys);0) //LevelizationOptionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 511c98e6 003f61a0 0 3e8b1183 0 0 2
PP DHP RP UnderwritingClassProduct UndClassGuidelineInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e8b1183 003f61a0 0 3ef3ce08 0 0 2
PP DHP RP COP CovOptionProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct CovOptionProductXLatçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct CovOptionProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct CovOptionProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ef3ce08 003f61a0 0 25d4e00 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25d4e00 003f61a0 0 1fdcf6d4 0 0 2
PP Authorization(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AuthorizationçäIF (EXISTS('Table PolicyProduct Authorization';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1fdcf6d4 003f61a0 0 5435d78a 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5435d78a 003f61a0 0 1209fee5 0 0 2
PP LP CP COP COIRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //mortalityAssumptionTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //mortalityAssumptionTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1209fee5 003f61a0 0 644200de 0 0 2
ContingentJointCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ContingentJointCCçäIF (EXISTS('Table ContingentJointCC';e_(v_construct(s_keys);0) //ContingentJointCC_id_extçä) ; çä   // then read from the table çä'Table ContingentJointCC'[e_(v_construct(s_keys);0) //ContingentJointCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 644200de 003f61a0 0 75eacab9 0 0 2
PP AP FP FOPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75eacab9 003f61a0 0 492be180 0 0 2
PP LP CP COP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 492be180 003f61a0 0 a00c96a 0 0 2
PP DHP RP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions MedProviderOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a00c96a 003f61a0 0 554a411d 0 0 2
PP DHP RP COPExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 554a411d 003f61a0 0 46fab4c5 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOptionçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46fab4c5 003f61a0 0 37155184 0 0 2
PP DHP RP COP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37155184 003f61a0 0 4f8025e 0 0 2
PP DHP RP COP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f8025e 003f61a0 0 7e166d07 0 0 2
Party Carrier License LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License LineOfAuthorityçäIF (EXISTS('Table Party Carrier License LineOfAuthority';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table Party Carrier License LineOfAuthority'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e166d07 003f61a0 0 4f945a57 0 0 2
PP DHP RP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ProviderClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f945a57 003f61a0 0 a2f55cb 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a2f55cb 003f61a0 0 440ea21f 0 0 2
PP LP CP COP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions EmploymentClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 440ea21f 003f61a0 0 5a0b9fc2 0 0 2
PP AP IncomePayoutProductOption Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a0b9fc2 003f61a0 0 162edd70 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 162edd70 003f61a0 0 a1aeb6c 0 0 2
PP AP IncomePayoutProductOption AllocTypeProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a1aeb6c 003f61a0 0 2419bfe2 0 0 2
PP IPInfoExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2419bfe2 003f61a0 0 3f138978 0 0 2
Party URL(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party URLçäIF (EXISTS('Table Party URL';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party URL'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f138978 003f61a0 0 77a602ab 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 77a602ab 003f61a0 0 6dac8349 0 0 2
PP LP CP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6dac8349 003f61a0 0 51e86505 0 0 2
IP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee TableRefçäIF (EXISTS('Table InvestProduct Fee TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee TableRef'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51e86505 003f61a0 0 7e6e2185 0 0 2
PP LP PolicyOptionInfo Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo Attachment';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo Attachment'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e6e2185 003f61a0 0 2aef0779 0 0 2
CreditCardTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CreditCardTypeCCçäIF (EXISTS('Table CreditCardTypeCC';e_(v_construct(s_keys);0) //CreditCardTypeCC_id_extçä) ; çä   // then read from the table çä'Table CreditCardTypeCC'[e_(v_construct(s_keys);0) //CreditCardTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2aef0779 003f61a0 0 345eac35 0 0 2
PP AP FP FOP PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçäe_(v_construct(s_keys);10); //balanceTypeçäe_(v_construct(s_keys);11) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçäe_(v_construct(s_keys);10);  //balanceTypeçäe_(v_construct(s_keys);11) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 345eac35 003f61a0 0 2906eae7 0 0 2
PP LP CP COP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions MedProviderOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2906eae7 003f61a0 0 5ee2afe1 0 0 2
PP AP FP FOP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ee2afe1 003f61a0 0 7dca5474 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7dca5474 003f61a0 0 4c901ea5 0 0 2
PP LP CP UnderwritingClassProduct TempTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c901ea5 003f61a0 0 1ceb7129 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ceb7129 003f61a0 0 332a09d1 0 0 2
PP LP ArrangementProduct ArrangementOptProduct TaxWithholdingProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //taxWithholdingPlaceçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //taxWithholdingPlaceçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 332a09d1 003f61a0 0 5e5ffd91 0 0 2
PP LP ArrangementProduct ArrangementOptProduct NumIP DestIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct DestInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct DestInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct DestInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e5ffd91 003f61a0 0 4c60e4d1 0 0 2
Party Producer CarrierAppointment Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee TableRefçäIF (EXISTS('Table Party Producer CarrierAppointment Fee TableRef';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee TableRef'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c60e4d1 003f61a0 0 4a3d9641 0 0 2
TrustTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table TrustTypeCCçäIF (EXISTS('Table TrustTypeCC';e_(v_construct(s_keys);0) //TrustTypeCC_id_extçä) ; çä   // then read from the table çä'Table TrustTypeCC'[e_(v_construct(s_keys);0) //TrustTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a3d9641 003f61a0 0 35b4c897 0 0 2
Party Producer ProducerAgreement DistributionLevel(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer ProducerAgreement DistributionLevelçäIF (EXISTS('Table Party Producer ProducerAgreement DistributionLevel';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer ProducerAgreement DistributionLevel'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35b4c897 003f61a0 0 3908e339 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpressionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3908e339 003f61a0 0 5ee54b3d 0 0 2
PP LP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProductçäIF (EXISTS('Table PolicyProduct LifeProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ee54b3d 003f61a0 0 664aa101 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 664aa101 003f61a0 0 3291d861 0 0 2
PP AP FP FOP AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3291d861 003f61a0 0 5b91cb01 0 0 2
PP DHP RP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ElimPeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b91cb01 003f61a0 0 55e502ab 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55e502ab 003f61a0 0 1feda21d 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1feda21d 003f61a0 0 3e5ff3aa 0 0 2
PP AP IncomePayoutProductOption AllowedChange AllowedTimingBasis(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedTimingBasisçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedTimingBasis';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedTimingBasis'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e5ff3aa 003f61a0 0 2a8ee474 0 0 2
PP DHP RP OLifEExtension RiderProductExtension LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a8ee474 003f61a0 0 4954f644 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4954f644 003f61a0 0 3cf8324b 0 0 2
PP AP FP IncomeOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3cf8324b 003f61a0 0 71ec82d7 0 0 2
PP DHP RP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct FeeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71ec82d7 003f61a0 0 1baf2e14 0 0 2
PP DHP RP COP BenefitChangeAllowed ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1baf2e14 003f61a0 0 28e9af86 0 0 2
PP DistributionChannelInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DistributionChannelInfoçäIF (EXISTS('Table PolicyProduct DistributionChannelInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DistributionChannelInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 28e9af86 003f61a0 0 2dfc0a53 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2dfc0a53 003f61a0 0 4daee646 0 0 2
PP DHP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4daee646 003f61a0 0 3fdff604 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3fdff604 003f61a0 0 438e0cfc 0 0 2
Party Producer License Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee TableRefçäIF (EXISTS('Table Party Producer License Fee TableRef';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee TableRef'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 438e0cfc 003f61a0 0 342f28ac 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 342f28ac 003f61a0 0 5235e819 0 0 2
PP IPInfoExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //rateVariationCodeçä'key4 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //rateVariationCodeçä'key4 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5235e819 003f61a0 0 5207c68b 0 0 2
PP APExt QualTypeLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension QualTypeLimitsçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension QualTypeLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //qualifiedPlançä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension QualTypeLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //qualifiedPlançä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5207c68b 003f61a0 0 1a908965 0 0 2
PP DHP RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RestrictionInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RestrictionInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RestrictionInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a908965 003f61a0 0 3e9f14cc 0 0 2
COLIndexCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table COLIndexCCçäIF (EXISTS('Table COLIndexCC';e_(v_construct(s_keys);0) //COLIndexCC_id_extçä) ; çä   // then read from the table çä'Table COLIndexCC'[e_(v_construct(s_keys);0) //COLIndexCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e9f14cc 003f61a0 0 61e754b7 0 0 2
LoanIntMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LoanIntMethodCCçäIF (EXISTS('Table LoanIntMethodCC';e_(v_construct(s_keys);0) //LoanIntMethodCC_id_extçä) ; çä   // then read from the table çä'Table LoanIntMethodCC'[e_(v_construct(s_keys);0) //LoanIntMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61e754b7 003f61a0 0 34ecf129 0 0 2
PP AP FP FOP AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34ecf129 003f61a0 0 7712ba62 0 0 2
PP DHP RP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7712ba62 003f61a0 0 41893c73 0 0 2
DistributionAgreement PPInfo CommOptionAvailable JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçä'key4 lookup'("Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçä'key4 lookup'("Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41893c73 003f61a0 0 5e4506f9 0 0 2
IP RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation RateVariationByDurationçäIF (EXISTS('Table InvestProduct RateVariation RateVariationByDuration';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation RateVariationByDuration'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e4506f9 003f61a0 0 598706bb 0 0 2
LineOfAuthorityCC LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LineOfAuthorityCC LineOfAuthority ExamçäIF (EXISTS('Table LineOfAuthorityCC LineOfAuthority Exam';e_(v_construct(s_keys);0); //lineOfAuthorityTypeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table LineOfAuthorityCC LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 598706bb 003f61a0 0 48b1d34d 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 48b1d34d 003f61a0 0 1cd95ef3 0 0 2
Party Producer License Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee Attachment SignatureInfoçäIF (EXISTS('Table Party Producer License Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer License Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1cd95ef3 003f61a0 0 162db620 0 0 2
CommSchedule CommFormula TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommSchedule CommFormula TableRef JurisdictionApprovalçäIF (EXISTS('Table CommSchedule CommFormula TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //commScheduleCodeçä'key3 lookup'("Table CommSchedule CommFormula TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table CommSchedule CommFormula TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //commScheduleCodeçä'key3 lookup'("Table CommSchedule CommFormula TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 162db620 003f61a0 0 5f24d076 0 0 2
PP PPInfo QualifiedPlanEntityExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExcludeçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f24d076 003f61a0 0 1cf32ee4 0 0 2
PP AP FP FOP NumIP SourceIP RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct RateVariationKeyçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1cf32ee4 003f61a0 0 7b6bd8b 0 0 2
PP DHP RP COP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9); //sequenceNumberçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b6bd8b 003f61a0 0 35c20e47 0 0 2
IP IPInfoExt IndexCalc(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalcçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //periodModeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //periodModeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35c20e47 003f61a0 0 6906d818 0 0 2
PP PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6906d818 003f61a0 0 230507a8 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 230507a8 003f61a0 0 4d1e604a 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d1e604a 003f61a0 0 2f4e0b22 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f4e0b22 003f61a0 0 7019941b 0 0 2
PP AP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7019941b 003f61a0 0 419f5e97 0 0 2
PP LP CP DividendRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //dividendRateTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //dividendRateTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 419f5e97 003f61a0 0 d6b475 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d6b475 003f61a0 0 7933822f 0 0 2
IP IPInfoExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7933822f 003f61a0 0 6445c8e9 0 0 2
Party Producer DesignationInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer DesignationInfoçäIF (EXISTS('Table Party Producer DesignationInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer DesignationInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6445c8e9 003f61a0 0 579486fe 0 0 2
IP IPInfoExt MVA(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVAçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 579486fe 003f61a0 0 392c43bd 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 392c43bd 003f61a0 0 2edca4c8 0 0 2
PP DHP RP COP UnderwritingClassProduct UndClassGuidelineInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key") //UWClassProd_keyçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2edca4c8 003f61a0 0 557b5ba2 0 0 2
PP LP ArrangementProduct ArrangementOptProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçä'key3 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçä'key3 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 557b5ba2 003f61a0 0 4c96c307 0 0 2
PP LP CP COP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //feeTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //feeTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c96c307 003f61a0 0 37737e11 0 0 2
PP Reward TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Reward TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Reward TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //rewardResultTypeçä'key3 lookup'("Table PolicyProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Reward TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //rewardResultTypeçä'key3 lookup'("Table PolicyProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37737e11 003f61a0 0 5e98d36e 0 0 2
PP AP FP FOP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e98d36e 003f61a0 0 69a6811b 0 0 2
IP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct Fee Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table InvestProduct Fee Attachment SignatureInfo'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69a6811b 003f61a0 0 6c92a47d 0 0 2
LineOfAuthorityCC LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LineOfAuthorityCC LineOfAuthorityçäIF (EXISTS('Table LineOfAuthorityCC LineOfAuthority';e_(v_construct(s_keys);0) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table LineOfAuthorityCC LineOfAuthority'[e_(v_construct(s_keys);0) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c92a47d 003f61a0 0 6defa51e 0 0 2
PP AP IncomePayoutProductOption AnnualIndexOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AnnualIndexOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AnnualIndexOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AnnualIndexOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6defa51e 003f61a0 0 40258889 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40258889 003f61a0 0 5e24106d 0 0 2
PP AP FP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e24106d 003f61a0 0 70b13a1e 0 0 2
PP AP FP FOP TargetAgeRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TargetAgeRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TargetAgeRestriction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TargetAgeRestriction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 70b13a1e 003f61a0 0 36fa13c2 0 0 2
PP DHP RP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36fa13c2 003f61a0 0 6f8b9801 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6f8b9801 003f61a0 0 1d38d4c2 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d38d4c2 003f61a0 0 1703964e 0 0 2
PP LP CP COPExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //rateVariationCodeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //rateVariationCodeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1703964e 003f61a0 0 656d7af6 0 0 2
IP IPInfo Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 656d7af6 003f61a0 0 1e0baa71 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e0baa71 003f61a0 0 2b4f4c2e 0 0 2
PP LP CP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions EmploymentClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b4f4c2e 003f61a0 0 2d69459b 0 0 2
PP LP ArrangementProduct ArrangementOptProduct SourceIP RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct SourceInvestProduct RateVariationKeyçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct SourceInvestProduct RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct SourceInvestProduct RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d69459b 003f61a0 0 64b98474 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64b98474 003f61a0 0 7aaf590b 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7aaf590b 003f61a0 0 1e41996f 0 0 2
DistributionAgreement PPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfoçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e41996f 003f61a0 0 380d56aa 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 380d56aa 003f61a0 0 3f3f966b 0 0 2
PPExt QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f3f966b 003f61a0 0 68c09754 0 0 2
PP AP IncomePayoutProductOption FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptRequisite';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptRequisite'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 68c09754 003f61a0 0 51788f6c 0 0 2
PP DHP RP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51788f6c 003f61a0 0 7e45b40e 0 0 2
PP LP CP COP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //feeTypeçäe_(v_construct(s_keys);11) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //feeTypeçäe_(v_construct(s_keys);11) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e45b40e 003f61a0 0 9bad408 0 0 2
PP LP CP COP UnderwritingClassProduct AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9bad408 003f61a0 0 3021dfd8 0 0 2
PP DHP RP COP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //marketTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //marketTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3021dfd8 003f61a0 0 3a1d927 0 0 2
PP AP FeatureTransactionProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a1d927 003f61a0 0 4871ed3e 0 0 2
PP LP CP CashValueRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CashValueRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4871ed3e 003f61a0 0 34f1bbf6 0 0 2
Party Phone(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party PhoneçäIF (EXISTS('Table Party Phone';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Phone'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34f1bbf6 003f61a0 0 6d10c666 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d10c666 003f61a0 0 7959c805 0 0 2
PP AP FP FOP SurrenderChargeSchedule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeScheduleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7959c805 003f61a0 0 5070cb20 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5070cb20 003f61a0 0 3c6725d3 0 0 2
Party Producer Registration RegistrationJurisdiction Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdiction Attachment SignatureInfoçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c6725d3 003f61a0 0 59d25a8f 0 0 2
PP AP IncomePayoutProductOption AllowedChange AllowedPercent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedPercentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedPercent';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedPercent'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59d25a8f 003f61a0 0 7626608e 0 0 2
PP PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7626608e 003f61a0 0 156054b6 0 0 2
PP IPInfoExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 156054b6 003f61a0 0 4e5a4a53 0 0 2
PP LP CP COP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct FeeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e5a4a53 003f61a0 0 3fc4f1e7 0 0 2
PP DHP RP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ConditionTypeOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3fc4f1e7 003f61a0 0 593bd85a 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 593bd85a 003f61a0 0 16757122 0 0 2
PP AP FP FOP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ConditionTypeOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16757122 003f61a0 0 282748e2 0 0 2
PP DHP RP COP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 282748e2 003f61a0 0 5e62cf6c 0 0 2
PP DHP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e62cf6c 003f61a0 0 496803bd 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 496803bd 003f61a0 0 6496a1c8 0 0 2
PP DHP FeatureTransactionProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6496a1c8 003f61a0 0 4103fe5d 0 0 2
IP IPInfo RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo RateVariationKeyçäIF (EXISTS('Table InvestProduct InvestProductInfo RateVariationKey';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo RateVariationKey';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4103fe5d 003f61a0 0 bb69d7d 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 bb69d7d 003f61a0 0 77b2b5ab 0 0 2
PP LP FeatureTransactionProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct FeatureTransactionProductçäIF (EXISTS('Table PolicyProduct LifeProduct FeatureTransactionProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct FeatureTransactionProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 77b2b5ab 003f61a0 0 57b62aa0 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLatçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57b62aa0 003f61a0 0 5d60a9a4 0 0 2
PP DHP RP COPExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d60a9a4 003f61a0 0 193fb2d8 0 0 2
PP LP CP RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct RestrictionInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 193fb2d8 003f61a0 0 928e15 0 0 2
DistributionAgreement PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailableçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 928e15 003f61a0 0 45227b18 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 45227b18 003f61a0 0 29a726e2 0 0 2
PP LP CP COP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenePeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29a726e2 003f61a0 0 78014e5 0 0 2
IP IPInfo Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78014e5 003f61a0 0 580aace8 0 0 2
PP CMProduct CommOptionAvailable ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable ExclusionInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable ExclusionInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 580aace8 003f61a0 0 42c55968 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42c55968 003f61a0 0 1bf461e9 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1bf461e9 003f61a0 0 6d16eaab 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d16eaab 003f61a0 0 367530e6 0 0 2
PP DHP RP ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 367530e6 003f61a0 0 303e4e9c 0 0 2
PP AP FP FOP NumIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 303e4e9c 003f61a0 0 5e8f7128 0 0 2
Party Phone SpeedDial(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Phone SpeedDialçäIF (EXISTS('Table Party Phone SpeedDial';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Phone SpeedDial'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e8f7128 003f61a0 0 25f33cd7 0 0 2
CommSchedule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommScheduleçäIF (EXISTS('Table CommSchedule';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä) ; çä   // then read from the table çä'Table CommSchedule'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25f33cd7 003f61a0 0 1d2a8c75 0 0 2
PP LP CP TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d2a8c75 003f61a0 0 7e2cea71 0 0 2
PP DHP RP COPExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e2cea71 003f61a0 0 292f1e9a 0 0 2
Party Producer License LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License LineOfAuthorityçäIF (EXISTS('Table Party Producer License LineOfAuthority';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table Party Producer License LineOfAuthority'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 292f1e9a 003f61a0 0 df4b03c 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3); //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3);  //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 df4b03c 003f61a0 0 5d58d4e9 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d58d4e9 003f61a0 0 f48ed48 0 0 2
PP NonForProvision AllowedSubstandard(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct NonForProvision AllowedSubstandardçäIF (EXISTS('Table PolicyProduct NonForProvision AllowedSubstandard';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //nonFortProvçäe_(v_construct(s_keys);5); //nonForProvisionKeyçäe_(v_construct(s_keys);6) //substandardTypeçä) ; çä   // then read from the table çä'Table PolicyProduct NonForProvision AllowedSubstandard'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //nonFortProvçäe_(v_construct(s_keys);5);  //nonForProvisionKeyçäe_(v_construct(s_keys);6) //substandardTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f48ed48 003f61a0 0 53522445 0 0 2
PP DHP RP COP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 53522445 003f61a0 0 442d956a 0 0 2
PP AP FP FOP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 442d956a 003f61a0 0 3f2f7fc2 0 0 2
PP AP FP FOP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f2f7fc2 003f61a0 0 583f9296 0 0 2
PP AP FP FOP AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 583f9296 003f61a0 0 6c49d948 0 0 2
PP LP LifeUSAProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProductçäIF (EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct LifeUSAProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c49d948 003f61a0 0 31593c39 0 0 2
PP DHP RP PremiumRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //mortalityAssumptionTypeçäe_(v_construct(s_keys);6); //premiumRateTypeçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);6);  //premiumRateTypeçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31593c39 003f61a0 0 2240e43b 0 0 2
PP AP FP FOP TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2240e43b 003f61a0 0 637ef957 0 0 2
IP IPInfoExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 637ef957 003f61a0 0 7f708cc3 0 0 2
PP AP IncomePayoutProductOption IncomeOptionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption IncomeOptionInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption IncomeOptionInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption IncomeOptionInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f708cc3 003f61a0 0 a6488b3 0 0 2
PP LP CP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ElimPeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a6488b3 003f61a0 0 58d526ab 0 0 2
IP IPInfoExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58d526ab 003f61a0 0 6ce64bab 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ce64bab 003f61a0 0 3f5554 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f5554 003f61a0 0 39571b13 0 0 2
PP DHP RP COP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39571b13 003f61a0 0 6670118c 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef ExtensionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4) //axisNameçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6670118c 003f61a0 0 725fdc64 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //rateVariationCodeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //rateVariationCodeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 725fdc64 003f61a0 0 ca24d3c 0 0 2
Party Producer CarrierAppointment LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment LineOfAuthority ExamçäIF (EXISTS('Table Party Producer CarrierAppointment LineOfAuthority Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ca24d3c 003f61a0 0 4dae43cc 0 0 2
PP IPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dae43cc 003f61a0 0 585ff6 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8);  //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 585ff6 003f61a0 0 3f391e11 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f391e11 003f61a0 0 5f427847 0 0 2
PP LP CP COPExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f427847 003f61a0 0 10824cf 0 0 2
IP RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct RateVariation Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation Attachment AttachmentReference'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10824cf 003f61a0 0 190371c3 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 190371c3 003f61a0 0 64deba52 0 0 2
PP LP CP CashValueRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CashValueRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CashValueRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CashValueRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64deba52 003f61a0 0 19ffa43a 0 0 2
PP LP CP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions MedProviderOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19ffa43a 003f61a0 0 47a2086d 0 0 2
PP PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47a2086d 003f61a0 0 5ac52962 0 0 2
IP IPInfoExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation AttachmentçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ac52962 003f61a0 0 3a5a964 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a5a964 003f61a0 0 2bdcdb0e 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2bdcdb0e 003f61a0 0 79f2f185 0 0 2
PP DHP RP COP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79f2f185 003f61a0 0 6c9b4742 0 0 2
PP LP CPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c9b4742 003f61a0 0 16624295 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16624295 003f61a0 0 973221e 0 0 2
PP AP FP FOP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 973221e 003f61a0 0 42edc51b 0 0 2
PP LP CP DividendRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //dividendRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //dividendRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42edc51b 003f61a0 0 590ac863 0 0 2
PP DHP RP COP BenefitChangeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowedçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 590ac863 003f61a0 0 133c4ffe 0 0 2
PP LP PolicyOptionInfo ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo ConflictObjectInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo ConflictObjectInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 133c4ffe 003f61a0 0 5af46617 0 0 2
PPExt Activity Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5af46617 003f61a0 0 2e7b5067 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e7b5067 003f61a0 0 ff96f0f 0 0 2
PP LP CP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ff96f0f 003f61a0 0 4f118dd9 0 0 2
PP AP IncomePayoutProductOption AllowedChange(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChangeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f118dd9 003f61a0 0 7d6741e9 0 0 2
PP PPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfoçäIF (EXISTS('Table PolicyProduct PolicyProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d6741e9 003f61a0 0 428e5dc8 0 0 2
IP RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct RateVariation TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //rateVariationCodeçä'key3 lookup'("Table InvestProduct RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation TableRef JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //rateVariationCodeçä'key3 lookup'("Table InvestProduct RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 428e5dc8 003f61a0 0 699ca46b 0 0 2
PP Ownership AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 699ca46b 003f61a0 0 7fd8ad8c 0 0 2
PP DHP RP COPExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7fd8ad8c 003f61a0 0 154cf435 0 0 2
PP LP ArrangementProduct ArrangementOptProduct TaxWithholdingProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //taxWithholdingPlaceçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct TaxWithholdingProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //taxWithholdingPlaceçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 154cf435 003f61a0 0 1dcf8f47 0 0 2
PP AP FP FOPExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //rateVariationCodeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //rateVariationCodeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1dcf8f47 003f61a0 0 11c0d00e 0 0 2
PP AP FP FOP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11c0d00e 003f61a0 0 64074004 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRefçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64074004 003f61a0 0 18c09c64 0 0 2
IP OLifEExtension InvestProductExtension TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçä'key2 lookup'("Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçä'key2 lookup'("Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18c09c64 003f61a0 0 661bbfff 0 0 2
PP AP FP FOP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 661bbfff 003f61a0 0 64901001 0 0 2
IP IPInfoExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRuleçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //balanceTypeçäe_(v_construct(s_keys);5) //sequenceNumberçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //balanceTypeçäe_(v_construct(s_keys);5); //sequenceNumberçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64901001 003f61a0 0 536624ea 0 0 2
PP DHP RP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions MannerOfLossOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 536624ea 003f61a0 0 3004bc43 0 0 2
PPExt PaymentAssembly(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssemblyçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3004bc43 003f61a0 0 4a67320f 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a67320f 003f61a0 0 371a64bb 0 0 2
PP AP FP FOPExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 371a64bb 003f61a0 0 2f8c59ae 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f8c59ae 003f61a0 0 3d81500c 0 0 2
PP LP CP COP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d81500c 003f61a0 0 38a2ac5d 0 0 2
PP IPInfo QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 38a2ac5d 003f61a0 0 43d425a 0 0 2
PP AP FP FOP DestIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43d425a 003f61a0 0 6144f971 0 0 2
PP DHP RP COP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6144f971 003f61a0 0 7247be29 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7247be29 003f61a0 0 2e2ee5b8 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e2ee5b8 003f61a0 0 276d8cb2 0 0 2
Party Producer(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party ProducerçäIF (EXISTS('Table Party Producer';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 276d8cb2 003f61a0 0 429fefa9 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeatureOptRequisite';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeatureOptRequisite'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 429fefa9 003f61a0 0 7eb6dfb0 0 0 2
PP Ownership AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7eb6dfb0 003f61a0 0 588d7701 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 588d7701 003f61a0 0 65813f29 0 0 2
PP Ownership AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65813f29 003f61a0 0 34208dce 0 0 2
Party Carrier License FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table Party Carrier License Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2); //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä) ; çä   // then read from the table çä'Table Party Carrier License Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2);  //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34208dce 003f61a0 0 4aed0ca9 0 0 2
Party Carrier RestrictOwnerJurisdiction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier RestrictOwnerJurisdictionçäIF (EXISTS('Table Party Carrier RestrictOwnerJurisdiction';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier RestrictOwnerJurisdiction'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4aed0ca9 003f61a0 0 3e4f1e96 0 0 2
DistributionAgreement PPInfo CommOptionAvailable FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable FeatureOptConflictçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable FeatureOptConflict';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable FeatureOptConflict'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e4f1e96 003f61a0 0 72753ca5 0 0 2
PP NonForProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct NonForProvisionçäIF (EXISTS('Table PolicyProduct NonForProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //nonFortProvçä) ; çä   // then read from the table çä'Table PolicyProduct NonForProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //nonFortProvçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72753ca5 003f61a0 0 61156e00 0 0 2
PP LP CP COP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61156e00 003f61a0 0 5c6f13d2 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c6f13d2 003f61a0 0 34a466eb 0 0 2
PP LP CP ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34a466eb 003f61a0 0 701b877d 0 0 2
PP DHP RP COPExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 701b877d 003f61a0 0 1c1624b2 0 0 2
PP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProductçäIF (EXISTS('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c1624b2 003f61a0 0 4d3466e7 0 0 2
PP LP CP UnderwritingClassProduct PermTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d3466e7 003f61a0 0 147d1239 0 0 2
PP IPInfoExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 147d1239 003f61a0 0 b7beb4e 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b7beb4e 003f61a0 0 5731e342 0 0 2
PP Ownership QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5731e342 003f61a0 0 562b26ea 0 0 2
PP DHP RP COP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 562b26ea 003f61a0 0 2210817d 0 0 2
PP Ownership AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2210817d 003f61a0 0 4a5f7869 0 0 2
PP LP CP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a5f7869 003f61a0 0 2e243da1 0 0 2
PP AP FP FOP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e243da1 003f61a0 0 26d2484e 0 0 2
PP LP CP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions OccupClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 26d2484e 003f61a0 0 69013c8c 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69013c8c 003f61a0 0 6034ee16 0 0 2
PP Ownership AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6034ee16 003f61a0 0 d59b476 0 0 2
PP LP ArrangementProduct ArrangementOptProduct NumIP SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d59b476 003f61a0 0 17ac31de 0 0 2
PolicyStatusCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyStatusCCçäIF (EXISTS('Table PolicyStatusCC';e_(v_construct(s_keys);0) //PolicyStatusCC_id_extçä) ; çä   // then read from the table çä'Table PolicyStatusCC'[e_(v_construct(s_keys);0) //PolicyStatusCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 17ac31de 003f61a0 0 1c272df1 0 0 2
PP DHP RP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c272df1 003f61a0 0 7a4c4909 0 0 2
PP LP CP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a4c4909 003f61a0 0 1a0c9e50 0 0 2
PP LP CP COP COIRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //mortalityAssumptionTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //mortalityAssumptionTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a0c9e50 003f61a0 0 c765264 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c765264 003f61a0 0 73fbbf78 0 0 2
IP IPInfo InvestProductInfoXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo InvestProductInfoXLatçäIF (EXISTS('Table InvestProduct InvestProductInfo InvestProductInfoXLat';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo InvestProductInfoXLat';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73fbbf78 003f61a0 0 517e650 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 517e650 003f61a0 0 10ef2d44 0 0 2
PP LP CP COPExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10ef2d44 003f61a0 0 14a6b748 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14a6b748 003f61a0 0 65cfbadb 0 0 2
PP LP CP COP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65cfbadb 003f61a0 0 179fa3b4 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 179fa3b4 003f61a0 0 484dcebe 0 0 2
PP LP CP COP BenefitChangeAllowed AllowedIndexInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedIndexInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedIndexInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedIndexInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 484dcebe 003f61a0 0 7e583930 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e583930 003f61a0 0 6e118bc1 0 0 2
PP DHP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ConditionTypeOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e118bc1 003f61a0 0 4781ff19 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4781ff19 003f61a0 0 65289d56 0 0 2
PP IPInfoExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65289d56 003f61a0 0 668c31f 0 0 2
PP LP CP COP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 668c31f 003f61a0 0 458c4052 0 0 2
PP LP CP COPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 458c4052 003f61a0 0 2d5b6776 0 0 2
PP PPInfo CommOptionAvailable JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçä'key3 lookup'("Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçä'key3 lookup'("Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d5b6776 003f61a0 0 370ce41f 0 0 2
PP AP FP FOP AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 370ce41f 003f61a0 0 232b576a 0 0 2
AssumedInterestRateCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AssumedInterestRateCCçäIF (EXISTS('Table AssumedInterestRateCC';e_(v_construct(s_keys);0) //AssumedInterestRateCC_id_extçä) ; çä   // then read from the table çä'Table AssumedInterestRateCC'[e_(v_construct(s_keys);0) //AssumedInterestRateCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 232b576a 003f61a0 0 4d57579d 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d57579d 003f61a0 0 67749691 0 0 2
PP DHP RP OLifEExtension RiderProductExtension LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67749691 003f61a0 0 1e94ed5c 0 0 2
PP LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçä'key3 lookup'("Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçä'key3 lookup'("Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e94ed5c 003f61a0 0 72e1497e 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72e1497e 003f61a0 0 7554dc38 0 0 2
PP DHP RP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7554dc38 003f61a0 0 3eaee89f 0 0 2
PP IPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //productCodeçä'table effective date'(e_(v_construct(s_keys);5)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3eaee89f 003f61a0 0 6cd98b5c 0 0 2
PP LP CP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6cd98b5c 003f61a0 0 1e2753c5 0 0 2
PP AP IncomePayoutProductOption AllowedChange FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptConflict';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptConflict'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e2753c5 003f61a0 0 225e5fbf 0 0 2
PP LP CP ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct ParticipantProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 225e5fbf 003f61a0 0 732c08c7 0 0 2
Party Organization BusinessInsPurposeInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization BusinessInsPurposeInfoçäIF (EXISTS('Table Party Organization BusinessInsPurposeInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization BusinessInsPurposeInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 732c08c7 003f61a0 0 49f298c 0 0 2
PP AP IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValueçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49f298c 003f61a0 0 5d848a2f 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d848a2f 003f61a0 0 130ae822 0 0 2
Party Carrier License Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Attachment SignatureInfoçäIF (EXISTS('Table Party Carrier License Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 130ae822 003f61a0 0 2316ed31 0 0 2
PP LP CP DeathBenefitOptionInfo AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AgeAmtProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2316ed31 003f61a0 0 497d6848 0 0 2
CommSchedule CommFormula TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommSchedule CommFormula TableRefçäIF (EXISTS('Table CommSchedule CommFormula TableRef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä) ; çä   // then read from the table çä'Table CommSchedule CommFormula TableRef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 497d6848 003f61a0 0 751c12f9 0 0 2
IP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntityçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 751c12f9 003f61a0 0 287f76ba 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValueçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 287f76ba 003f61a0 0 6aefeca 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6aefeca 003f61a0 0 2ab6576a 0 0 2
PP DHP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ElimPeriodAccOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ab6576a 003f61a0 0 530d6841 0 0 2
IP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct Fee TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçä'key3 lookup'("Table InvestProduct Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct Fee TableRef JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçä'key3 lookup'("Table InvestProduct Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 530d6841 003f61a0 0 60376d8e 0 0 2
PP AP IncomePayoutProductOption AllowedChange FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptRequisite';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptRequisite'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 60376d8e 003f61a0 0 4e15286d 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e15286d 003f61a0 0 60755186 0 0 2
PP LP CP COP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 60755186 003f61a0 0 7c23e4da 0 0 2
PP PolicyProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductXLatçäIF (EXISTS('Table PolicyProduct PolicyProductXLat';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductXLat'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c23e4da 003f61a0 0 2c80c526 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c80c526 003f61a0 0 158d83bd 0 0 2
PP AP FP FOP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ProviderClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 158d83bd 003f61a0 0 730971ed 0 0 2
PP AP FP IncomeOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 730971ed 003f61a0 0 71165df7 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef JurisdictionApprovalçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //sequenceNumberçä'key2 lookup'("Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1)) //jurisdictionçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //sequenceNumberçä'key2 lookup'("Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71165df7 003f61a0 0 1ac4710a 0 0 2
DistributionAgreement FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowedçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ac4710a 003f61a0 0 61b7a619 0 0 2
PP DHP RP COP COIRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61b7a619 003f61a0 0 6670ee72 0 0 2
PP AP FeatureTransactionProduct AllowedDistributionAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProduct AllowedDistributionAgreementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct AllowedDistributionAgreement';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct AllowedDistributionAgreement'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6670ee72 003f61a0 0 cca719a 0 0 2
PP LP CP COP UnderwritingClassProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)); //issueGenderçä'key8 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13));e_(v_construct(s_keys);14)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13));  //issueGenderçä'key8 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13));e_(v_construct(s_keys);14)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 cca719a 003f61a0 0 46710dc3 0 0 2
PP IPInfo Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46710dc3 003f61a0 0 282e78c2 0 0 2
CompatiblePaymentFormCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CompatiblePaymentFormCCçäIF (EXISTS('Table CompatiblePaymentFormCC';e_(v_construct(s_keys);0) //CompatiblePaymentFormCC_id_extçä) ; çä   // then read from the table çä'Table CompatiblePaymentFormCC'[e_(v_construct(s_keys);0) //CompatiblePaymentFormCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 282e78c2 003f61a0 0 67c6cf5b 0 0 2
Party Carrier License Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License ExamçäIF (EXISTS('Table Party Carrier License Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67c6cf5b 003f61a0 0 788650b9 0 0 2
IP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table InvestProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3); //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä) ; çä   // then read from the table çä'Table InvestProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3);  //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 788650b9 003f61a0 0 44e48028 0 0 2
IP IPInfoExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44e48028 003f61a0 0 4025fbfa 0 0 2
PP Authorization AuthorizationTransaction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization AuthorizationTransactionçäIF (EXISTS('Table PolicyProduct Authorization AuthorizationTransaction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //administrativeTransactionçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization AuthorizationTransaction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4025fbfa 003f61a0 0 4a7b164 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a7b164 003f61a0 0 27953079 0 0 2
PP LP CP AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27953079 003f61a0 0 3fae2ce1 0 0 2
PP DHP RP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ElimPeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3fae2ce1 003f61a0 0 672f5971 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 672f5971 003f61a0 0 44d54f6f 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44d54f6f 003f61a0 0 e6a93a4 0 0 2
PP LP CP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e6a93a4 003f61a0 0 4975ee19 0 0 2
Party Producer CarrierAppointment Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Attachment SignatureInfoçäIF (EXISTS('Table Party Producer CarrierAppointment Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4975ee19 003f61a0 0 1e838d7b 0 0 2
PP Ownership QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e838d7b 003f61a0 0 677f2163 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 677f2163 003f61a0 0 5b91bd42 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçäe_(v_construct(s_keys);10) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçäe_(v_construct(s_keys);10) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b91bd42 003f61a0 0 18b794a7 0 0 2
PP AP FP FOP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18b794a7 003f61a0 0 47e3f67a 0 0 2
PP LP CP UnderwritingClassProduct AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47e3f67a 003f61a0 0 52dace00 0 0 2
PP DHP RP COPExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52dace00 003f61a0 0 4de2bbeb 0 0 2
PP IPInfo QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4de2bbeb 003f61a0 0 761c2dbb 0 0 2
PP Breakpoint JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Breakpoint JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Breakpoint JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Breakpoint JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Breakpoint JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Breakpoint JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 761c2dbb 003f61a0 0 3fb310f5 0 0 2
IP InformationService(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InformationServiceçäIF (EXISTS('Table InvestProduct InformationService';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct InformationService'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3fb310f5 003f61a0 0 d9ef22 0 0 2
LevelizationOptionCC PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProductçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1) //paymentMethodçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d9ef22 003f61a0 0 62495dcd 0 0 2
Party Producer Registration Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration ExamçäIF (EXISTS('Table Party Producer Registration Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer Registration Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62495dcd 003f61a0 0 758e8823 0 0 2
PP LP ArrangementProduct ArrangementOptProduct DestIP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct DestInvestProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct DestInvestProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct DestInvestProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 758e8823 003f61a0 0 1f67a10d 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //rateVariationCodeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //rateVariationCodeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f67a10d 003f61a0 0 32a82e6f 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32a82e6f 003f61a0 0 47642683 0 0 2
PP AP FP FOP BenefitChangeAllowed AllowedIndexInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedIndexInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedIndexInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedIndexInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47642683 003f61a0 0 6151a00a 0 0 2
Party Producer License Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License FeeçäIF (EXISTS('Table Party Producer License Fee';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6151a00a 003f61a0 0 75f1139 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)); //issueGenderçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));  //issueGenderçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75f1139 003f61a0 0 2eff229e 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2eff229e 003f61a0 0 458fb77e 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 458fb77e 003f61a0 0 7ba1d3c3 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTierçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ba1d3c3 003f61a0 0 62554a5f 0 0 2
JurisdictionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table JurisdictionCCçäIF (EXISTS('Table JurisdictionCC';e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä) ; çä   // then read from the table çä'Table JurisdictionCC'[e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62554a5f 003f61a0 0 2b98969f 0 0 2
PP AP FP FOP TaxWithholdingProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //taxWithholdingPlaceçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //taxWithholdingPlaceçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b98969f 003f61a0 0 3eb84891 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct FeeçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3eb84891 003f61a0 0 c1e06b8 0 0 2
PP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AttachmentçäIF (EXISTS('Table PolicyProduct Attachment';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct Attachment'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c1e06b8 003f61a0 0 75ca6208 0 0 2
Party Producer Registration RegistrationJurisdiction Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdiction Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75ca6208 003f61a0 0 15eb96ff 0 0 2
PP AP FeatureTransactionProduct FPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProduct FeatureProductInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct FeatureProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct FeatureProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15eb96ff 003f61a0 0 5d62b4c2 0 0 2
DistributionAgreement PPInfo AllowedFeatureTransaction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo AllowedFeatureTransactionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo AllowedFeatureTransaction';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo AllowedFeatureTransaction'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d62b4c2 003f61a0 0 b7ea24 0 0 2
PP Ownership AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b7ea24 003f61a0 0 8ac3a2c 0 0 2
PP DHP RP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRateçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //mortalityAssumptionTypeçäe_(v_construct(s_keys);6) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);6) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8ac3a2c 003f61a0 0 3de9ccd2 0 0 2
Party Producer License Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Attachment SignatureInfoçäIF (EXISTS('Table Party Producer License Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer License Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3de9ccd2 003f61a0 0 22d86f2f 0 0 2
PP LP CP COP BenefitChangeAllowed ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22d86f2f 003f61a0 0 7a2041c8 0 0 2
PP DHP RP ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct RelatedParticipantProductInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a2041c8 003f61a0 0 16550a92 0 0 2
PP LP CP COP CovOptionProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct CovOptionProductXLatçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct CovOptionProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct CovOptionProductXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16550a92 003f61a0 0 27fab307 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9); //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9);  //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27fab307 003f61a0 0 3b2e656a 0 0 2
PP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b2e656a 003f61a0 0 4e0a9726 0 0 2
PP DHP RP AdditionalRiderClassification(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct AdditionalRiderClassificationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct AdditionalRiderClassification';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct AdditionalRiderClassification'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e0a9726 003f61a0 0 23564b34 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValueçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23564b34 003f61a0 0 7c1633c0 0 0 2
IP IPInfoExt AllowedArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProductçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //arrTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c1633c0 003f61a0 0 4f92555a 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7); //feeTypeçä'key6 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7);  //feeTypeçä'key6 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f92555a 003f61a0 0 39f7f952 0 0 2
PP AP FP FOP DestIP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39f7f952 003f61a0 0 3227a8b5 0 0 2
PP AP FP FOP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3227a8b5 003f61a0 0 665ac37d 0 0 2
PP LP CP COP COIRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //mortalityAssumptionTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct COIRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //mortalityAssumptionTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 665ac37d 003f61a0 0 725eb1fe 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 725eb1fe 003f61a0 0 76bd4cc3 0 0 2
ScheduledPaymentCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ScheduledPaymentCCçäIF (EXISTS('Table ScheduledPaymentCC';e_(v_construct(s_keys);0) //ScheduledPaymentCC_id_extçä) ; çä   // then read from the table çä'Table ScheduledPaymentCC'[e_(v_construct(s_keys);0) //ScheduledPaymentCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76bd4cc3 003f61a0 0 40b448c1 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef ExtensionçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9); //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9);  //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40b448c1 003f61a0 0 4eae175f 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4eae175f 003f61a0 0 116d6d15 0 0 2
PP LP CP COP RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct RestrictionInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 116d6d15 003f61a0 0 5d48b295 0 0 2
IP IPInfoExt MVA TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d48b295 003f61a0 0 1c526c2e 0 0 2
PP LP ArrangementProduct ArrangementOptProduct ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c526c2e 003f61a0 0 602286a9 0 0 2
RelationshipCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table RelationshipCCçäIF (EXISTS('Table RelationshipCC';e_(v_construct(s_keys);0) //RelationshipCC_id_extçä) ; çä   // then read from the table çä'Table RelationshipCC'[e_(v_construct(s_keys);0) //RelationshipCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 602286a9 003f61a0 0 4dc3668 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dc3668 003f61a0 0 4d342ede 0 0 2
PP LP CP COP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d342ede 003f61a0 0 43ba067e 0 0 2
PP AP AnnuitizationDateRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct AnnuitizationDateRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43ba067e 003f61a0 0 456d1e57 0 0 2
FS(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table FinancialStatementçäIF (EXISTS('Table FinancialStatement';e_(v_construct(s_keys);0) //statementTypeçä) ; çä   // then read from the table çä'Table FinancialStatement'[e_(v_construct(s_keys);0) //statementTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 456d1e57 003f61a0 0 22c5751c 0 0 2
PPExt QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22c5751c 003f61a0 0 6e3d2f8d 0 0 2
PP DHP RP COP PremiumRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäe_(v_construct(s_keys);8) //premiumRateTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäe_(v_construct(s_keys);8); //premiumRateTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e3d2f8d 003f61a0 0 78516e0c 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78516e0c 003f61a0 0 1f2f6776 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f2f6776 003f61a0 0 6578c2f8 0 0 2
PP LP CP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6578c2f8 003f61a0 0 43cbebb9 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43cbebb9 003f61a0 0 3dfef10f 0 0 2
PP LP FeatureTransactionProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct FeatureTransactionProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct FeatureTransactionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct LifeProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct FeatureTransactionProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct LifeProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3dfef10f 003f61a0 0 8c0197b 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8c0197b 003f61a0 0 1f5ab84a 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f5ab84a 003f61a0 0 7ae3dc0e 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ae3dc0e 003f61a0 0 7d5ee653 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9); //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9);  //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d5ee653 003f61a0 0 2223ffa2 0 0 2
PP AP FP FOPExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2223ffa2 003f61a0 0 172d804e 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 172d804e 003f61a0 0 63d4aa49 0 0 2
PP IPInfoExt IndexCalc(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalcçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //periodModeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //periodModeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63d4aa49 003f61a0 0 69720f82 0 0 2
IP IPInfo QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntityçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69720f82 003f61a0 0 a868961 0 0 2
PP AP FeatureTransactionProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a868961 003f61a0 0 6eb1c939 0 0 2
PP Breakpoint(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct BreakpointçäIF (EXISTS('Table PolicyProduct Breakpoint';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct Breakpoint'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6eb1c939 003f61a0 0 73a5f344 0 0 2
PP LP CP COP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73a5f344 003f61a0 0 52a810d7 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52a810d7 003f61a0 0 3bf823e3 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3bf823e3 003f61a0 0 7ff1ddd0 0 0 2
PPExt FAVCodeInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FAVCodeInfoçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FAVCodeInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FAVCodeInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ff1ddd0 003f61a0 0 6320f701 0 0 2
PP LP ArrangementProduct ArrangementOptProduct AllocTypeProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //sourceTransferAmtTypeçäe_(v_construct(s_keys);6) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);6) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6320f701 003f61a0 0 7f66813f 0 0 2
PP LP CP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f66813f 003f61a0 0 c61a2e3 0 0 2
PP LP CPExt CPFeature AutoPremProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AutoPremProvisionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AutoPremProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AutoPremProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c61a2e3 003f61a0 0 68604d57 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 68604d57 003f61a0 0 710f299f 0 0 2
PP DHP RP COPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 710f299f 003f61a0 0 4c0d3c1c 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c0d3c1c 003f61a0 0 4fcf0403 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption ExclusionInvestProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption ExclusionInvestProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4fcf0403 003f61a0 0 77d88342 0 0 2
DistributionAgreement CommRemittance(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement CommRemittanceçäIF (EXISTS('Table DistributionAgreement CommRemittance';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement CommRemittance'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 77d88342 003f61a0 0 36e3916a 0 0 2
DistributionAgreement PPInfo APExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo AnnuityProductExcludeçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo AnnuityProductExclude';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo AnnuityProductExclude'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36e3916a 003f61a0 0 647eebc9 0 0 2
Party Producer CarrierAppointment Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer CarrierAppointment Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 647eebc9 003f61a0 0 2a0ada51 0 0 2
PP LP CP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions DeductionOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a0ada51 003f61a0 0 3f025089 0 0 2
PP LPExt GenericRDR(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension GenericRDRçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension GenericRDR';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension GenericRDR'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f025089 003f61a0 0 396e990e 0 0 2
PP LoanProvision RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 396e990e 003f61a0 0 5c5d9886 0 0 2
PP DHP RP COPExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c5d9886 003f61a0 0 6ee36dee 0 0 2
PP DHP RP COP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ee36dee 003f61a0 0 7584974 0 0 2
PP LP CP TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7584974 003f61a0 0 3c112300 0 0 2
SourceInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfoçäIF (EXISTS('Table SourceInfo';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c112300 003f61a0 0 2558b033 0 0 2
PP DHP RP PremiumRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //mortalityAssumptionTypeçäe_(v_construct(s_keys);6) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct PremiumRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);6) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2558b033 003f61a0 0 cbf1e1d 0 0 2
PP DHP RP COP DividendRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //dividendRateTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //dividendRateTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 cbf1e1d 003f61a0 0 4ec1533 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ec1533 003f61a0 0 45a93661 0 0 2
PP FreelookInvestRuleProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProductçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 45a93661 003f61a0 0 6a62f664 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a62f664 003f61a0 0 63a06e2 0 0 2
PP DHP RP COPExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63a06e2 003f61a0 0 3904cfc0 0 0 2
PP LP CP COP BenefitChangeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowedçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3904cfc0 003f61a0 0 7b1bb468 0 0 2
PP DHP RP COP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct FeeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b1bb468 003f61a0 0 3977436e 0 0 2
PP PPInfo BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo BusinessProcessAllowedçäIF (EXISTS('Table PolicyProduct PolicyProductInfo BusinessProcessAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo BusinessProcessAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3977436e 003f61a0 0 6be7c766 0 0 2
PP LP CP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6be7c766 003f61a0 0 45197f26 0 0 2
Party Carrier License(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier LicenseçäIF (EXISTS('Table Party Carrier License';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier License'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 45197f26 003f61a0 0 3b4a2575 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b4a2575 003f61a0 0 273bd8fe 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 273bd8fe 003f61a0 0 4256768b 0 0 2
IP RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation RateVariationByVolumeçäIF (EXISTS('Table InvestProduct RateVariation RateVariationByVolume';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation RateVariationByVolume'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4256768b 003f61a0 0 1d4bbe71 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d4bbe71 003f61a0 0 11a12fef 0 0 2
PP LP CP COP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ConditionTypeOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11a12fef 003f61a0 0 1f555af3 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f555af3 003f61a0 0 19f34095 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19f34095 003f61a0 0 6dcbcc11 0 0 2
PP PPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PolicyProductInfo JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct PolicyProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct PolicyProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6dcbcc11 003f61a0 0 361673ce 0 0 2
Party Organization OrganizationFinancialData Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialData AttachmentçäIF (EXISTS('Table Party Organization OrganizationFinancialData Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 361673ce 003f61a0 0 7ca34781 0 0 2
PP LP ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //sourceTransferAmtTypeçäe_(v_construct(s_keys);6) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);6) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ca34781 003f61a0 0 3fca8b17 0 0 2
PP AP FP FOPExt Ownership JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3fca8b17 003f61a0 0 14884bd3 0 0 2
PP DHP RP COP ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14884bd3 003f61a0 0 64f20423 0 0 2
PP TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64f20423 003f61a0 0 44846a4 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44846a4 003f61a0 0 77462c16 0 0 2
PP LP CP DeathBenefitOptionInfo Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 77462c16 003f61a0 0 20a1e58 0 0 2
PP AP FP FOP BenefitChangeAllowed AllowedPercent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedPercentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedPercent';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedPercent'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 20a1e58 003f61a0 0 1b033f6c 0 0 2
PP LP CP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ManagedCareOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b033f6c 003f61a0 0 4e339e45 0 0 2
IP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table InvestProduct Attachment SignatureInfo'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e339e45 003f61a0 0 436dca19 0 0 2
Party Carrier License Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table Party Carrier License Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Carrier License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Carrier License Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Carrier License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 436dca19 003f61a0 0 aefbd74 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 aefbd74 003f61a0 0 7653ebc6 0 0 2
PP LoanProvision RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariationçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7653ebc6 003f61a0 0 1da595b0 0 0 2
PP DHP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions DeductionOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1da595b0 003f61a0 0 4d9f1f24 0 0 2
PP AP FP FOP BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d9f1f24 003f61a0 0 7094e91 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7094e91 003f61a0 0 50e48bd8 0 0 2
PP DHP RP COP UnderwritingClassProduct PermTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key") //UWClassProd_keyçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 50e48bd8 003f61a0 0 e93884f 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e93884f 003f61a0 0 15e5c900 0 0 2
PP DHP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15e5c900 003f61a0 0 427a7646 0 0 2
AllowedDayCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AllowedDayCCçäIF (EXISTS('Table AllowedDayCC';e_(v_construct(s_keys);0) //AllowedDayCC_id_extçä) ; çä   // then read from the table çä'Table AllowedDayCC'[e_(v_construct(s_keys);0) //AllowedDayCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 427a7646 003f61a0 0 1402a364 0 0 2
PP LP CP DeathBenefitOptionInfo AdditionalInterestRateInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AdditionalInterestRateInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AdditionalInterestRateInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo AdditionalInterestRateInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1402a364 003f61a0 0 30ab0d1c 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30ab0d1c 003f61a0 0 2c780925 0 0 2
PP IPInfoExt MVA TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c780925 003f61a0 0 f54ee9b 0 0 2
Party Producer License Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer License Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer License Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f54ee9b 003f61a0 0 761ed4c9 0 0 2
PP LP CP COP BenefitChangeAllowed AllowedPercent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedPercentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedPercent';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedPercent'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 761ed4c9 003f61a0 0 78b8a8ce 0 0 2
Party Producer CarrierAppointment Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee Attachment SignatureInfoçäIF (EXISTS('Table Party Producer CarrierAppointment Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78b8a8ce 003f61a0 0 252e49c4 0 0 2
PPExt QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 252e49c4 003f61a0 0 798ab997 0 0 2
PP DHP FeatureTransactionProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct FeatureTransactionProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 798ab997 003f61a0 0 3484b295 0 0 2
PP AP FP FOP AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3484b295 003f61a0 0 7827f6bf 0 0 2
PP LP CP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9); //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9);  //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7827f6bf 003f61a0 0 44be1c73 0 0 2
PP AP FP FOP AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8);  //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44be1c73 003f61a0 0 414758da 0 0 2
PP PPInfo AllowedFeatureTransaction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo AllowedFeatureTransactionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo AllowedFeatureTransaction';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo AllowedFeatureTransaction'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 414758da 003f61a0 0 1bab7aac 0 0 2
PP AP FP FOP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1bab7aac 003f61a0 0 27ba0b61 0 0 2
PP DHP RP COP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27ba0b61 003f61a0 0 5e1ebdb0 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e1ebdb0 003f61a0 0 3c33e95c 0 0 2
PP LP ArrangementProduct ArrangementOptProduct AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c33e95c 003f61a0 0 1de9832b 0 0 2
IncomeOptionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IncomeOptionCCçäIF (EXISTS('Table IncomeOptionCC';e_(v_construct(s_keys);0) //IncomeOptionCC_id_extçä) ; çä   // then read from the table çä'Table IncomeOptionCC'[e_(v_construct(s_keys);0) //IncomeOptionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1de9832b 003f61a0 0 194cdcdb 0 0 2
PP LapseProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LapseProvisionçäIF (EXISTS('Table PolicyProduct LapseProvision';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LapseProvision'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 194cdcdb 003f61a0 0 133ba66e 0 0 2
PP LP PolicyOptionInfo RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo RequisiteObjectInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo RequisiteObjectInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 133ba66e 003f61a0 0 40183ad6 0 0 2
PP DHP RP COP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40183ad6 003f61a0 0 411eb4f5 0 0 2
PP Ownership AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 411eb4f5 003f61a0 0 66cbbbca 0 0 2
IP InvestProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductXLatçäIF (EXISTS('Table InvestProduct InvestProductXLat';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct InvestProductXLat'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 66cbbbca 003f61a0 0 4ae106d4 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ae106d4 003f61a0 0 4733b49a 0 0 2
PP LP CP COP PremiumRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //mortalityAssumptionTypeçäe_(v_construct(s_keys);11); //premiumRateTypeçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);11);  //premiumRateTypeçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4733b49a 003f61a0 0 752ffbef 0 0 2
PP LP ArrangementProduct ArrangementOptProduct NumIP SourceIP RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct SourceInvestProduct RateVariationKeyçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct SourceInvestProduct RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct SourceInvestProduct RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 752ffbef 003f61a0 0 3a72ab9d 0 0 2
PP LoanProvision RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a72ab9d 003f61a0 0 2e997a80 0 0 2
PP AP FP FOP SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e997a80 003f61a0 0 7378f76c 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7378f76c 003f61a0 0 5d62e7a5 0 0 2
PP LP PolicyOptionInfo Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d62e7a5 003f61a0 0 9909cfb 0 0 2
PP DHP RP ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9909cfb 003f61a0 0 13c0d7bd 0 0 2
PP PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13c0d7bd 003f61a0 0 422aed37 0 0 2
Party Organization UnionInvolvementInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization UnionInvolvementInfoçäIF (EXISTS('Table Party Organization UnionInvolvementInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization UnionInvolvementInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 422aed37 003f61a0 0 61a4dd23 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61a4dd23 003f61a0 0 7eb7d5e 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7eb7d5e 003f61a0 0 5560d9c8 0 0 2
PP LP CP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions ProviderClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5560d9c8 003f61a0 0 4373c401 0 0 2
PP DHP RP COP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4373c401 003f61a0 0 23b2117b 0 0 2
PP PPInfo CommissionScheduleKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommissionScheduleKeyçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommissionScheduleKey';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommissionScheduleKey'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23b2117b 003f61a0 0 6d40cd2f 0 0 2
QualifiedPlanCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table QualifiedPlanCCçäIF (EXISTS('Table QualifiedPlanCC';e_(v_construct(s_keys);0) //QualifiedPlanCC_id_extçä) ; çä   // then read from the table çä'Table QualifiedPlanCC'[e_(v_construct(s_keys);0) //QualifiedPlanCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d40cd2f 003f61a0 0 4eb6092c 0 0 2
Party Producer CarrierAppointment DistributionChannelInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment DistributionChannelInfoçäIF (EXISTS('Table Party Producer CarrierAppointment DistributionChannelInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment DistributionChannelInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4eb6092c 003f61a0 0 78496dbf 0 0 2
PP LP CP COP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78496dbf 003f61a0 0 704ff7a 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 704ff7a 003f61a0 0 165dc992 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 165dc992 003f61a0 0 587bebcf 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 587bebcf 003f61a0 0 4430fdbf 0 0 2
PP AP FP FOP AllocTypeProduct AmountProduct EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct EnumeratedValueçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4430fdbf 003f61a0 0 21191bf3 0 0 2
PP DHP RP COP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct AttachmentçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 21191bf3 003f61a0 0 774374d4 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 774374d4 003f61a0 0 583c597e 0 0 2
PP LP CP DividendRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DividendRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DividendRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //dividendRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DividendRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //dividendRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 583c597e 003f61a0 0 7031630b 0 0 2
PP LP CP COP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7031630b 003f61a0 0 5774cf9 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5774cf9 003f61a0 0 369181f4 0 0 2
Party Producer CarrierAppointment DistributionAgreementInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment DistributionAgreementInfoçäIF (EXISTS('Table Party Producer CarrierAppointment DistributionAgreementInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment DistributionAgreementInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 369181f4 003f61a0 0 1f0f1fdf 0 0 2
PP LP CP ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f0f1fdf 003f61a0 0 596261d5 0 0 2
PP AdminTransactionProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProductçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 596261d5 003f61a0 0 474ae07b 0 0 2
IP IPInfoExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 474ae07b 003f61a0 0 4ff135ad 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ff135ad 003f61a0 0 4fd67c74 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4fd67c74 003f61a0 0 2bcfb1f5 0 0 2
PP LP CP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2bcfb1f5 003f61a0 0 6b70faa7 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b70faa7 003f61a0 0 5d2c17ed 0 0 2
IP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct JurisdictionApprovalçäIF (EXISTS('Table InvestProduct JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçä'key2 lookup'("Table InvestProduct JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçä'key2 lookup'("Table InvestProduct JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d2c17ed 003f61a0 0 2916b3d1 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOptionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2916b3d1 003f61a0 0 382fc538 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef ExtensionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4); //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4);  //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 382fc538 003f61a0 0 5ea581f3 0 0 2
PPExt Activity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension ActivityçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ea581f3 003f61a0 0 694339e1 0 0 2
PP DHP RP COP ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 694339e1 003f61a0 0 3902c90b 0 0 2
PP AP FP FOP AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3902c90b 003f61a0 0 6b1dc615 0 0 2
PP DHP RP COP ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b1dc615 003f61a0 0 70cdb81e 0 0 2
PaymentFormCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PaymentFormCCçäIF (EXISTS('Table PaymentFormCC';e_(v_construct(s_keys);0) //PaymentFormCC_id_extçä) ; çä   // then read from the table çä'Table PaymentFormCC'[e_(v_construct(s_keys);0) //PaymentFormCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 70cdb81e 003f61a0 0 78974516 0 0 2
PP DHP FeatureTransactionProduct FPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct FeatureProductInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct FeatureProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct FeatureProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78974516 003f61a0 0 c54b70c 0 0 2
IP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct FeeçäIF (EXISTS('Table InvestProduct Fee';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c54b70c 003f61a0 0 9895d8 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9895d8 003f61a0 0 25c7b554 0 0 2
PP IPInfo QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25c7b554 003f61a0 0 33261f47 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 33261f47 003f61a0 0 5f421b05 0 0 2
PP DHP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions MannerOfLossOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f421b05 003f61a0 0 288e23e3 0 0 2
Party Producer Registration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer RegistrationçäIF (EXISTS('Table Party Producer Registration';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 288e23e3 003f61a0 0 6f2096da 0 0 2
PP DHP RP COP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6f2096da 003f61a0 0 3408efcf 0 0 2
IP IPInfo QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity MarketçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity Market';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //marketTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity Market';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //marketTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3408efcf 003f61a0 0 16818321 0 0 2
PP LP CP COP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ProviderClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16818321 003f61a0 0 f26aa4c 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f26aa4c 003f61a0 0 19cc649a 0 0 2
PP DHP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ProviderClassOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19cc649a 003f61a0 0 5d511db9 0 0 2
PP DHP RP COP AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d511db9 003f61a0 0 655f603a 0 0 2
PP LP CP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 655f603a 003f61a0 0 528fc39e 0 0 2
PP DHP RP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenePeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 528fc39e 003f61a0 0 56653dbf 0 0 2
PP LP CP COPExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 56653dbf 003f61a0 0 44044d09 0 0 2
DistributionAgreement QualifiedPlanEntityExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExcludeçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44044d09 003f61a0 0 1d2673f8 0 0 2
IP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct Attachment AttachmentReference';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct Attachment AttachmentReference'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d2673f8 003f61a0 0 3af7a2cd 0 0 2
PP LP LifeUSAProduct IRSPremCalcMethod(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethodçäIF (EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethod';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethod'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3af7a2cd 003f61a0 0 65bb3312 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedTransType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedTransType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65bb3312 003f61a0 0 14da837a 0 0 2
PP LP CP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenePeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14da837a 003f61a0 0 781e4078 0 0 2
PP DHP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenePeriodSickOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 781e4078 003f61a0 0 486158f5 0 0 2
PP Ownership AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 486158f5 003f61a0 0 43c614e8 0 0 2
PP AP FP FeatureRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43c614e8 003f61a0 0 5b4a2d2a 0 0 2
Party Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Attachment AttachmentReferenceçäIF (EXISTS('Table Party Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b4a2d2a 003f61a0 0 3ab06868 0 0 2
IP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity EntityType';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity EntityType'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ab06868 003f61a0 0 20209c34 0 0 2
PPExt FundAvailability(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailabilityçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //productCodeçäe_(v_construct(s_keys);5); //statutoryCompanyCodeçä'key4 lookup'("Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //productCodeçäe_(v_construct(s_keys);5);  //statutoryCompanyCodeçä'key4 lookup'("Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 20209c34 003f61a0 0 4c5eebe7 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9); //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9);  //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c5eebe7 003f61a0 0 14119d34 0 0 2
PP DHP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ElimPeriodSickOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14119d34 003f61a0 0 34b4835d 0 0 2
DistributionAgreement PPInfo BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo BusinessProcessAllowedçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo BusinessProcessAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo BusinessProcessAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34b4835d 003f61a0 0 5051edba 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValueçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3) //operationçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5051edba 003f61a0 0 53cd26cc 0 0 2
PP DHP RP COP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 53cd26cc 003f61a0 0 174a9e70 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 174a9e70 003f61a0 0 40dbdeda 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //underwritingClassçäe_(v_construct(s_keys);5); //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)); //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //underwritingClassçäe_(v_construct(s_keys);5);  //underwritingSubClassçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));  //tobaccoPremiumBasisçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);'key4 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40dbdeda 003f61a0 0 10c0c7f0 0 0 2
IssueGenderCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IssueGenderCCçäIF (EXISTS('Table IssueGenderCC';e_(v_construct(s_keys);0) //IssueGenderCC_id_extçä) ; çä   // then read from the table çä'Table IssueGenderCC'[e_(v_construct(s_keys);0) //IssueGenderCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10c0c7f0 003f61a0 0 42c7de62 0 0 2
Party Producer CarrierAppointment ServiceModelContact(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment ServiceModelContactçäIF (EXISTS('Table Party Producer CarrierAppointment ServiceModelContact';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment ServiceModelContact'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42c7de62 003f61a0 0 1edd55fb 0 0 2
PP PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1edd55fb 003f61a0 0 4bef979d 0 0 2
PP LP ArrangementProduct ArrangementOptProduct NumIP DestIP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4bef979d 003f61a0 0 1af2d2d7 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1af2d2d7 003f61a0 0 3ad52620 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ad52620 003f61a0 0 477be3df 0 0 2
PP DHP RP OLifEExtension RiderProductExtension DividendRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //dividendRateTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //dividendRateTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 477be3df 003f61a0 0 744ca8b3 0 0 2
IP RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct RateVariation Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //rateVariationCodeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation Attachment SignatureInfo'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //rateVariationCodeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 744ca8b3 003f61a0 0 3d0600dd 0 0 2
PP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d0600dd 003f61a0 0 39abc266 0 0 2
PP Ownership AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39abc266 003f61a0 0 3ec90f1b 0 0 2
PP DHP PremiumRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct PremiumRate TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //mortalityAssumptionTypeçäe_(v_construct(s_keys);5) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);5) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ec90f1b 003f61a0 0 2dc0f064 0 0 2
AuthorizationEntityCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AuthorizationEntityCCçäIF (EXISTS('Table AuthorizationEntityCC';e_(v_construct(s_keys);0) //AuthorizationEntityCC_id_extçä) ; çä   // then read from the table çä'Table AuthorizationEntityCC'[e_(v_construct(s_keys);0) //AuthorizationEntityCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2dc0f064 003f61a0 0 3ca139ff 0 0 2
PP IPInfo Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ca139ff 003f61a0 0 3544d5f4 0 0 2
IP IPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfoçäIF (EXISTS('Table InvestProduct InvestProductInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3544d5f4 003f61a0 0 ba4c130 0 0 2
DistributionChannelCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionChannelCCçäIF (EXISTS('Table DistributionChannelCC';e_(v_construct(s_keys);0) //DistributionChannelCC_id_extçä) ; çä   // then read from the table çä'Table DistributionChannelCC'[e_(v_construct(s_keys);0) //DistributionChannelCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ba4c130 003f61a0 0 73d5ff47 0 0 2
PP AP FP FOP AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73d5ff47 003f61a0 0 1f3a93e5 0 0 2
PP LP FeatureTransactionProduct FPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct FeatureTransactionProduct FeatureProductInfoçäIF (EXISTS('Table PolicyProduct LifeProduct FeatureTransactionProduct FeatureProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct FeatureTransactionProduct FeatureProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f3a93e5 003f61a0 0 6ed90069 0 0 2
PP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ed90069 003f61a0 0 24262cec 0 0 2
PP LoanProvision RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation TableRefçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24262cec 003f61a0 0 148281f1 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 148281f1 003f61a0 0 4ecbd3f3 0 0 2
PP DeliveryInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DeliveryInfoçäIF (EXISTS('Table PolicyProduct DeliveryInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DeliveryInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ecbd3f3 003f61a0 0 30b4ccc3 0 0 2
PP LP CP CoverageProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CoverageProductXLatçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CoverageProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CoverageProductXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30b4ccc3 003f61a0 0 556b706 0 0 2
PP DHP RP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 556b706 003f61a0 0 5498e09b 0 0 2
SplitPctIncrementsCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SplitPctIncrementsCCçäIF (EXISTS('Table SplitPctIncrementsCC';e_(v_construct(s_keys);0) //SplitPctIncrementsCC_id_extçä) ; çä   // then read from the table çä'Table SplitPctIncrementsCC'[e_(v_construct(s_keys);0) //SplitPctIncrementsCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5498e09b 003f61a0 0 498bb500 0 0 2
IP IPInfo Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 498bb500 003f61a0 0 1bb92d0 0 0 2
PeriodCertainCC FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PeriodCertainCC FeatureOptConflictçäIF (EXISTS('Table PeriodCertainCC FeatureOptConflict';e_(v_construct(s_keys);0) //periodCertainçä) ; çä   // then read from the table çä'Table PeriodCertainCC FeatureOptConflict'[e_(v_construct(s_keys);0) //periodCertainçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1bb92d0 003f61a0 0 5fe68022 0 0 2
PP AP FP FOP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions OccupClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5fe68022 003f61a0 0 5502f1c3 0 0 2
PP DHP PremiumRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //mortalityAssumptionTypeçäe_(v_construct(s_keys);5); //premiumRateTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);5);  //premiumRateTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct PremiumRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5502f1c3 003f61a0 0 40c725fd 0 0 2
PP AP FP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40c725fd 003f61a0 0 530a485a 0 0 2
Party Producer License Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee AttachmentçäIF (EXISTS('Table Party Producer License Fee Attachment';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee Attachment'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 530a485a 003f61a0 0 7caaed6 0 0 2
PP LP CP PremiumRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct PremiumRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7caaed6 003f61a0 0 1d5e4328 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d5e4328 003f61a0 0 12baf02e 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision CarrierDefaults(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision CarrierDefaultsçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision CarrierDefaults';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision CarrierDefaults'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12baf02e 003f61a0 0 5199315b 0 0 2
AnnualIndexTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AnnualIndexTypeCCçäIF (EXISTS('Table AnnualIndexTypeCC';e_(v_construct(s_keys);0) //AnnualIndexTypeCC_id_extçä) ; çä   // then read from the table çä'Table AnnualIndexTypeCC'[e_(v_construct(s_keys);0) //AnnualIndexTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5199315b 003f61a0 0 aa6e455 0 0 2
PP AP FP FOP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 aa6e455 003f61a0 0 51dd91e6 0 0 2
Party Carrier License Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License FeeçäIF (EXISTS('Table Party Carrier License Fee';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51dd91e6 003f61a0 0 7fc70f74 0 0 2
PP DHP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions HealthServiceOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7fc70f74 003f61a0 0 4d92af0f 0 0 2
IP IPInfo Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee AttachmentçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d92af0f 003f61a0 0 58cde56 0 0 2
PP APExt ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct AllowedDesignation'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58cde56 003f61a0 0 417b65e6 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 417b65e6 003f61a0 0 696ee2ee 0 0 2
PP LoanProvision ImpairedOptions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision ImpairedOptionsçäIF (EXISTS('Table PolicyProduct LoanProvision ImpairedOptions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision ImpairedOptions'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 696ee2ee 003f61a0 0 49809417 0 0 2
PP LP CP COPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49809417 003f61a0 0 47959bf1 0 0 2
PP AP FP FOP AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47959bf1 003f61a0 0 14a41ea4 0 0 2
PP DHP RP ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14a41ea4 003f61a0 0 1c8c80c3 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c8c80c3 003f61a0 0 c893210 0 0 2
DistributionAgreement BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement BusinessProcessAllowedçäIF (EXISTS('Table DistributionAgreement BusinessProcessAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä) ; çä   // then read from the table çä'Table DistributionAgreement BusinessProcessAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c893210 003f61a0 0 6556327e 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovCompçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6556327e 003f61a0 0 757d6d3 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 757d6d3 003f61a0 0 3987709b 0 0 2
PP LP PolicyOptionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfoçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3987709b 003f61a0 0 4f320ef6 0 0 2
PP AP FP FOPExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f320ef6 003f61a0 0 7e730f78 0 0 2
PP PPInfo QualifiedPlanEntityExclude EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude EntityTypeçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e730f78 003f61a0 0 533bc66b 0 0 2
PP LP CP DeathBenefitOptionInfo ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 533bc66b 003f61a0 0 454e5945 0 0 2
PP LP CP COP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions DeductionOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 454e5945 003f61a0 0 3123222c 0 0 2
PP AP FP FOP RoleRelationRestriction RoleRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RoleRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RoleRestriction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RoleRestriction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3123222c 003f61a0 0 36020a66 0 0 2
IP IPInfoExt MVA TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36020a66 003f61a0 0 10ca3d5d 0 0 2
PP LP CP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10ca3d5d 003f61a0 0 25944153 0 0 2
Party Organization SitusInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization SitusInfoçäIF (EXISTS('Table Party Organization SitusInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization SitusInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25944153 003f61a0 0 2a40073b 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExcludeçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a40073b 003f61a0 0 e244e4d 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e244e4d 003f61a0 0 6d09d591 0 0 2
PP LP CP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d09d591 003f61a0 0 61f73f6 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDefçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4); //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4);  //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61f73f6 003f61a0 0 501a9523 0 0 2
PaymentSourceCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PaymentSourceCCçäIF (EXISTS('Table PaymentSourceCC';e_(v_construct(s_keys);0) //PaymentSourceCC_id_extçä) ; çä   // then read from the table çä'Table PaymentSourceCC'[e_(v_construct(s_keys);0) //PaymentSourceCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 501a9523 003f61a0 0 39380706 0 0 2
PP AP FP FOP Reward TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39380706 003f61a0 0 5feb6c3f 0 0 2
PP LP ArrangementProduct Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5feb6c3f 003f61a0 0 49293646 0 0 2
Party Producer CarrierAppointment DistributionLevel(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment DistributionLevelçäIF (EXISTS('Table Party Producer CarrierAppointment DistributionLevel';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment DistributionLevel'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49293646 003f61a0 0 65533e82 0 0 2
PP DHP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct PremiumRateçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //mortalityAssumptionTypeçäe_(v_construct(s_keys);5) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct PremiumRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);5) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65533e82 003f61a0 0 51605443 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51605443 003f61a0 0 3c448cd9 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef JurisdictionApprovalçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //sequenceNumberçä'key2 lookup'("Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1)) //jurisdictionçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //sequenceNumberçä'key2 lookup'("Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision HorizontalCovComp TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c448cd9 003f61a0 0 b645612 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b645612 003f61a0 0 294917e0 0 0 2
PP LP CP COP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //feeTypeçäe_(v_construct(s_keys);11); //balanceTypeçäe_(v_construct(s_keys);12) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //feeTypeçäe_(v_construct(s_keys);11);  //balanceTypeçäe_(v_construct(s_keys);12) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 294917e0 003f61a0 0 545f3918 0 0 2
PP IPInfo Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee AttachmentçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 545f3918 003f61a0 0 2af2feb0 0 0 2
PP DHP RP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions OccupClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2af2feb0 003f61a0 0 73b0942b 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73b0942b 003f61a0 0 6d856f7e 0 0 2
PP DHP RP ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d856f7e 003f61a0 0 18ac7875 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18ac7875 003f61a0 0 264d8b32 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDefçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6); //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6);  //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 264d8b32 003f61a0 0 1662bb71 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1662bb71 003f61a0 0 767af574 0 0 2
PP LP CP COP UnderwritingClassProduct UndClassGuidelineInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UndClassGuidelineInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 767af574 003f61a0 0 2da7cd16 0 0 2
Party Carrier License Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee AttachmentçäIF (EXISTS('Table Party Carrier License Fee Attachment';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee Attachment'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2da7cd16 003f61a0 0 7c816be4 0 0 2
PP AP FP FOP BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c816be4 003f61a0 0 238a13e9 0 0 2
PP Ownership RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership RestrictionInfoçäIF (EXISTS('Table PolicyProduct Ownership RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 238a13e9 003f61a0 0 7642cf63 0 0 2
PP AP FP FOP AllocTypeProduct AmountProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7642cf63 003f61a0 0 222be73f 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 222be73f 003f61a0 0 2ee71c1d 0 0 2
PP Reward TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Reward TableRefçäIF (EXISTS('Table PolicyProduct Reward TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Reward TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ee71c1d 003f61a0 0 17a2b45 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 17a2b45 003f61a0 0 7fb9923d 0 0 2
PP LP ArrangementProduct ArrangementOptProduct DestIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct DestInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct DestInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct DestInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7fb9923d 003f61a0 0 308c26dd 0 0 2
PP DHP RP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions ManagedCareOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 308c26dd 003f61a0 0 30c90a88 0 0 2
PP LP ArrangementProduct ArrangementOptProduct AdditionalArrClassification(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AdditionalArrClassificationçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AdditionalArrClassification';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AdditionalArrClassification'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30c90a88 003f61a0 0 4ed63157 0 0 2
PP LP CP COP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //feeTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //feeTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ed63157 003f61a0 0 3037a261 0 0 2
PP IPInfoExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3037a261 003f61a0 0 5901224b 0 0 2
IP IPInfoExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5901224b 003f61a0 0 73c26657 0 0 2
PP CMProduct CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailableçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73c26657 003f61a0 0 7a44553b 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a44553b 003f61a0 0 7b0d85bb 0 0 2
PP IPInfo RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo RateVariationKeyçäIF (EXISTS('Table PolicyProduct InvestProductInfo RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b0d85bb 003f61a0 0 25aeaa19 0 0 2
IP IPInfo FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6); //sequenceNumberçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25aeaa19 003f61a0 0 12840447 0 0 2
PP LoanProvision OLifEExtension LoanProvisionExtension TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRefçäIF (EXISTS('Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12840447 003f61a0 0 58f67893 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58f67893 003f61a0 0 2f6500f5 0 0 2
PP LP CP COPExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f6500f5 003f61a0 0 2fc69e64 0 0 2
PP AP FP FOP SourceIP RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct RateVariationKeyçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2fc69e64 003f61a0 0 47cee8a8 0 0 2
PP PPInfo APExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo AnnuityProductExcludeçäIF (EXISTS('Table PolicyProduct PolicyProductInfo AnnuityProductExclude';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo AnnuityProductExclude'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47cee8a8 003f61a0 0 2a112f0a 0 0 2
PP AP IncomePayoutProductOption AllocTypeProduct AmountProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a112f0a 003f61a0 0 2e0ace36 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e0ace36 003f61a0 0 29fece12 0 0 2
PP LP CP COP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenePeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29fece12 003f61a0 0 a65394a 0 0 2
Party Organization OrganizationFinancialData Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialData Attachment SignatureInfoçäIF (EXISTS('Table Party Organization OrganizationFinancialData Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a65394a 003f61a0 0 7733e3ff 0 0 2
PP LP CP COP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7733e3ff 003f61a0 0 4aee285b 0 0 2
PPExt Activity ScheduledChange(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity ScheduledChangeçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity ScheduledChange';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity ScheduledChange'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4aee285b 003f61a0 0 511f8c09 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 511f8c09 003f61a0 0 a10fed6 0 0 2
PP AP FP FOP Reward(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RewardçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a10fed6 003f61a0 0 a12d60c 0 0 2
PP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a12d60c 003f61a0 0 f974c21 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f974c21 003f61a0 0 27b68705 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRefçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27b68705 003f61a0 0 448dec4f 0 0 2
PP AP FP FOP AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 448dec4f 003f61a0 0 13819280 0 0 2
IP OLifEExtension InvestProductExtension ProxyInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct OLifEExtension InvestProductExtension ProxyInfoçäIF (EXISTS('Table InvestProduct OLifEExtension InvestProductExtension ProxyInfo';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct OLifEExtension InvestProductExtension ProxyInfo'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13819280 003f61a0 0 5b4c4166 0 0 2
PP AP AnnuitizationDateRestriction JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b4c4166 003f61a0 0 9df6960 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9df6960 003f61a0 0 533f9a41 0 0 2
PP LP CP DeathBenefitOptionInfo Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 533f9a41 003f61a0 0 5628984a 0 0 2
PP LP CP COP ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5628984a 003f61a0 0 2f0517fa 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef JurisdictionApprovalçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //sequenceNumberçä'key2 lookup'("Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1)) //jurisdictionçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //sequenceNumberçä'key2 lookup'("Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f0517fa 003f61a0 0 443b85ac 0 0 2
Party Producer ProducerAgreement ProductTypeInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer ProducerAgreement ProductTypeInfoçäIF (EXISTS('Table Party Producer ProducerAgreement ProductTypeInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer ProducerAgreement ProductTypeInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 443b85ac 003f61a0 0 798cb4e3 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 798cb4e3 003f61a0 0 3e4f56ce 0 0 2
PP DHP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions NatureSubCategoryOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e4f56ce 003f61a0 0 780b94b 0 0 2
PP LP CP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 780b94b 003f61a0 0 13e592c0 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13e592c0 003f61a0 0 795c6fb9 0 0 2
PP AP FP FOP BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 795c6fb9 003f61a0 0 1da9bd19 0 0 2
PP LP CP COPExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1da9bd19 003f61a0 0 251cebe7 0 0 2
PP LP CP COIRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct COIRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 251cebe7 003f61a0 0 5b9ede62 0 0 2
PP AP FP FOP NumIP SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b9ede62 003f61a0 0 399567d8 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 399567d8 003f61a0 0 31d2a81d 0 0 2
PP LP ArrangementProduct ArrangementOptProduct NumIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct NumInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31d2a81d 003f61a0 0 35307b11 0 0 2
PP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35307b11 003f61a0 0 2ecb70a7 0 0 2
PP DHP RP COP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ecb70a7 003f61a0 0 5465e3b1 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5465e3b1 003f61a0 0 6888d14e 0 0 2
Party Producer CarrierAppointment LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment LineOfAuthorityçäIF (EXISTS('Table Party Producer CarrierAppointment LineOfAuthority';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment LineOfAuthority'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6888d14e 003f61a0 0 64cdc9ba 0 0 2
PP LP CP COP AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64cdc9ba 003f61a0 0 61f8987f 0 0 2
PP LP CP COP UnderwritingClassProduct UnderwritingClassProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLatçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61f8987f 003f61a0 0 27bb57ea 0 0 2
PP PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27bb57ea 003f61a0 0 5eacc995 0 0 2
PP DHP RP COP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //feeTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5eacc995 003f61a0 0 4fe37394 0 0 2
PP AP FP FOP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions HealthServiceOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4fe37394 003f61a0 0 4dbd8844 0 0 2
PP Ownership AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dbd8844 003f61a0 0 56566a00 0 0 2
PP IPInfo InvestProductInfoXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo InvestProductInfoXLatçäIF (EXISTS('Table PolicyProduct InvestProductInfo InvestProductInfoXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo InvestProductInfoXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 56566a00 003f61a0 0 1ec9921f 0 0 2
PP DHP RP COP COIRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRateçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //mortalityAssumptionTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ec9921f 003f61a0 0 47401e82 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct FeeçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47401e82 003f61a0 0 6b68d199 0 0 2
PP Ownership(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OwnershipçäIF (EXISTS('Table PolicyProduct Ownership';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b68d199 003f61a0 0 43741f74 0 0 2
Party Producer CarrierAppointment Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment FeeçäIF (EXISTS('Table Party Producer CarrierAppointment Fee';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43741f74 003f61a0 0 2641000 0 0 2
FinActivityTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table FinActivityTypeCCçäIF (EXISTS('Table FinActivityTypeCC';e_(v_construct(s_keys);0) //FinActivityTypeCC_id_extçä) ; çä   // then read from the table çä'Table FinActivityTypeCC'[e_(v_construct(s_keys);0) //FinActivityTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2641000 003f61a0 0 2dc83ea8 0 0 2
AccountDesignationCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AccountDesignationCCçäIF (EXISTS('Table AccountDesignationCC';e_(v_construct(s_keys);0) //AccountDesignationCC_id_extçä) ; çä   // then read from the table çä'Table AccountDesignationCC'[e_(v_construct(s_keys);0) //AccountDesignationCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2dc83ea8 003f61a0 0 6c7f4ded 0 0 2
Party Producer License Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee JurisdictionApprovalçäIF (EXISTS('Table Party Producer License Fee JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer License Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c7f4ded 003f61a0 0 1f80e0b9 0 0 2
PP AP IncomePayoutProductOption TaxWithholdingProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //taxWithholdingPlaceçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //taxWithholdingPlaceçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f80e0b9 003f61a0 0 7470faac 0 0 2
PP AP FP FOP RoleRelationRestriction RelatedRoleDataCollection(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RelatedRoleDataCollectionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RelatedRoleDataCollection';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RelatedRoleDataCollection'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7470faac 003f61a0 0 3c36d418 0 0 2
Party Producer License FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table Party Producer License Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2); //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä) ; çä   // then read from the table çä'Table Party Producer License Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2);  //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c36d418 003f61a0 0 a8f86b1 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a8f86b1 003f61a0 0 27e73f56 0 0 2
IdentityVerificationTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IdentityVerificationTypeCCçäIF (EXISTS('Table IdentityVerificationTypeCC';e_(v_construct(s_keys);0) //IdentityVerificationTypeCC_id_extçä) ; çä   // then read from the table çä'Table IdentityVerificationTypeCC'[e_(v_construct(s_keys);0) //IdentityVerificationTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27e73f56 003f61a0 0 21f0010d 0 0 2
PP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 21f0010d 003f61a0 0 5cf3aff 0 0 2
IP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity Market';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //marketTypeçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity Market'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5cf3aff 003f61a0 0 51e5da28 0 0 2
PP DHP RP COP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51e5da28 003f61a0 0 69245f19 0 0 2
PP LP CP COP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions NatureSubCategoryOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69245f19 003f61a0 0 42125d9a 0 0 2
PP DHP RP COP UnderwritingClassProduct UnderwritingClassProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLatçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key") //UWClassProd_keyçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct UnderwritingClassProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42125d9a 003f61a0 0 1a6e39e1 0 0 2
PP LP CP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a6e39e1 003f61a0 0 17cc775e 0 0 2
PP LP CP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions NatureSubCategoryOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 17cc775e 003f61a0 0 2f80371a 0 0 2
PP LP CP COIRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct COIRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f80371a 003f61a0 0 46ae095c 0 0 2
PP LP ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct EnumeratedValueçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //sourceTransferAmtTypeçäe_(v_construct(s_keys);6) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AllocTypeProduct AmountProduct EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);6) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46ae095c 003f61a0 0 527c1db 0 0 2
PP LP CP COPExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 527c1db 003f61a0 0 439a925c 0 0 2
PP AP FP FOP BenefitChangeAllowed RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 439a925c 003f61a0 0 32b76676 0 0 2
PP LP CP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //indicatorCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);6) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct LifeProduct CoverageProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //indicatorCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);6); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);7)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32b76676 003f61a0 0 16e70a9c 0 0 2
PP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16e70a9c 003f61a0 0 55328535 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55328535 003f61a0 0 718a9bb9 0 0 2
PP DHP RP COP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //feeTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 718a9bb9 003f61a0 0 768418c9 0 0 2
PP AP FP FOP Reward TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //rewardResultTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //rewardResultTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 768418c9 003f61a0 0 646ccebf 0 0 2
PP AP FP FOP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions NatureSubCategoryOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 646ccebf 003f61a0 0 10000e53 0 0 2
PPExt FS(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatementçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10000e53 003f61a0 0 5245cabf 0 0 2
PP AP FP FOP TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5245cabf 003f61a0 0 1630c998 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1630c998 003f61a0 0 32e2b8b7 0 0 2
PP APExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32e2b8b7 003f61a0 0 280f2914 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 280f2914 003f61a0 0 4a259dac 0 0 2
PP Ownership FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowedçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a259dac 003f61a0 0 682adc63 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 682adc63 003f61a0 0 a9ea2bd 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7); //feeTypeçä'key6 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7);  //feeTypeçä'key6 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a9ea2bd 003f61a0 0 157f2b85 0 0 2
IP IPInfoExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //rateVariationCodeçä'key5 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçä'key5 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 157f2b85 003f61a0 0 7487c100 0 0 2
PP DHP RP RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7487c100 003f61a0 0 8cad83d 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8cad83d 003f61a0 0 61473c 0 0 2
IP IPInfoExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariationçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61473c 003f61a0 0 4fd82a91 0 0 2
PP AP FP FOPExt Ownership(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension OwnershipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4fd82a91 003f61a0 0 fff1e22 0 0 2
PP AP FP FOP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 fff1e22 003f61a0 0 3b3fa369 0 0 2
PP DHP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions ManagedCareOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b3fa369 003f61a0 0 1d77c510 0 0 2
PP LoanProvision RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d77c510 003f61a0 0 66f6628a 0 0 2
PP DHP RP OLifEExtension RiderProductExtension AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension AgeAmtProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 66f6628a 003f61a0 0 5a6aa365 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a6aa365 003f61a0 0 f7be57c 0 0 2
PP DHP RP COPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f7be57c 003f61a0 0 610b4d11 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 610b4d11 003f61a0 0 ed25126 0 0 2
PP Authorization SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization SignatureInfoçäIF (EXISTS('Table PolicyProduct Authorization SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ed25126 003f61a0 0 31038bc3 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31038bc3 003f61a0 0 31ca13ab 0 0 2
PP LP CP COP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31ca13ab 003f61a0 0 655d89d9 0 0 2
PP LP CP COP DividendRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //dividendRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //dividendRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 655d89d9 003f61a0 0 e82f4a6 0 0 2
PP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e82f4a6 003f61a0 0 2b79c0e 0 0 2
PP AP IncomePayoutProductOption ContingencyBenefitChange(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption ContingencyBenefitChangeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption ContingencyBenefitChange';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption ContingencyBenefitChange'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b79c0e 003f61a0 0 422b837b 0 0 2
PP DHP RP COP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 422b837b 003f61a0 0 7437d089 0 0 2
PP LP CP DeathBenefitOptionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DeathBenefitOptionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7437d089 003f61a0 0 17fb8f2f 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 17fb8f2f 003f61a0 0 5bba1153 0 0 2
PP AP FP FOP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ManagedCareOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5bba1153 003f61a0 0 2261b61e 0 0 2
PP LP CP COIRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct COIRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct COIRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct COIRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //mortalityAssumptionTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2261b61e 003f61a0 0 78d265b 0 0 2
LevelizationOptionCC PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3); //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3);  //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78d265b 003f61a0 0 7b686917 0 0 2
IP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee AttachmentçäIF (EXISTS('Table InvestProduct Fee Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee Attachment'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b686917 003f61a0 0 b2e5d11 0 0 2
PP LoanProvision RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //rateVariationCodeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //rateVariationCodeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b2e5d11 003f61a0 0 1883f63b 0 0 2
PP DHP RP COP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1883f63b 003f61a0 0 2d4dd737 0 0 2
PP DHP RP COP UnderwritingClassProduct TempTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key") //UWClassProd_keyçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d4dd737 003f61a0 0 76c7fa6a 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76c7fa6a 003f61a0 0 1b062de3 0 0 2
PP LP CP COPExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b062de3 003f61a0 0 423f6c48 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 423f6c48 003f61a0 0 1e3b5720 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e3b5720 003f61a0 0 62f342d8 0 0 2
PP LP CP COPExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //rateVariationCodeçäe_(v_construct(s_keys);11) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //rateVariationCodeçäe_(v_construct(s_keys);11) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62f342d8 003f61a0 0 43111ed0 0 0 2
PP DHP RP COP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43111ed0 003f61a0 0 34b82585 0 0 2
IP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProductçäIF (EXISTS('Table InvestProduct';e_(v_construct(s_keys);0) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct';e_(v_construct(s_keys);0); //productCodeçä'table effective date'(e_(v_construct(s_keys);1)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34b82585 003f61a0 0 542744e8 0 0 2
PP Authorization SignatureInfo Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization SignatureInfo AttachmentçäIF (EXISTS('Table PolicyProduct Authorization SignatureInfo Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization SignatureInfo Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 542744e8 003f61a0 0 3755547d 0 0 2
PP DHP RP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3755547d 003f61a0 0 287535c3 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 287535c3 003f61a0 0 7a81af90 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a81af90 003f61a0 0 6becb562 0 0 2
IP IPInfoExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //rateVariationCodeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäe_(v_construct(s_keys);5); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6becb562 003f61a0 0 587b52ef 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteriaçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 587b52ef 003f61a0 0 9eb6bcd 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier FeeçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9eb6bcd 003f61a0 0 18984642 0 0 2
PP LP ArrangementProduct ArrangementOptProduct RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18984642 003f61a0 0 287057c2 0 0 2
Party Producer CarrierAppointment ApptCounty(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment ApptCountyçäIF (EXISTS('Table Party Producer CarrierAppointment ApptCounty';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment ApptCounty'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 287057c2 003f61a0 0 51572370 0 0 2
PP AP FP FOPExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51572370 003f61a0 0 23451a79 0 0 2
PP LP PolicyOptionInfo Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo Attachment AttachmentReference';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo Attachment AttachmentReference'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23451a79 003f61a0 0 3cc540ef 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3cc540ef 003f61a0 0 67683b6c 0 0 2
PP LP CP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions HealthServiceOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67683b6c 003f61a0 0 58e1ce69 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValueçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58e1ce69 003f61a0 0 5114b1d5 0 0 2
DeathBenefitOptCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DeathBenefitOptCCçäIF (EXISTS('Table DeathBenefitOptCC';e_(v_construct(s_keys);0) //DeathBenefitOptCC_id_extçä) ; çä   // then read from the table çä'Table DeathBenefitOptCC'[e_(v_construct(s_keys);0) //DeathBenefitOptCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5114b1d5 003f61a0 0 4e215ecc 0 0 2
Party Carrier License Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee Attachment AttachmentReferenceçäIF (EXISTS('Table Party Carrier License Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e215ecc 003f61a0 0 4be46abd 0 0 2
PP DHP FeatureTransactionProduct AllowedDistributionAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct AllowedDistributionAgreementçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct AllowedDistributionAgreement';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct FeatureTransactionProduct AllowedDistributionAgreement'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4be46abd 003f61a0 0 61c2a5d1 0 0 2
PP LP CP COP DividendRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //dividendRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //dividendRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61c2a5d1 003f61a0 0 53c1938a 0 0 2
PP DHP RP COP BenefitChangeAllowed RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 53c1938a 003f61a0 0 158819dd 0 0 2
Party Producer License Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License ExamçäIF (EXISTS('Table Party Producer License Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer License Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 158819dd 003f61a0 0 1734046e 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1734046e 003f61a0 0 2de6205e 0 0 2
Party Producer License LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License LineOfAuthority ExamçäIF (EXISTS('Table Party Producer License LineOfAuthority Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer License LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2de6205e 003f61a0 0 6a69f4d3 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a69f4d3 003f61a0 0 65053a2f 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRefçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent TableRef'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65053a2f 003f61a0 0 1fd35e06 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1fd35e06 003f61a0 0 71579109 0 0 2
PP AP FP FOP TaxWithholdingProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //taxWithholdingPlaceçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //taxWithholdingPlaceçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71579109 003f61a0 0 3b43f7d3 0 0 2
PP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b43f7d3 003f61a0 0 34148aa9 0 0 2
PP AP FP FOP IncomeOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34148aa9 003f61a0 0 6df55990 0 0 2
PP IPInfoExt AllowedArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProductçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6df55990 003f61a0 0 34b88789 0 0 2
PP LP ArrangementProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçä'key3 lookup'("Table PolicyProduct LifeProduct ArrangementProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçä'key3 lookup'("Table PolicyProduct LifeProduct ArrangementProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34b88789 003f61a0 0 6911faea 0 0 2
PP AP IncomePayoutProductOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6911faea 003f61a0 0 596c2949 0 0 2
PP CMProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProductçäIF (EXISTS('Table PolicyProduct CommissionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6) //participantBasedPartySelectionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6) //participantBasedPartySelectionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 596c2949 003f61a0 0 7e5fe28e 0 0 2
PP LP CP ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct ParticipantProduct RelatedParticipantProductInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e5fe28e 003f61a0 0 410931cc 0 0 2
PP AP FP FOPExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 410931cc 003f61a0 0 37ac4046 0 0 2
PP LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LineOfAuthorityçäIF (EXISTS('Table PolicyProduct LineOfAuthority';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LineOfAuthority'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37ac4046 003f61a0 0 468b1801 0 0 2
PP AP FP FOP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions EmploymentClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 468b1801 003f61a0 0 14a139d3 0 0 2
PP LP CP COP DividendRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //dividendRateTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //dividendRateTypeçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10);e_(v_construct(s_keys);11)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14a139d3 003f61a0 0 75c67b37 0 0 2
PP DHP RP COP ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75c67b37 003f61a0 0 1fb1337a 0 0 2
Party GovtIDInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party GovtIDInfoçäIF (EXISTS('Table Party GovtIDInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party GovtIDInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1fb1337a 003f61a0 0 68655df6 0 0 2
PP LP CP COP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 68655df6 003f61a0 0 180f5ab9 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 180f5ab9 003f61a0 0 623021ba 0 0 2
PP AP FP FOP NumIP DestIP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 623021ba 003f61a0 0 743c4997 0 0 2
PP DHP RP COP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 743c4997 003f61a0 0 1229b286 0 0 2
PP LP CP UnderwritingClassProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)); //issueGenderçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11));e_(v_construct(s_keys);12)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11));  //issueGenderçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11));e_(v_construct(s_keys);12)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1229b286 003f61a0 0 577aaa52 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 577aaa52 003f61a0 0 856b299 0 0 2
PP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FeeçäIF (EXISTS('Table PolicyProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 856b299 003f61a0 0 7b71ad1c 0 0 2
Party Organization OrganizationFinancialData Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialData Attachment AttachmentReferenceçäIF (EXISTS('Table Party Organization OrganizationFinancialData Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b71ad1c 003f61a0 0 67f2d33b 0 0 2
PP DHP RP COP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)); //underwritingClassçäe_(v_construct(s_keys);8); //underwritingSubClassçä'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)); //tobaccoPremiumBasisçä'key8 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9));e_(v_construct(s_keys);10)) //issueGenderçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7)); //underwritingClassçäe_(v_construct(s_keys);8); //underwritingSubClassçä'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)); //tobaccoPremiumBasisçä'key8 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);'key7 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9));e_(v_construct(s_keys);10)); //issueGenderçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67f2d33b 003f61a0 0 3e1b14e0 0 0 2
PP BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct BusinessProcessAllowedçäIF (EXISTS('Table PolicyProduct BusinessProcessAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä) ; çä   // then read from the table çä'Table PolicyProduct BusinessProcessAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e1b14e0 003f61a0 0 54203cbd 0 0 2
PP AP FP FOP AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 54203cbd 003f61a0 0 76d6f2d4 0 0 2
PP PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76d6f2d4 003f61a0 0 342624f1 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 342624f1 003f61a0 0 1b3a62bc 0 0 2
Party Carrier License Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License AttachmentçäIF (EXISTS('Table Party Carrier License Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b3a62bc 003f61a0 0 4a15e1bb 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a15e1bb 003f61a0 0 5f2df39d 0 0 2
PP LP ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct OccurrenceLimitInfo OccurrenceTier Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f2df39d 003f61a0 0 642b77bd 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 642b77bd 003f61a0 0 5ebe55cf 0 0 2
IP IPInfoExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ebe55cf 003f61a0 0 10578c79 0 0 2
PP DHP RP COP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10578c79 003f61a0 0 2d212bb7 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d212bb7 003f61a0 0 60e9026f 0 0 2
PP DHP RP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 60e9026f 003f61a0 0 4abd6009 0 0 2
IP RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table InvestProduct RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4abd6009 003f61a0 0 4b44855f 0 0 2
Party Carrier License Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee Attachment SignatureInfoçäIF (EXISTS('Table Party Carrier License Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4b44855f 003f61a0 0 661358b7 0 0 2
CommSchedule CommFormula(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommSchedule CommFormulaçäIF (EXISTS('Table CommSchedule CommFormula';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä) ; çä   // then read from the table çä'Table CommSchedule CommFormula'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 661358b7 003f61a0 0 435effbf 0 0 2
BusinessProcessCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table BusinessProcessCCçäIF (EXISTS('Table BusinessProcessCC';e_(v_construct(s_keys);0) //BusinessProcessCC_id_extçä) ; çä   // then read from the table çä'Table BusinessProcessCC'[e_(v_construct(s_keys);0) //BusinessProcessCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 435effbf 003f61a0 0 77b4ccb9 0 0 2
PP DHP RP COP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 77b4ccb9 003f61a0 0 1cb85fc3 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1cb85fc3 003f61a0 0 5be2d351 0 0 2
PP DHP RP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5be2d351 003f61a0 0 36fff30b 0 0 2
PP AP FP FOP FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36fff30b 003f61a0 0 59f31f97 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDefçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9); //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9);  //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59f31f97 003f61a0 0 34621b95 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef ExtensionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6); //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6);  //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34621b95 003f61a0 0 3b8b02d3 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b8b02d3 003f61a0 0 70f72993 0 0 2
PP LP CP COPExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 70f72993 003f61a0 0 57103e7d 0 0 2
PP LP ArrangementProduct ArrangementOptProduct QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57103e7d 003f61a0 0 6fe2eccf 0 0 2
Party Organization(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party OrganizationçäIF (EXISTS('Table Party Organization';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fe2eccf 003f61a0 0 5ac27986 0 0 2
PP Ownership AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ac27986 003f61a0 0 2cc83a14 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2cc83a14 003f61a0 0 58a337fd 0 0 2
PP DHP RP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenePeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58a337fd 003f61a0 0 71b069 0 0 2
ValidPremOptCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ValidPremOptCCçäIF (EXISTS('Table ValidPremOptCC';e_(v_construct(s_keys);0) //ValidPremOptCC_id_extçä) ; çä   // then read from the table çä'Table ValidPremOptCC'[e_(v_construct(s_keys);0) //ValidPremOptCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71b069 003f61a0 0 7f40c4b8 0 0 2
IP RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation TableRefçäIF (EXISTS('Table InvestProduct RateVariation TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation TableRef'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f40c4b8 003f61a0 0 bebcd52 0 0 2
PP DHP RP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 bebcd52 003f61a0 0 6958fe99 0 0 2
PP Authorization QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6958fe99 003f61a0 0 4ca27163 0 0 2
PP DHP RP COP COIRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //mortalityAssumptionTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct COIRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ca27163 003f61a0 0 292f4b1a 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvisionçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 292f4b1a 003f61a0 0 7af8431a 0 0 2
PP AP FP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7af8431a 003f61a0 0 2507264d 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2507264d 003f61a0 0 44dec9f8 0 0 2
PP AP FP FOP AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44dec9f8 003f61a0 0 174798f9 0 0 2
PP DHP RP COP UnderwritingClassProduct AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct AgeAmtProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key") //UWClassProd_keyçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct UnderwritingClassProduct AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçä'PP DHP RP COP UnderwritingClassProduct'(s_keys;"UWClassProd_key"); //UWClassProd_keyçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 174798f9 003f61a0 0 5034552e 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValueçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4) //axisNameçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5034552e 003f61a0 0 2becc4c7 0 0 2
Party(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PartyçäIF (EXISTS('Table Party';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2becc4c7 003f61a0 0 65700fbf 0 0 2
PP APExt ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65700fbf 003f61a0 0 3db8e151 0 0 2
PP DHP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions OccupClassOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3db8e151 003f61a0 0 79113842 0 0 2
PP LP CP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79113842 003f61a0 0 711b1b3b 0 0 2
PP LP ArrangementProduct ArrangementOptProduct SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 711b1b3b 003f61a0 0 5d1de267 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d1de267 003f61a0 0 69ac0f9d 0 0 2
PP AP FP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69ac0f9d 003f61a0 0 2e4a7cdb 0 0 2
PP LP CPExt CPFeature(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeatureçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e4a7cdb 003f61a0 0 19e316eb 0 0 2
PP LP CP RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19e316eb 003f61a0 0 71648e0 0 0 2
IP RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariationçäIF (EXISTS('Table InvestProduct RateVariation';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71648e0 003f61a0 0 15ecd4cc 0 0 2
PP Ownership AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15ecd4cc 003f61a0 0 5ac6c55c 0 0 2
IP RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation AttachmentçäIF (EXISTS('Table InvestProduct RateVariation Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation Attachment'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ac6c55c 003f61a0 0 2c8e1dc9 0 0 2
Party PartyXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party PartyXLatçäIF (EXISTS('Table Party PartyXLat';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party PartyXLat'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c8e1dc9 003f61a0 0 1117446e 0 0 2
PP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1117446e 003f61a0 0 1643c9bf 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1643c9bf 003f61a0 0 71a1497 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 71a1497 003f61a0 0 2a50064a 0 0 2
PP DHP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions EmploymentClassOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a50064a 003f61a0 0 4aaeb7b9 0 0 2
PP LP CP COP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4aaeb7b9 003f61a0 0 6a9ba6c 0 0 2
PP LP CP COP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ElimPeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a9ba6c 003f61a0 0 2c1e0b86 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c1e0b86 003f61a0 0 67834da5 0 0 2
PP LP CP COP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67834da5 003f61a0 0 2fa40ef1 0 0 2
PP LP CP COP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2fa40ef1 003f61a0 0 3f18ddc3 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowedçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f18ddc3 003f61a0 0 260ff9cf 0 0 2
PP AP FP FOP AllocTypeProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 260ff9cf 003f61a0 0 5f0bb46e 0 0 2
PP APExt ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f0bb46e 003f61a0 0 765a16a6 0 0 2
PP LP CP COP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct DisabilityHealthProvisions ManagedCareOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 765a16a6 003f61a0 0 a7c33bd 0 0 2
IP IPInfo QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity EntityType';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity EntityType';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a7c33bd 003f61a0 0 2c0f487b 0 0 2
Party Producer NationApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer NationApprovalçäIF (EXISTS('Table Party Producer NationApproval';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer NationApproval'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c0f487b 003f61a0 0 10cc55b2 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10cc55b2 003f61a0 0 7a4b63b4 0 0 2
PP DHP RP COP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a4b63b4 003f61a0 0 41608a8 0 0 2
PP LP CP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41608a8 003f61a0 0 13d63cc8 0 0 2
PP AP FP FOP AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13d63cc8 003f61a0 0 42a60115 0 0 2
PP DHP RP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions HealthServiceOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42a60115 003f61a0 0 1006dc17 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1006dc17 003f61a0 0 1a21ea5a 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct AttachmentçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a21ea5a 003f61a0 0 789f655b 0 0 2
PP DHP RP COP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 789f655b 003f61a0 0 614be17a 0 0 2
PP IPInfo Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 614be17a 003f61a0 0 1c9566d4 0 0 2
PP LP ArrangementProduct Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c9566d4 003f61a0 0 4d0534fa 0 0 2
PP DHP RP COP ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d0534fa 003f61a0 0 944b953 0 0 2
PP APExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 944b953 003f61a0 0 4f9214de 0 0 2
PP DHP RP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions EmploymentClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f9214de 003f61a0 0 6a281c9a 0 0 2
Party Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party AttachmentçäIF (EXISTS('Table Party Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a281c9a 003f61a0 0 39b0c163 0 0 2
PP DHP RP COP DividendRate TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //dividendRateTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //dividendRateTypeçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DividendRate TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);'table effective date'(e_(v_construct(s_keys);6));e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39b0c163 003f61a0 0 47ce36ba 0 0 2
PP LP CP COP UnderwritingClassProduct TempTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct TempTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47ce36ba 003f61a0 0 27d50eb 0 0 2
PP AP FP FOPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27d50eb 003f61a0 0 7eeae4b 0 0 2
PP LP CP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7eeae4b 003f61a0 0 484981d5 0 0 2
Party Producer CarrierAppointment FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table Party Producer CarrierAppointment Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2); //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2);  //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 484981d5 003f61a0 0 2c3dd6cc 0 0 2
PP DHP RP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c3dd6cc 003f61a0 0 4f73f70c 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct AllowedDesignation'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f73f70c 003f61a0 0 79f9da9b 0 0 2
SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponentçäIF (EXISTS('Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo OLifEExtension SourceInfoExtension CarrierProvision PDFComponent'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79f9da9b 003f61a0 0 390ebd60 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 390ebd60 003f61a0 0 269b356a 0 0 2
PP LoanProvision RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 269b356a 003f61a0 0 4c1579f 0 0 2
Party Producer CarrierAppointment Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee AttachmentçäIF (EXISTS('Table Party Producer CarrierAppointment Fee Attachment';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee Attachment'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c1579f 003f61a0 0 5445de92 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDefçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5445de92 003f61a0 0 5a41160c 0 0 2
PP AP IncomePayoutProductOption ReturnOfPremium(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption ReturnOfPremiumçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption ReturnOfPremium';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption ReturnOfPremium'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a41160c 003f61a0 0 3affb08f 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3affb08f 003f61a0 0 4f59ec8f 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f59ec8f 003f61a0 0 59372f11 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59372f11 003f61a0 0 5b5445c9 0 0 2
PP IPInfoExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //rateVariationCodeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //rateVariationCodeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b5445c9 003f61a0 0 2a94916c 0 0 2
PP FreelookInvestRuleProduct InvestRuleProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct InvestRuleProductçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct InvestRuleProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //investRuleçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct InvestRuleProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //investRuleçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a94916c 003f61a0 0 807159b 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvisionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 807159b 003f61a0 0 6910b790 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpressionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6910b790 003f61a0 0 b17c1e7 0 0 2
PP LP PolicyOptionInfo QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct PolicyOptionInfo QualifiedPlanEntity'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b17c1e7 003f61a0 0 69f25cd5 0 0 2
PP AP FP FOP NumIP DestIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69f25cd5 003f61a0 0 1668058e 0 0 2
PP LP CP COP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10); //mortalityAssumptionTypeçäe_(v_construct(s_keys);11) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct PremiumRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);11) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1668058e 003f61a0 0 7dbdf2fb 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7dbdf2fb 003f61a0 0 175ae981 0 0 2
IP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct Fee Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee Attachment AttachmentReference'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 175ae981 003f61a0 0 5ed4110 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ed4110 003f61a0 0 738c4f02 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 738c4f02 003f61a0 0 619cf421 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 619cf421 003f61a0 0 35200a5a 0 0 2
PP LP CP COP ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35200a5a 003f61a0 0 2f7b6470 0 0 2
PP DHP RP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct DisabilityHealthProvisions NatureSubCategoryOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //riderCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f7b6470 003f61a0 0 303a0193 0 0 2
Party Producer License(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer LicenseçäIF (EXISTS('Table Party Producer License';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer License'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 303a0193 003f61a0 0 43a7d997 0 0 2
PP DHP RP COP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43a7d997 003f61a0 0 20a5e152 0 0 2
PP AP FP FOP DateCollection(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DateCollectionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DateCollection';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DateCollection'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 20a5e152 003f61a0 0 67755d14 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67755d14 003f61a0 0 36217d25 0 0 2
PP LP CP COP ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct ParticipantProduct RelatedParticipantProductInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36217d25 003f61a0 0 2898e424 0 0 2
RelatedRoleCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table RelatedRoleCCçäIF (EXISTS('Table RelatedRoleCC';e_(v_construct(s_keys);0) //RelatedRoleCC_id_extçä) ; çä   // then read from the table çä'Table RelatedRoleCC'[e_(v_construct(s_keys);0) //RelatedRoleCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2898e424 003f61a0 0 2dd3def9 0 0 2
PP DHP RP COP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRateçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäe_(v_construct(s_keys);8) //premiumRateTypeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //mortalityAssumptionTypeçäe_(v_construct(s_keys);8); //premiumRateTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2dd3def9 003f61a0 0 4dc6e014 0 0 2
COLIndexCapCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table COLIndexCapCCçäIF (EXISTS('Table COLIndexCapCC';e_(v_construct(s_keys);0) //COLIndexCapCC_id_extçä) ; çä   // then read from the table çä'Table COLIndexCapCC'[e_(v_construct(s_keys);0) //COLIndexCapCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dc6e014 003f61a0 0 38beada 0 0 2
Party Producer CarrierAppointment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointmentçäIF (EXISTS('Table Party Producer CarrierAppointment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 38beada 003f61a0 0 76c7e643 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDefçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76c7e643 003f61a0 0 62749f7b 0 0 2
PP LP ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //paymentModeçäe_(v_construct(s_keys);6); //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //paymentModeçäe_(v_construct(s_keys);6);  //paymentMethodçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62749f7b 003f61a0 0 217a7bf3 0 0 2
PP PPInfo CommOptionAvailable ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable ExclusionInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable ExclusionInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 217a7bf3 003f61a0 0 54a4f95f 0 0 2
PP LP CP COP UnderwritingClassProduct PermTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 54a4f95f 003f61a0 0 3dba7906 0 0 2
PP DHP RP COP BenefitChangeAllowed AllowedChangeMode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedChangeModeçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedChangeMode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedChangeMode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3dba7906 003f61a0 0 6c108944 0 0 2
PP LP CP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct FeeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c108944 003f61a0 0 4082bb26 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4082bb26 003f61a0 0 2d1461df 0 0 2
PP Authorization SignatureInfo Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization SignatureInfo Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Authorization SignatureInfo Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization SignatureInfo Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d1461df 003f61a0 0 22ba5ed6 0 0 2
PP LP CP COP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22ba5ed6 003f61a0 0 2a366cdf 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a366cdf 003f61a0 0 405abfdc 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteriaçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 405abfdc 003f61a0 0 5f0e7bd1 0 0 2
PP DHP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct DisabilityHealthProvisions BenePeriodAccOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f0e7bd1 003f61a0 0 fec4edb 0 0 2
PP LP CPExt CPFeature RecalcProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature RecalcProvisionçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature RecalcProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature RecalcProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 fec4edb 003f61a0 0 692b18f2 0 0 2
PP AP FP FOP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions DeductionOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 692b18f2 003f61a0 0 41b95865 0 0 2
PP LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LineOfAuthority ExamçäIF (EXISTS('Table PolicyProduct LineOfAuthority Exam';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //lineOfAuthorityTypeçäe_(v_construct(s_keys);5) //examTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LineOfAuthority Exam'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);5) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41b95865 003f61a0 0 312a27ca 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension AgeAmtProductçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension AgeAmtProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension AgeAmtProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 312a27ca 003f61a0 0 5b3d8cfd 0 0 2
PP DHP RP COP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b3d8cfd 003f61a0 0 6fa6f8d6 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fa6f8d6 003f61a0 0 3c85763a 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c85763a 003f61a0 0 1ba57235 0 0 2
Party Carrier(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party CarrierçäIF (EXISTS('Table Party Carrier';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ba57235 003f61a0 0 60cece7f 0 0 2
DistributionAgreement QualifiedPlanEntityExclude EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude EntityTypeçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude EntityType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude EntityType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 60cece7f 003f61a0 0 b820ff 0 0 2
PP DHP RP OLifEExtension RiderProductExtension RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b820ff 003f61a0 0 3a4d7178 0 0 2
PP LP ArrangementProduct Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a4d7178 003f61a0 0 14586018 0 0 2
DistributionAgreement PPInfo CommOptionAvailable ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable ExclusionInvestProductçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable ExclusionInvestProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable ExclusionInvestProduct'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14586018 003f61a0 0 7acc323a 0 0 2
PP LP CP COP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //productCodeçä'table effective date'(e_(v_construct(s_keys);9)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7acc323a 003f61a0 0 2c4296e6 0 0 2
PP Ownership AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c4296e6 003f61a0 0 f1e9bc 0 0 2
PP AP IncomePayoutProductOption Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment AttachmentReference';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment AttachmentReference'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f1e9bc 003f61a0 0 a989a9e 0 0 2
PP LP ArrangementProduct ArrangementOptProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct LifeProduct ArrangementProduct ArrangementOptProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a989a9e 003f61a0 0 7d7f4cf2 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d7f4cf2 003f61a0 0 2e10b113 0 0 2
PP Dividend TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Dividend TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Dividend TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //divTypeçäe_(v_construct(s_keys);5); //divOYTOptTypeçä'key4 lookup'("Table PolicyProduct Dividend TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Dividend TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //divTypeçäe_(v_construct(s_keys);5);  //divOYTOptTypeçä'key4 lookup'("Table PolicyProduct Dividend TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e10b113 003f61a0 0 6b32453 0 0 2
Party Availability(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party AvailabilityçäIF (EXISTS('Table Party Availability';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Availability'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b32453 003f61a0 0 505b5952 0 0 2
PP LP FeatureTransactionProduct AllowedDistributionAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct FeatureTransactionProduct AllowedDistributionAgreementçäIF (EXISTS('Table PolicyProduct LifeProduct FeatureTransactionProduct AllowedDistributionAgreement';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct FeatureTransactionProduct AllowedDistributionAgreement'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 505b5952 003f61a0 0 749149b6 0 0 2
PP AP FP FOP BenefitChangeAllowed ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 749149b6 003f61a0 0 526ae9d5 0 0 2
ActionTypeAllowedCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ActionTypeAllowedCCçäIF (EXISTS('Table ActionTypeAllowedCC';e_(v_construct(s_keys);0) //ActionTypeAllowedCC_id_extçä) ; çä   // then read from the table çä'Table ActionTypeAllowedCC'[e_(v_construct(s_keys);0) //ActionTypeAllowedCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 526ae9d5 003f61a0 0 4be8b74c 0 0 2
PP LoanProvision MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LoanProvision MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4be8b74c 003f61a0 0 6d7c15c7 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d7c15c7 003f61a0 0 61f89c51 0 0 2
PP Authorization QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61f89c51 003f61a0 0 327a46e6 0 0 2
PP DHP RP OLifEExtension RiderProductExtension DividendRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRateçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //dividendRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //dividendRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 327a46e6 003f61a0 0 1292f53 0 0 2
PPExt Activity Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity AttachmentçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1292f53 003f61a0 0 515c3684 0 0 2
PP DHP RP COPExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);7); //rateVariationCodeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäe_(v_construct(s_keys);7); //rateVariationCodeçäe_(v_construct(s_keys);8); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 515c3684 003f61a0 0 6590c887 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6590c887 003f61a0 0 19faafde 0 0 2
PP AP FP FOP AdditionalRiderClassification(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalRiderClassificationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalRiderClassification';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalRiderClassification'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19faafde 003f61a0 0 188c0d26 0 0 2
Party Availability AvailabilityContactPoint(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Availability AvailabilityContactPointçäIF (EXISTS('Table Party Availability AvailabilityContactPoint';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Availability AvailabilityContactPoint'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 188c0d26 003f61a0 0 6bc80c68 0 0 2
PP DHP RP UnderwritingClassProduct PermTableRatingInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //underwritingClassçäe_(v_construct(s_keys);6); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçä'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));  //underwritingClassçäe_(v_construct(s_keys);6);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);'key5 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'key3 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct UnderwritingClassProduct PermTableRatingInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5));e_(v_construct(s_keys);6);e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6bc80c68 003f61a0 0 5a564d36 0 0 2
PP AP FP FOP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MannerOfLossOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a564d36 003f61a0 0 804a936 0 0 2
PP LP CP COP BenefitChangeAllowed AllowedChangeMode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedChangeModeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedChangeMode';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct BenefitChangeAllowed AllowedChangeMode'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 804a936 003f61a0 0 4f1fd364 0 0 2
IP RateLockInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateLockInfoçäIF (EXISTS('Table InvestProduct RateLockInfo';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct RateLockInfo'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f1fd364 003f61a0 0 5914db9 0 0 2
PP DHP OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct OLifEExtension DisabilityHealthProductExtension ParticipantProduct RelatedParticipantProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5914db9 003f61a0 0 100d8577 0 0 2
PP AP FP FOPExt Ownership RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 100d8577 003f61a0 0 5f746f88 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5f746f88 003f61a0 0 2725478f 0 0 2
PP DHP RP OLifEExtension RiderProductExtension DividendRate TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRefçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //dividendRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct OLifEExtension RiderProductExtension DividendRate TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5) //dividendRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2725478f 003f61a0 0 336e2417 0 0 2
PP LP CP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 336e2417 003f61a0 0 8f193b1 0 0 2
Party Producer License Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License AttachmentçäIF (EXISTS('Table Party Producer License Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer License Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8f193b1 003f61a0 0 daac9a1 0 0 2
PP LP CP UnderwritingClassProduct UnderwritingClassProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLatçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct UnderwritingClassProductXLat";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 daac9a1 003f61a0 0 18c2e84b 0 0 2
PP DHP RP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct DisabilityHealthProduct RiderProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //riderCodeçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct DisabilityHealthProduct RiderProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18c2e84b 003f61a0 0 8cd0039 0 0 2
PP LP CP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8cd0039 003f61a0 0 66d669d8 0 0 2
Party Organization OrganizationFinancialData(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialDataçäIF (EXISTS('Table Party Organization OrganizationFinancialData';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 66d669d8 003f61a0 0 52c322d2 0 0 2
PP LP CPExt CPFeature AdditionalPaymentProvision Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision FeeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension CoverageProductFeature AdditionalPaymentProvision Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52c322d2 003f61a0 0 618d6ef2 0 0 2
PP LP CP COPExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 618d6ef2 003f61a0 0 9982a80 0 0 2
PP LoanProvision RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //rateVariationCodeçä'key4 lookup'("Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //rateVariationCodeçä'key4 lookup'("Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9982a80 003f61a0 0 7a9dd453 0 0 2
PP CMProduct CommOptionAvailable JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçä'key6 lookup'("Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçä'key6 lookup'("Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a9dd453 003f61a0 0 37c5a0e2 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37c5a0e2 003f61a0 0 20dce38 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 20dce38 003f61a0 0 1ddf8db6 0 0 2
PP FreelookInvestRuleProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçä'key3 lookup'("Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçä'key3 lookup'("Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ddf8db6 003f61a0 0 1947f6c 0 0 2
PP DHP RP COP BenefitChangeAllowed AllowedIndexInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedIndexInfoçäIF (EXISTS('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedIndexInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct DisabilityHealthProduct RiderProduct CovOptionProduct BenefitChangeAllowed AllowedIndexInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //riderCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1947f6c 003f61a0 0 4dcc6e7b 0 0 2
IP OLifEExtension InvestProductExtension TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct OLifEExtension InvestProductExtension TableRefçäIF (EXISTS('Table InvestProduct OLifEExtension InvestProductExtension TableRef';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct OLifEExtension InvestProductExtension TableRef'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dcc6e7b 003f61a0 0 44b12d52 0 0 2
PP LoanProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvisionçäIF (EXISTS('Table PolicyProduct LoanProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44b12d52 003f61a0 0 7d2386c0 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d2386c0 003f61a0 0 0 0 0 2
PP IPInfoExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
A0 003f4280 0 0 0 0 0 0

T0 003f42ec 0 0 0 0 0 0

I0 003f4358 0 0 0 0 0 0

-
O0
E0
L0
B0
P0
F1222
003f2928
003f46f0
003f4870
003f49a8
003f4b98
003f4e18
003f4f78
01e607b0
01e605a8
01e60cf0
01e60cf1
01e60cf2
003f5008
003f5fe0
003f61a0
003f6350
3eacf291
666f1833
50189862
505b7815
471a2937
7a3be398
313a4be0
5d3c49a5
26b08e8
1563d697
5da1ebea
38e896e3
5b58f1e
1f4ff0f
147794a8
1f1b8979
5c75ecde
233a3bce
7929cd52
6aa415e3
6fcf80fb
693bce09
307549b1
4c9db4f2
712e9c59
e5e049c
2cf0428d
7f535a50
30030f4d
4436028a
c80819b
30052e38
20d49a1e
81de164
6347e82c
7193361d
5714613
3be5268e
21c63698
4890493e
6a2372cd
7c316d9f
63005727
164d8e2d
2c1d2e11
769b8c57
7423438d
4fff4f15
4e920368
1b3a9213
5c841b23
4dca6aad
79a47b0a
7ccb0921
66a2a0db
e240723
10797f46
2e6a7f3a
52fd099c
1be3ef71
2b9f97b7
5e082c0b
1541b792
4dcfe09d
55a2580a
29e8214b
14ae66eb
23dabd51
5615a519
4f3b867e
5fc916b7
6ee7b61
72a6c657
f56b643
610e5e9b
4d6c616b
48faaeb3
b8b29af
2f588642
14d4d35
2e5f6c21
b684d29
25be5bbd
75b1ca4b
598ef647
519abe1
677a5f8a
2c7929f6
f7fbf9b
75633fbf
985117d
4a98966
7a1bfb4a
7e494f1c
75f6233f
170315e
1c56e541
6db90cbe
4288a06a
a38c49f
6b2cc15e
6e8f7c40
1f3c278c
75016916
5c302bc3
d5c31ab
4d5ea106
737283c
59949a2
5f6992ef
12a002f2
f55ff71
a24f440
23b3c7d7
730d3204
7267a610
437db9ce
6b31f225
212f9bad
b5534f1
6755384d
7a502e2d
7afa8abc
14109ba9
24bfbda3
3206377e
3ffa5919
4ff40a3f
403a3bba
7adbfea0
35068c26
467ba0df
43309e8a
15d6ccac
2555bc8
2121dcc6
a77d6ca
22c01a31
646f70cb
5ad532f6
1ce6bd0c
52a0b011
149ef833
24078d61
65c76fbc
61c8fe6a
4ce3f7f
638e0714
12811c13
1ead1ed3
4c1b7d2f
7e4d639b
13cdc3bc
26eeb51e
1c6e93bf
3a1a3a50
55d20304
3153c613
43b55501
4f5555dd
69fe7b4c
14588942
72a9f4c2
632bf413
526605d
64bd7766
63a3dcaa
538ff45c
9d60dfc
74db49d4
1e0d9097
7f2042e7
81b6e1
226db488
1f60697a
1333ca9c
166d0fa1
4d4f019
a49764a
3db9626e
330e3ab2
39143b12
6f172beb
2d010eeb
5b8d6594
107f5d48
499624fd
71b6574
3d32ac75
163541a9
57f459fe
501a381d
3f56049d
16c1e50e
12c46555
5a3b61b
23426de1
4ad50ce3
683af312
2cb05914
7a1578bb
6fb9a80c
f319ee5
3aa253bc
218bc25f
6a3b1f6f
1097c10b
2e29c945
329a5610
902be58
4e547a32
30169937
47a7b1b7
5734040c
18c61102
511c98e6
3e8b1183
3ef3ce08
25d4e00
1fdcf6d4
5435d78a
1209fee5
644200de
75eacab9
492be180
a00c96a
554a411d
46fab4c5
37155184
4f8025e
7e166d07
4f945a57
a2f55cb
440ea21f
5a0b9fc2
162edd70
a1aeb6c
2419bfe2
3f138978
77a602ab
6dac8349
51e86505
7e6e2185
2aef0779
345eac35
2906eae7
5ee2afe1
7dca5474
4c901ea5
1ceb7129
332a09d1
5e5ffd91
4c60e4d1
4a3d9641
35b4c897
3908e339
5ee54b3d
664aa101
3291d861
5b91cb01
55e502ab
1feda21d
3e5ff3aa
2a8ee474
4954f644
3cf8324b
71ec82d7
1baf2e14
28e9af86
2dfc0a53
4daee646
3fdff604
438e0cfc
342f28ac
5235e819
5207c68b
1a908965
3e9f14cc
61e754b7
34ecf129
7712ba62
41893c73
5e4506f9
598706bb
48b1d34d
1cd95ef3
162db620
5f24d076
1cf32ee4
7b6bd8b
35c20e47
6906d818
230507a8
4d1e604a
2f4e0b22
7019941b
419f5e97
d6b475
7933822f
6445c8e9
579486fe
392c43bd
2edca4c8
557b5ba2
4c96c307
37737e11
5e98d36e
69a6811b
6c92a47d
6defa51e
40258889
5e24106d
70b13a1e
36fa13c2
6f8b9801
1d38d4c2
1703964e
656d7af6
1e0baa71
2b4f4c2e
2d69459b
64b98474
7aaf590b
1e41996f
380d56aa
3f3f966b
68c09754
51788f6c
7e45b40e
9bad408
3021dfd8
3a1d927
4871ed3e
34f1bbf6
6d10c666
7959c805
5070cb20
3c6725d3
59d25a8f
7626608e
156054b6
4e5a4a53
3fc4f1e7
593bd85a
16757122
282748e2
5e62cf6c
496803bd
6496a1c8
4103fe5d
bb69d7d
77b2b5ab
57b62aa0
5d60a9a4
193fb2d8
928e15
45227b18
29a726e2
78014e5
580aace8
42c55968
1bf461e9
6d16eaab
367530e6
303e4e9c
5e8f7128
25f33cd7
1d2a8c75
7e2cea71
292f1e9a
df4b03c
5d58d4e9
f48ed48
53522445
442d956a
3f2f7fc2
583f9296
6c49d948
31593c39
2240e43b
637ef957
7f708cc3
a6488b3
58d526ab
6ce64bab
3f5554
39571b13
6670118c
725fdc64
ca24d3c
4dae43cc
585ff6
3f391e11
5f427847
10824cf
190371c3
64deba52
19ffa43a
47a2086d
5ac52962
3a5a964
2bdcdb0e
79f2f185
6c9b4742
16624295
973221e
42edc51b
590ac863
133c4ffe
5af46617
2e7b5067
ff96f0f
4f118dd9
7d6741e9
428e5dc8
699ca46b
7fd8ad8c
154cf435
1dcf8f47
11c0d00e
64074004
18c09c64
661bbfff
64901001
536624ea
3004bc43
4a67320f
371a64bb
2f8c59ae
3d81500c
38a2ac5d
43d425a
6144f971
7247be29
2e2ee5b8
276d8cb2
429fefa9
7eb6dfb0
588d7701
65813f29
34208dce
4aed0ca9
3e4f1e96
72753ca5
61156e00
5c6f13d2
34a466eb
701b877d
1c1624b2
4d3466e7
147d1239
b7beb4e
5731e342
562b26ea
2210817d
4a5f7869
2e243da1
26d2484e
69013c8c
6034ee16
d59b476
17ac31de
1c272df1
7a4c4909
1a0c9e50
c765264
73fbbf78
517e650
10ef2d44
14a6b748
65cfbadb
179fa3b4
484dcebe
7e583930
6e118bc1
4781ff19
65289d56
668c31f
458c4052
2d5b6776
370ce41f
232b576a
4d57579d
67749691
1e94ed5c
72e1497e
7554dc38
3eaee89f
6cd98b5c
1e2753c5
225e5fbf
732c08c7
49f298c
5d848a2f
130ae822
2316ed31
497d6848
751c12f9
287f76ba
6aefeca
2ab6576a
530d6841
60376d8e
4e15286d
60755186
7c23e4da
2c80c526
158d83bd
730971ed
71165df7
1ac4710a
61b7a619
6670ee72
cca719a
46710dc3
282e78c2
67c6cf5b
788650b9
44e48028
4025fbfa
4a7b164
27953079
3fae2ce1
672f5971
44d54f6f
e6a93a4
4975ee19
1e838d7b
677f2163
5b91bd42
18b794a7
47e3f67a
52dace00
4de2bbeb
761c2dbb
3fb310f5
d9ef22
62495dcd
758e8823
1f67a10d
32a82e6f
47642683
6151a00a
75f1139
2eff229e
458fb77e
7ba1d3c3
62554a5f
2b98969f
3eb84891
c1e06b8
75ca6208
15eb96ff
5d62b4c2
b7ea24
8ac3a2c
3de9ccd2
22d86f2f
7a2041c8
16550a92
27fab307
3b2e656a
4e0a9726
23564b34
7c1633c0
4f92555a
39f7f952
3227a8b5
665ac37d
725eb1fe
76bd4cc3
40b448c1
4eae175f
116d6d15
5d48b295
1c526c2e
602286a9
4dc3668
4d342ede
43ba067e
456d1e57
22c5751c
6e3d2f8d
78516e0c
1f2f6776
6578c2f8
43cbebb9
3dfef10f
8c0197b
1f5ab84a
7ae3dc0e
7d5ee653
2223ffa2
172d804e
63d4aa49
69720f82
a868961
6eb1c939
73a5f344
52a810d7
3bf823e3
7ff1ddd0
6320f701
7f66813f
c61a2e3
68604d57
710f299f
4c0d3c1c
4fcf0403
77d88342
36e3916a
647eebc9
2a0ada51
3f025089
396e990e
5c5d9886
6ee36dee
7584974
3c112300
2558b033
cbf1e1d
4ec1533
45a93661
6a62f664
63a06e2
3904cfc0
7b1bb468
3977436e
6be7c766
45197f26
3b4a2575
273bd8fe
4256768b
1d4bbe71
11a12fef
1f555af3
19f34095
6dcbcc11
361673ce
7ca34781
3fca8b17
14884bd3
64f20423
44846a4
77462c16
20a1e58
1b033f6c
4e339e45
436dca19
aefbd74
7653ebc6
1da595b0
4d9f1f24
7094e91
50e48bd8
e93884f
15e5c900
427a7646
1402a364
30ab0d1c
2c780925
f54ee9b
761ed4c9
78b8a8ce
252e49c4
798ab997
3484b295
7827f6bf
44be1c73
414758da
1bab7aac
27ba0b61
5e1ebdb0
3c33e95c
1de9832b
194cdcdb
133ba66e
40183ad6
411eb4f5
66cbbbca
4ae106d4
4733b49a
752ffbef
3a72ab9d
2e997a80
7378f76c
5d62e7a5
9909cfb
13c0d7bd
422aed37
61a4dd23
7eb7d5e
5560d9c8
4373c401
23b2117b
6d40cd2f
4eb6092c
78496dbf
704ff7a
165dc992
587bebcf
4430fdbf
21191bf3
774374d4
583c597e
7031630b
5774cf9
369181f4
1f0f1fdf
596261d5
474ae07b
4ff135ad
4fd67c74
2bcfb1f5
6b70faa7
5d2c17ed
2916b3d1
382fc538
5ea581f3
694339e1
3902c90b
6b1dc615
70cdb81e
78974516
c54b70c
9895d8
25c7b554
33261f47
5f421b05
288e23e3
6f2096da
3408efcf
16818321
f26aa4c
19cc649a
5d511db9
655f603a
528fc39e
56653dbf
44044d09
1d2673f8
3af7a2cd
65bb3312
14da837a
781e4078
486158f5
43c614e8
5b4a2d2a
3ab06868
20209c34
4c5eebe7
14119d34
34b4835d
5051edba
53cd26cc
174a9e70
40dbdeda
10c0c7f0
42c7de62
1edd55fb
4bef979d
1af2d2d7
3ad52620
477be3df
744ca8b3
3d0600dd
39abc266
3ec90f1b
2dc0f064
3ca139ff
3544d5f4
ba4c130
73d5ff47
1f3a93e5
6ed90069
24262cec
148281f1
4ecbd3f3
30b4ccc3
556b706
5498e09b
498bb500
1bb92d0
5fe68022
5502f1c3
40c725fd
530a485a
7caaed6
1d5e4328
12baf02e
5199315b
aa6e455
51dd91e6
7fc70f74
4d92af0f
58cde56
417b65e6
696ee2ee
49809417
47959bf1
14a41ea4
1c8c80c3
c893210
6556327e
757d6d3
3987709b
4f320ef6
7e730f78
533bc66b
454e5945
3123222c
36020a66
10ca3d5d
25944153
2a40073b
e244e4d
6d09d591
61f73f6
501a9523
39380706
5feb6c3f
49293646
65533e82
51605443
3c448cd9
b645612
294917e0
545f3918
2af2feb0
73b0942b
6d856f7e
18ac7875
264d8b32
1662bb71
767af574
2da7cd16
7c816be4
238a13e9
7642cf63
222be73f
2ee71c1d
17a2b45
7fb9923d
308c26dd
30c90a88
4ed63157
3037a261
5901224b
73c26657
7a44553b
7b0d85bb
25aeaa19
12840447
58f67893
2f6500f5
2fc69e64
47cee8a8
2a112f0a
2e0ace36
29fece12
a65394a
7733e3ff
4aee285b
511f8c09
a10fed6
a12d60c
f974c21
27b68705
448dec4f
13819280
5b4c4166
9df6960
533f9a41
5628984a
2f0517fa
443b85ac
798cb4e3
3e4f56ce
780b94b
13e592c0
795c6fb9
1da9bd19
251cebe7
5b9ede62
399567d8
31d2a81d
35307b11
2ecb70a7
5465e3b1
6888d14e
64cdc9ba
61f8987f
27bb57ea
5eacc995
4fe37394
4dbd8844
56566a00
1ec9921f
47401e82
6b68d199
43741f74
2641000
2dc83ea8
6c7f4ded
1f80e0b9
7470faac
3c36d418
a8f86b1
27e73f56
21f0010d
5cf3aff
51e5da28
69245f19
42125d9a
1a6e39e1
17cc775e
2f80371a
46ae095c
527c1db
439a925c
32b76676
16e70a9c
55328535
718a9bb9
768418c9
646ccebf
10000e53
5245cabf
1630c998
32e2b8b7
280f2914
4a259dac
682adc63
a9ea2bd
157f2b85
7487c100
8cad83d
61473c
4fd82a91
fff1e22
3b3fa369
1d77c510
66f6628a
5a6aa365
f7be57c
610b4d11
ed25126
31038bc3
31ca13ab
655d89d9
e82f4a6
2b79c0e
422b837b
7437d089
17fb8f2f
5bba1153
2261b61e
78d265b
7b686917
b2e5d11
1883f63b
2d4dd737
76c7fa6a
1b062de3
423f6c48
1e3b5720
62f342d8
43111ed0
34b82585
542744e8
3755547d
287535c3
7a81af90
6becb562
587b52ef
9eb6bcd
18984642
287057c2
51572370
23451a79
3cc540ef
67683b6c
58e1ce69
5114b1d5
4e215ecc
4be46abd
61c2a5d1
53c1938a
158819dd
1734046e
2de6205e
6a69f4d3
65053a2f
1fd35e06
71579109
3b43f7d3
34148aa9
6df55990
34b88789
6911faea
596c2949
7e5fe28e
410931cc
37ac4046
468b1801
14a139d3
75c67b37
1fb1337a
68655df6
180f5ab9
623021ba
743c4997
1229b286
577aaa52
856b299
7b71ad1c
67f2d33b
3e1b14e0
54203cbd
76d6f2d4
342624f1
1b3a62bc
4a15e1bb
5f2df39d
642b77bd
5ebe55cf
10578c79
2d212bb7
60e9026f
4abd6009
4b44855f
661358b7
435effbf
77b4ccb9
1cb85fc3
5be2d351
36fff30b
59f31f97
34621b95
3b8b02d3
70f72993
57103e7d
6fe2eccf
5ac27986
2cc83a14
58a337fd
71b069
7f40c4b8
bebcd52
6958fe99
4ca27163
292f4b1a
7af8431a
2507264d
44dec9f8
174798f9
5034552e
2becc4c7
65700fbf
3db8e151
79113842
711b1b3b
5d1de267
69ac0f9d
2e4a7cdb
19e316eb
71648e0
15ecd4cc
5ac6c55c
2c8e1dc9
1117446e
1643c9bf
71a1497
2a50064a
4aaeb7b9
6a9ba6c
2c1e0b86
67834da5
2fa40ef1
3f18ddc3
260ff9cf
5f0bb46e
765a16a6
a7c33bd
2c0f487b
10cc55b2
7a4b63b4
41608a8
13d63cc8
42a60115
1006dc17
1a21ea5a
789f655b
614be17a
1c9566d4
4d0534fa
944b953
4f9214de
6a281c9a
39b0c163
47ce36ba
27d50eb
7eeae4b
484981d5
2c3dd6cc
4f73f70c
79f9da9b
390ebd60
269b356a
4c1579f
5445de92
5a41160c
3affb08f
4f59ec8f
59372f11
5b5445c9
2a94916c
807159b
6910b790
b17c1e7
69f25cd5
1668058e
7dbdf2fb
175ae981
5ed4110
738c4f02
619cf421
35200a5a
2f7b6470
303a0193
43a7d997
20a5e152
67755d14
36217d25
2898e424
2dd3def9
4dc6e014
38beada
76c7e643
62749f7b
217a7bf3
54a4f95f
3dba7906
6c108944
4082bb26
2d1461df
22ba5ed6
2a366cdf
405abfdc
5f0e7bd1
fec4edb
692b18f2
41b95865
312a27ca
5b3d8cfd
6fa6f8d6
3c85763a
1ba57235
60cece7f
b820ff
3a4d7178
14586018
7acc323a
2c4296e6
f1e9bc
a989a9e
7d7f4cf2
2e10b113
6b32453
505b5952
749149b6
526ae9d5
4be8b74c
6d7c15c7
61f89c51
327a46e6
1292f53
515c3684
6590c887
19faafde
188c0d26
6bc80c68
5a564d36
804a936
4f1fd364
5914db9
100d8577
5f746f88
2725478f
336e2417
8f193b1
daac9a1
18c2e84b
8cd0039
66d669d8
52c322d2
618d6ef2
9982a80
7a9dd453
37c5a0e2
20dce38
1ddf8db6
1947f6c
4dcc6e7b
44b12d52
7d2386c0
A0
T0
!10
003f46f0 -2 -2
Description: Converts the date to format YYYYMMDD.çä çäModification Log:çä03/07/2007 CSC Illustrations ILLUS001  Modified function for performanceçä10/31/2007 CSC Initial Calculation/Ruleçä
003f49a8 -2 -2
Description: Checks that Key2 exists in table lookup
003f4b98 -2 -2
Description: Checks that Key3 exists in table lookup
003f4e18 -2 -2
Description: Checks that Key4 exists in table lookup
003f4f78 -2 -2
Description: Checks that Key5 exists in table lookup
01e607b0 -2 -2
Description: Checks that Key6 exists in table lookup
01e605a8 -2 -2
Description: Checks that Key7 exists in table lookup
01e60cf0 -2 -2
Description: Checks that Key8 exists in table lookup
01e60cf1 -2 -2
Description: Checks that Key9 exists in table lookup
01e60cf2 -2 -2
Description: Checks that Key10 exists in table lookup
;Offset=00000000
