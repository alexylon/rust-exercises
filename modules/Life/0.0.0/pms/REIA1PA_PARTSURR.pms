;1	08.12.2016 13:33:07	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X1 1c445d8 1c43ca8 1c44680 0 0 0 2
-- All Test Cases - EIA1PA PARTSURR --
compilerversion
4.4.1
X1 1c44680 1c445d8 0 1c44790 0 0 2
PGRPDXIN(s)
PGRPDXIN("(EIA1PA!PGRPDXIN!19000101!35!1!1!1!1!1!**!01!2!A!1!1)")
0
X1 1c44790 1c445d8 0 1c448c8 0 0 2
PCHGAMT(s)
PCHGAMT("(EIA1PA!PCHGAMT!20070101!35!2!1!1!1!1!1000!01!*!)")
90
X1 1c448c8 1c445d8 0 1c44a08 0 0 2
PCHGPCT(s)
PCHGPCT("(EIA1PA!PCHGPCT!19000101!66!1!1!1!1!1!**!06!2!A!1!1)")
6
X1 1c44a08 1c445d8 0 1c44b50 0 0 2
PALLOW(s)
PALLOW("(EIA1PA!PALLOW!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
M
X1 1c44b50 1c445d8 0 1c44ca8 0 0 2
PFREEPCT(s)
PFREEPCT("(EIA1PA!PFREEPCT!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
5
X1 1c44ca8 1c445d8 0 0 0 0 2
PFREEMO(s)
PFREEMO("(EIA1PA!PFREEMO!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
0
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P3 1c43d14 0 1c44f20 0 0 0 2

--description
Equity Indexed Annuity product's partial surrender rates model.çä çäRate types include (but not limited to):çä - surrender grace period after crossing anniv (PGRPDXIN)çä - partial surrender charge amount (PCHGAMT)çä - partial surrender charge percentage (FCHGPCT)çä - frequency of charge free withdrawal amounts allowed (PALLOW)çä - percentage of cash value which is charge free (PFREEPCT)çä - number of months of interest penalty free (PFREEMO)
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.4.1"
P13 1c44f20 1c43d14 1cd0900 0 0 0 2
Equity Indexed Annuity rates - Partial Surrender Charges
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for REIA1PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"REIA1PA_PARTSURR.PMS"
OUTPUT Source Version Number
"1"
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd0900 1c44f20 0 0 0 0 2
EIA1PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1cd0628 0 0 0 0

F1 1cd0628 1c43d80 1cd0e40 0 0 0 2
--Rate Types--
Funktion

F1 1cd0e40 1cd0628 1cd0f28 1c46b90 0 0 2
--Partial Surrender rate types--
Funktion

F1 1cd0f28 1cd0e40 0 1c452b8 0 0 2
PGRPDXIN(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Grace Period Xin Lookup'(s)çä)
F1 1c452b8 1cd0e40 0 1c455f0 0 0 2
PCHGAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Charge Amount Lookup'(s)çä)
F1 1c455f0 1cd0e40 0 1c45940 0 0 2
PCHGPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Charge Percent Lookup'(s)çä)
F1 1c45940 1cd0e40 0 1c45cb8 0 0 2
PALLOW(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Allow Lookup'(s)çä)
F1 1c45cb8 1cd0e40 0 1c46038 0 0 2
PFREEPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Free Percent Lookup'(s)çä)
F1 1c46038 1cd0e40 0 1c463b8 0 0 2
PFREEMO(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Free Months Lookup'(s)çä)
F1 1c463b8 1cd0e40 1c46568 0 0 0 2
--Select period functions--
Funktion

F1 1c46568 1c463b8 0 1c46890 0 0 2
PARTSURR Select Period(s)
Funktion
IF (EXISTS('TABLE PARTSURR Select Period';SetParameter("Rate_Type";s)) ; çä  'TABLE PARTSURR Select Period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c46890 1c463b8 0 0 0 0 2
PARTSURR Select Ultimate Lookup Column(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  "Year_" & SetParameter("Duration";s) ; çä  "Ultimate"çä)
F1 1c46b90 1cd0628 1c46d58 0 0 0 2
--Table access functions--
Funktion

F1 1c46d58 1c46b90 0 1c47330 0 0 2
PARTSURR Grace Period Xin Lookup(s)
Funktion
LOOKUPX('TABLE PGRPDXIN';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c47330 1c46b90 0 1c478d0 0 0 2
PARTSURR Charge Amount Lookup(s)
Funktion
LOOKUPX('TABLE PCHGAMT';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c478d0 1c46b90 0 1c47e78 0 0 2
PARTSURR Charge Percent Lookup(s)
Funktion
LOOKUPX('TABLE PCHGPCT';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c47e78 1c46b90 0 1c48458 0 0 2
PARTSURR Allow Lookup(s)
Funktion
LOOKUPX('TABLE PALLOW';'PARTSURR Access Table ID key'(s); // select periodçä'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c48458 1c46b90 0 1c486e8 0 0 2
PARTSURR Free Percent Lookup(s)
Funktion
LOOKUPX('TABLE PFREEPCT';'PARTSURR Access Table ID key'(s); // select periodçä'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c486e8 1c46b90 0 1c48cc0 0 0 2
PARTSURR Free Months Lookup(s)
Funktion
LOOKUPX('TABLE PFREEMO';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c48cc0 1c46b90 1c48e98 0 0 0 2
--Build access keys--
Funktion

F1 1c48e98 1c48cc0 0 1c490a0 0 0 2
PARTSURR Access Table ID key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c490a0 1c48cc0 0 1c495a0 0 0 2
PARTSURR Access ChargeBasedOn key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);SetParameter("Rule_Code";s)) ; çä   // Table exists, use ChargeBasedOn value in searchçäSetParameter("Rule_Code";s) ; çä   // Else table does not exist, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);"*") ; çä     // Return the wildcard as the search parameterçä"*" ; çä     // Else no matchçä"nomatch"çä  )çä)
F1 1c495a0 1c48cc0 0 1c49ba0 0 0 2
PARTSURR Access Jurisdiction key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49ba0 1c48cc0 0 1c4a1e8 0 0 2
PARTSURR Access Gender key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c4a1e8 1c48cc0 0 1c4a8f0 0 0 2
PARTSURR Access Smoke Code key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c4a8f0 1c48cc0 0 1c4b068 0 0 2
PARTSURR Access Band Code key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c4b068 1c48cc0 0 0 0 0 2
PARTSURR Access Underwriting Class key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c4b870 0 0 0 0

T1 1c4b870 1c43ec4 1c4baa8 0 0 0 2
--Tables--
key
value
T7 1c4baa8 1c4b870 0 1c4c5a8 0 0 17
TABLE PGRPDXIN
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
01
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
T7 1c4c5a8 1c4b870 0 1c4cef8 0 0 17
TABLE PCHGAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
100
90
80
70
50
40
25
10
10
01
*
*
*
*
*
*
66
100
90
80
70
45
40
25
10
10
06
*
*
*
*
*
*
18
100
90
80
70
40
30
25
10
10
06
*
*
*
*
*
*
66
100
90
80
60
35
30
25
10
10
13
*
*
*
*
*
*
18
100
90
80
70
40
30
25
10
10
13
*
*
*
*
*
*
66
100
90
80
60
35
30
25
10
10
T7 1c4cef8 1c4b870 0 1c4d728 0 0 16
TABLE PCHGPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Ultimate
01
*
*
*
*
*
*
18
7
7
6
5
4
2
1
0
01
*
*
*
*
*
*
66
6
5
4
3
2
1
0
0
06
*
*
*
*
*
*
18
7
7
6
5
4
2
1
0
06
*
*
*
*
*
*
66
6
5
4
3
2
1
0
0
13
*
*
*
*
*
*
18
7
7
6
5
4
2
1
0
13
*
*
*
*
*
*
66
6
5
4
3
2
1
0
0
T7 1c4d728 1c4b870 0 1c4e088 0 0 17
TABLE PALLOW
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
01
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
T7 1c4e088 1c4b870 0 1c4e9f0 0 0 17
TABLE PFREEPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
01
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
06
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
06
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
13
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
13
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
T7 1c4e9f0 1c4b870 0 1c4f360 0 0 17
TABLE PFREEMO
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
01
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
T7 1c4f360 1c4b870 0 0 0 0 2
TABLE PARTSURR Select Period
rate_type
sel_period
PGRPDXIN
8
PCHGAMT
8
PCHGPCT
7
PALLOW
8
PFREEPCT
8
PFREEMO
8
I0 1c43f30 0 6077f054 0 0 0 0

I0 6077f054 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1c44f20
1cd0900
F26
1cd0628
1cd0e40
1cd0f28
1c452b8
1c455f0
1c45940
1c45cb8
1c46038
1c463b8
1c46568
1c46890
1c46b90
1c46d58
1c47330
1c478d0
1c47e78
1c48458
1c486e8
1c48cc0
1c48e98
1c490a0
1c495a0
1c49ba0
1c4a1e8
1c4a8f0
1c4b068
A0
T8
1c4b870
1c4baa8
1c4c5a8
1c4cef8
1c4d728
1c4e088
1c4e9f0
1c4f360
!20
1cd0f28 -2 -2
Description:çä  This function is called by late referencing from the Access Model and returns, the number of days following the policyçä  anniversary that the surrender grace period is applicable, from internal table 'TABLE PGRPDXIN'..çä çä  Validation is performed on the Band_Code and Duration.çä çäModification Logçä02/06/2007  Don SinclairââNew function
1c452b8 -2 -2
 Description:çä  This function is called by late referencing from the Access Model and returns, the partial surrender flat amount, fromçä  internal table 'TABLE PCHGPCT'.çä çä  Validation is performed on the Band_Code and Duration.çä çä Modification Logçä  02/06/2007 Don SinclairâNew function
1c455f0 -2 -2
 Description:çä  This function is called by late referencing from the Access Model and returns, the partial surrender percentage, from internalçä  table 'TABLE PCHGPCT'.çä çä  Validation is performed on the Band_Code and Duration.çä çä Modification Logçä  02/06/2007 Don SinclairâNew function
1c45940 -2 -2
Description:çä  This function is called by late referencing from the Access Model and returns, the partial surrender frequency of chargeçä  free withdrawal amounts allowed, from internal table 'TABLE PALLOW'.çä çä  Validation is performed on the Band_Code and Duration.çä çä Modification Logçä  02/06/2007 Don SinclairâNew functionçä
1c45cb8 -2 -2
Description:çä  This function is called by late referencing from the Access Model and returns, the partial surrender percentage of cash valueçä  that is charge free, from internal table 'TABLE PFREEPCT'.çä çä  Validation is performed on the Band_Code and Duration.çä çä Modification Logçä  02/06/2007 Don SinclairâNew function
1c46038 -2 -2
Description:çä  This function is called by late referencing from the Access Model and returns, the partial surrender number of months ofçä  interest penalty free, from internal table 'TABLE PFREEMO'.çä çä  Validation is performed on the Band_Code and Duration.çä çä Modification Logçä  02/06/2007 Don SinclairâNew function
1c46568 -2 -2
Description:çä  This function returns, the partial surrender select period by rate type, from internal table 'TABLE PARTSURR Select Period'.çä çäModification Logçä  02/06/2007 Don SinclairâNew functionçä
1c46890 -2 -2
Description: Checks to see if the duration is still in the select period or not. çäâ      Returns the column name to use for rate table lookup.çä Modification Log:çä   08/16/2007   âPerry Myers   âCreated function.
1c46d58 -2 -2
Description:çä  This function performs a look up in internal table 'TABLE PGRPDXIN' and returns the number of days following the policyçä  anniversary that the surrender grace period is applicable.çä çä  The look up is based on a select and ultimate basis and any or all of the key information between the charge basedçä  on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the inputçä  value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä  02/06/2007 Don SinclairâNew function
1c47330 -2 -2
Description:çä  This function performs a look up in internal table 'TABLE PCHGAMT' and returns the partial surrender flat amount.çä çä  The look up is based on a select and ultimate basis and any or all of the key information between the charge basedçä  on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the inputçä  value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä  02/06/2007 Don SinclairâNew function
1c478d0 -2 -2
Description:çä  This function performs a look up in internal table 'TABLE PCHGPCT' and returns the partial surrender percentage.çä çä  The look up is based on a select and ultimate basis and any or all of the key information between the charge basedçä  on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the inputçä  value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä  02/06/2007 Don SinclairâNew function
1c47e78 -2 -2
Description:çä  This function performs a look up in internal table 'TABLE PALLOW' and returns the partial surrender frequency of chargeçä  free withdrawal amounts allowed.çä çä  The look up is based on a select and ultimate basis and any or all of the key information between the charge basedçä  on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the inputçä  value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä  02/06/2007 Don SinclairâNew function
1c486e8 -2 -2
Description:çä  This function performs a look up in internal table 'TABLE PFREEMO' and returns the partial surrender number of months ofçä  interest penalty free.çä çä  The look up is based on a select and ultimate basis and any or all of the key information between the charge basedçä  on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the inputçä  value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä  02/06/2007 Don SinclairâNew function
1c48e98 -2 -2
Description:çä  This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Logçä  02/06/2007 Don SinclairâNew functionçä
1c490a0 -2 -2
Description:çä  This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Logçä02/06/2007 Don SinclairâNew functionçä03/25/2007 Sam Saunders  Adjustments to functionçä
1c495a0 -2 -2
Description:çä  This function parses and validates the jurisdiction code from the passed serialized vector string (s).çä çä  A test is performed, using all established parms to this position, to insure the existence of the parm value, and ifçä  present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using theçä  wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a noçä  match value is returned.çä çäModification Logçä02/06/2007 Don SinclairâNew function
1c49ba0 -2 -2
Description:çä  This function parses and validates the gender code from the passed serialized vector string (s).çä çä  A test is performed, using all established parms to this position, to insure the existence of the parm value, and ifçä  present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using theçä  wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a noçä  match value is returned.çä çäModification Logçä02/06/2007 Don SinclairâNew function
1c4a1e8 -2 -2
Description:çä  This function parses and validates the smoke code from the passed serialized vector string (s).çä çä  A test is performed, using all established parms to this position, to insure the existence of the parm value, and ifçä  present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using theçä  wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a noçä  match value is returned.çä çäModification Logçä02/06/2007 Don SinclairâNew function
1c4a8f0 -2 -2
Description:çä  This function parses and validates the band code from the passed serialized vector string (s).çä çä  A test is performed, using all established parms to this position, to insure the existence of the parm value, and ifçä  present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using theçä  wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a noçä  match value is returned.çä çäModification Logçä  02/06/2007 Don SinclairâNew function
1c4b068 -2 -2
Description:çä  This function parses and validates the underwriting class code from the passed serialized vector string (s).çä çä  A test is performed, using all established parms to this position, to insure the existence of the parm value, and ifçä  present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using theçä  wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a noçä  match value is returned.çä çäModification Logçä  02/06/2007 Don SinclairâNew function
;Offset=00000000
