;1	20.03.2017 13:27:21	jtomlienovic	
X0 003f40d0 0 0 0 0 0 0

O0 003f3f8c 0 0 0 0 0 0

E0 003f3ff8 0 0 0 0 0 0

L0 003f4064 0 0 0 0 0 0

B0 003f4214 0 0 0 0 0 0

P0 003f413c 0 0 0 0 0 0

F0 003f41a8 0 003f2928 0 0 0 0

F1 003f2928 003f41a8 003f46f0 003f5008 0 0 2
-- Utility Functions --
Funktion

F1 003f46f0 003f2928 0 003f4870 0 0 2
Table Effective Date(effectiveDate)
Funktion
DATE(effectiveDate;0;0;0;"YMD") //(year(effective_date) * 10000) + (month(effective_date) * 100) + day(effective_date)ä
F1 003f4870 003f2928 003f49a8 0 0 0 2
-- Wildcard Lookup Functions --
Funktion

F1 003f49a8 003f4870 0 003f4b98 0 0 2
key2 lookup(tablename; key1; key2)
Funktion
IF (EXISTS(table(tablename);key1;key2) ; çä  key2 ; çä  IF (EXISTS(table(tablename);key1;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & " not found in " & tablename)çä    )çä)çä)
F1 003f4b98 003f4870 0 003f4e18 0 0 2
key3 lookup(tablename; key1; key2; key3)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3) ; çä  key3 ; çä  IF (EXISTS(table(tablename);key1;key2;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & " not found in " & tablename)çä    )çä)çä)
F1 003f4e18 003f4870 0 003f4f78 0 0 2
key4 lookup(tablename; key1; key2; key3; key4)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4) ; çä  key4 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;1000) ; çä    1000 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;0) ; çä      0 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & " not found in " & tablename)çä    )çä)çä)
F1 003f4f78 003f4870 0 01e607b0 0 0 2
key5 lookup(tablename; key1; key2; key3; key4; key5)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5) ; çä  key5 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & " not found in " & tablename)çä    )çä)çä)
F1 01e607b0 003f4870 0 01e605a8 0 0 2
key6 lookup(tablename; key1; key2; key3; key4; key5; key6)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6) ; çä  key6 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & " not found in " & tablename)çä    )çä)çä)
F1 01e605a8 003f4870 0 01e60cf0 0 0 2
key7 lookup(tablename; key1; key2; key3; key4; key5; key6; key7)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7) ; çä  key7 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf0 003f4870 0 01e60cf1 0 0 2
key8 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8) ; çä  key8 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & key8 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf1 003f4870 0 01e60cf2 0 0 2
key9 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9) ; çä  key9 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf2 003f4870 0 0 0 0 2
key10 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9, key10)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;key10) ; çä  key10 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & "/" & key10 & " not found in " & tablename)çä    )çä)çä)
F1 003f5008 003f41a8 003f5fe0 0 0 0 2
-- NEW Table Access Functions --
Funktion

F1 003f5fe0 003f5008 003f61a0 0 0 0 2
-- Table Access functions --
Funktion

F1 003f61a0 003f5fe0 003f6350 0 0 0 2
--
Funktion

F1 003f6350 003f61a0 0 56797bff 0 0 2
--
Funktion

F1 56797bff 003f61a0 0 3665fb59 0 0 2
PP LP CP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct PremiumRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct PremiumRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3665fb59 003f61a0 0 3da1d13b 0 0 2
PP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProductçäIF (EXISTS('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3da1d13b 003f61a0 0 4938dd7f 0 0 2
PP LoanProvision MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LoanProvision MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4938dd7f 003f61a0 0 4a41eaf7 0 0 2
PP LapseProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LapseProvisionçäIF (EXISTS('Table PolicyProduct LapseProvision';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LapseProvision'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a41eaf7 003f61a0 0 1f11a518 0 0 2
PP LP CPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f11a518 003f61a0 0 3c643ed 0 0 2
SourceInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfoçäIF (EXISTS('Table SourceInfo';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c643ed 003f61a0 0 1d602d55 0 0 2
PPExt PaymentAssembly(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssemblyçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d602d55 003f61a0 0 15c085f1 0 0 2
PP IPInfoExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15c085f1 003f61a0 0 56b6fd1b 0 0 2
PPExt FS(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatementçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 56b6fd1b 003f61a0 0 538f9400 0 0 2
PP Reward(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct RewardçäIF (EXISTS('Table PolicyProduct Reward';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Reward'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 538f9400 003f61a0 0 557d20a6 0 0 2
PP LP CP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //indicatorCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);6) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct LifeProduct CoverageProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //indicatorCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);6); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);7)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 557d20a6 003f61a0 0 7283cad6 0 0 2
PP LoanProvision RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation TableRefçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7283cad6 003f61a0 0 27ea9f5f 0 0 2
PP LP CP COP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27ea9f5f 003f61a0 0 741f950b 0 0 2
PP LP LifeUSAProduct IRSPremCalcMethod(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethodçäIF (EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethod';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethod'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 741f950b 003f61a0 0 42456786 0 0 2
PP LP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProductçäIF (EXISTS('Table PolicyProduct LifeProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42456786 003f61a0 0 37670a3f 0 0 2
PP LoanProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvisionçäIF (EXISTS('Table PolicyProduct LoanProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37670a3f 003f61a0 0 6c64e793 0 0 2
PP LP CP COPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c64e793 003f61a0 0 3e028568 0 0 2
IssueGenderCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IssueGenderCCçäIF (EXISTS('Table IssueGenderCC';e_(v_construct(s_keys);0) //IssueGenderCC_id_extçä) ; çä   // then read from the table çä'Table IssueGenderCC'[e_(v_construct(s_keys);0) //IssueGenderCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e028568 003f61a0 0 2012c053 0 0 2
PP IPInfoExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2012c053 003f61a0 0 7e0971d7 0 0 2
PP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e0971d7 003f61a0 0 3d9569e9 0 0 2
PP LPExt ArrangementProduct ArrangementOptProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProductçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d9569e9 003f61a0 0 263e11f3 0 0 2
PP LP CP COP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //productCodeçä'table effective date'(e_(v_construct(s_keys);9)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 263e11f3 003f61a0 0 5fc0f8fc 0 0 2
PP RewardExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Reward OLifEExtension RewardExtension TableRefçäIF (EXISTS('Table PolicyProduct Reward OLifEExtension RewardExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Reward OLifEExtension RewardExtension TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5fc0f8fc 003f61a0 0 634a9a42 0 0 2
PP LP CPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 634a9a42 003f61a0 0 588979fb 0 0 2
PP LP CP COPExt ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 588979fb 003f61a0 0 4e665211 0 0 2
PP IPInfoExt AllowedArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProductçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e665211 003f61a0 0 146faa0f 0 0 2
PP LP CPExt ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 146faa0f 003f61a0 0 47ee24a2 0 0 2
PP IPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //productCodeçä'table effective date'(e_(v_construct(s_keys);5)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47ee24a2 003f61a0 0 1e04ade2 0 0 2
PP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FeeçäIF (EXISTS('Table PolicyProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e04ade2 003f61a0 0 73c8000d 0 0 2
PP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73c8000d 003f61a0 0 7edaf261 0 0 2
PP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7edaf261 003f61a0 0 2fd8f826 0 0 2
PP LoanProvision RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariationçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2fd8f826 003f61a0 0 7c08f737 0 0 2
DefLifeInsMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DefLifeInsMethodCCçäIF (EXISTS('Table DefLifeInsMethodCC';e_(v_construct(s_keys);0) //DefLifeInsMethodCC_id_extçä) ; çä   // then read from the table çä'Table DefLifeInsMethodCC'[e_(v_construct(s_keys);0) //DefLifeInsMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c08f737 003f61a0 0 6d67711c 0 0 2
PP PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d67711c 003f61a0 0 47a66796 0 0 2
JurisdictionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table JurisdictionCCçäIF (EXISTS('Table JurisdictionCC';e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä) ; çä   // then read from the table çä'Table JurisdictionCC'[e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47a66796 003f61a0 0 194549eb 0 0 2
PP LPExt ArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProductçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 194549eb 003f61a0 0 41d2d117 0 0 2
DeathBenefitOptCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DeathBenefitOptCCçäIF (EXISTS('Table DeathBenefitOptCC';e_(v_construct(s_keys);0) //DeathBenefitOptCC_id_extçä) ; çä   // then read from the table çä'Table DeathBenefitOptCC'[e_(v_construct(s_keys);0) //DeathBenefitOptCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41d2d117 003f61a0 0 59481320 0 0 2
PP PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailableçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59481320 003f61a0 0 6710314b 0 0 2
PP LP CP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6710314b 003f61a0 0 9f3557a 0 0 2
PP LPExt ArrangementProduct ArrangementOptProduct SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //arrTypeçäe_(v_construct(s_keys);6) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //arrTypeçäe_(v_construct(s_keys);6) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9f3557a 003f61a0 0 302739d9 0 0 2
IP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProductçäIF (EXISTS('Table InvestProduct';e_(v_construct(s_keys);0) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct';e_(v_construct(s_keys);0); //productCodeçä'table effective date'(e_(v_construct(s_keys);1)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 302739d9 003f61a0 0 7e178f53 0 0 2
PP PPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfoçäIF (EXISTS('Table PolicyProduct PolicyProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e178f53 003f61a0 0 3e0a140f 0 0 2
PP LP CP COPExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e0a140f 003f61a0 0 534202ff 0 0 2
PP LP LifeUSAProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProductçäIF (EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct LifeUSAProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 534202ff 003f61a0 0 7b412d0a 0 0 2
PP IPInfoExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b412d0a 003f61a0 0 0 0 0 2
PP LP CP COPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
A0 003f4280 0 0 0 0 0 0

T0 003f42ec 0 0 0 0 0 0

I0 003f4358 0 4c765893 0 0 0 0

I0 4c765893 003f4358 0 0 0 0 0
PPfL.pms
-
O0
E0
L0
B0
P0
F62
003f2928
003f46f0
003f4870
003f49a8
003f4b98
003f4e18
003f4f78
01e607b0
01e605a8
01e60cf0
01e60cf1
01e60cf2
003f5008
003f5fe0
003f61a0
003f6350
56797bff
3665fb59
3da1d13b
4938dd7f
4a41eaf7
1f11a518
3c643ed
1d602d55
15c085f1
56b6fd1b
538f9400
557d20a6
7283cad6
27ea9f5f
741f950b
42456786
37670a3f
6c64e793
3e028568
2012c053
7e0971d7
3d9569e9
263e11f3
5fc0f8fc
634a9a42
588979fb
4e665211
146faa0f
47ee24a2
1e04ade2
73c8000d
7edaf261
2fd8f826
7c08f737
6d67711c
47a66796
194549eb
41d2d117
59481320
6710314b
9f3557a
302739d9
7e178f53
3e0a140f
534202ff
7b412d0a
A0
T0
!10
003f46f0 -2 -2
Description: Converts the date to format YYYYMMDD.çä çäModification Log:çä03/07/2007 CSC Illustrations ILLUS001  Modified function for performanceçä10/31/2007 CSC Initial Calculation/Ruleçä
003f49a8 -2 -2
Description: Checks that Key2 exists in table lookup
003f4b98 -2 -2
Description: Checks that Key3 exists in table lookup
003f4e18 -2 -2
Description: Checks that Key4 exists in table lookup
003f4f78 -2 -2
Description: Checks that Key5 exists in table lookup
01e607b0 -2 -2
Description: Checks that Key6 exists in table lookup
01e605a8 -2 -2
Description: Checks that Key7 exists in table lookup
01e60cf0 -2 -2
Description: Checks that Key8 exists in table lookup
01e60cf1 -2 -2
Description: Checks that Key9 exists in table lookup
01e60cf2 -2 -2
Description: Checks that Key10 exists in table lookup
;Offset=00000000
