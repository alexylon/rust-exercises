;1	08.12.2016 13:35:26	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X1 1c445d8 1c43ca8 1c44680 0 0 0 2
-- All Test Cases - VA2PA EXP --


X1 1c44680 1c445d8 0 1c44760 0 0 2
CEXPAMT(s)
CEXPAMT("(VA1PA!CEXPAMT!20060101!35!3!1!1!1!1!1000!02!1)")
40
X1 1c44760 1c445d8 0 1c44898 0 0 2
GEXPAMT(s)
GEXPAMT("(VA1PA!GEXPAMT!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
60
X1 1c44898 1c445d8 0 1c449d8 0 0 2
CEXPPCT(s)
CEXPPCT("(VA1PA!CEXPPCT!20060101!35!3!1!1!1!1!1000!02!1)")
2
X1 1c449d8 1c445d8 0 1c44b20 0 0 2
GEXPPCT(s)
GEXPPCT("(VA1PA!GEXPPCT!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
3
X1 1c44b20 1c445d8 0 1c44c70 0 0 2
CEXPMAX(s)
CEXPMAX("(VA1PA!CEXPMAX!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
40
X1 1c44c70 1c445d8 0 1c44dc8 0 0 2
GEXPMAX(s)
GEXPMAX("(VA1PA!GEXPMAX!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
60
X1 1c44dc8 1c445d8 0 1c44f30 0 0 2
CEXPTHRHLD(s)
CEXPTHRHLD("(VA1PA!CEXPTHRHLD!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
70000
X1 1c44f30 1c445d8 0 0 0 0 2
GEXPTHRHLD(s)
GEXPTHRHLD("(VA1PA!GEXPTHRHLD!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
70000
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P1 1c43d14 0 1cd06d0 0 0 0 2

--description
Variable Annuity product's expense rates model.çä çäRate types include (but not limited to):çä - current expense amount (CEXPAMT)çä - current expense percentage (CEXPPCT)çä - current expense maximum (CEXPMAX)çä - current expense account value threshold (CEXPTHRHLD)çä - guaranteed expense amount (GEXPAMT)çä - guaranteed expense percentage (GEXPPCT)çä - guaranteed expense maximum (GEXPMAX)çä - guaranteed expense account value threshold (GEXPTHRHLD)
P13 1cd06d0 1c43d14 1cd09b0 0 0 0 2
Variable Annuity - Expense Charge rates
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for RVA2PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"RVA2PA_EXP.PMS"
OUTPUT Source Version Number
'GEN VersionInfo'
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"SS"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd09b0 1cd06d0 0 0 0 0 2
VA2PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1cd0ed0 0 0 0 0

F1 1cd0ed0 1c43d80 1cd0f70 0 0 0 2
-- Rate Types --
Funktion

F1 1cd0f70 1cd0ed0 1c45090 1c465e0 0 0 2
--Expense Rate Types--
Funktion

F1 1c45090 1cd0f70 0 1c45210 0 0 2
CEXPAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Amt Lookup'(s)çä)
F1 1c45210 1cd0f70 0 1c45430 0 0 2
CEXPPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Pct Lookup'(s)çä)
F1 1c45430 1cd0f70 0 1c45658 0 0 2
GEXPAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Amt Lookup'(s)çä)
F1 1c45658 1cd0f70 0 1c45888 0 0 2
GEXPPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Pct Lookup'(s)çä)
F1 1c45888 1cd0f70 0 1c45ac0 0 0 2
CEXPMAX(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Max Lookup'(s)çä)
F1 1c45ac0 1cd0f70 0 1c45d00 0 0 2
GEXPMAX(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Max Lookup'(s)çä)
F1 1c45d00 1cd0f70 0 1c45f50 0 0 2
CEXPTHRHLD(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Issue_Age");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Threshold Lookup'(s)çä)
F1 1c45f50 1cd0f70 0 1c461a8 0 0 2
GEXPTHRHLD(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Issue_Age");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar threshold lookup'(s)çä)
F1 1c461a8 1cd0f70 1c46378 0 0 0 2
--Select period functions--
Funktion

F1 1c46378 1c461a8 0 0 0 0 2
Exp Sel Period(s)
Funktion
IF (EXISTS('TABLE EXP Select Period';SetParameter("Rate_Type";s)) ; çä  'TABLE EXP Select Period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c465e0 1cd0ed0 1c467c0 0 0 0 2
--Table access functions--
Funktion

F1 1c467c0 1c465e0 0 1c46cc8 0 0 2
EXPENSE Curr Amt Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'Exp Sel Period'(s) ; çä  LOOKUPX('TABLE CEXPAMT';'Access Exp Table ID Key'(s); // select periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE CEXPAMT';'Access Exp Table ID Key'(s); // Ultimate periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c46cc8 1c465e0 0 1c470c8 0 0 2
EXPENSE Curr Pct Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'Exp Sel Period'(s) ; çä  LOOKUPX('TABLE CEXPPCT';'Access Exp Table ID Key'(s); // select periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE CEXPPCT';'Access Exp Table ID Key'(s); // Ultimate periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c470c8 1c465e0 0 1c475f0 0 0 2
EXPENSE Curr Max Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'Exp Sel Period'(s) ; çä  LOOKUPX('TABLE CEXPMAX';'Access Exp Table ID Key'(s); // select periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE CEXPMAX';'Access Exp Table ID Key'(s); // Ultimate periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c475f0 1c465e0 0 1c47b10 0 0 2
EXPENSE Guar Amt Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'Exp Sel Period'(s) ; çä  LOOKUPX('TABLE GEXPAMT';'Access Exp Table ID Key'(s); // select periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE GEXPAMT';'Access Exp Table ID Key'(s); // Ultimate periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c47b10 1c465e0 0 1c48038 0 0 2
EXPENSE Guar Pct Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'Exp Sel Period'(s) ; çä  LOOKUPX('TABLE GEXPPCT';'Access Exp Table ID Key'(s); // select periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE GEXPPCT';'Access Exp Table ID Key'(s); // Ultimate periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c48038 1c465e0 0 1c48578 0 0 2
EXPENSE Guar Max Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'Exp Sel Period'(s) ; çä  LOOKUPX('TABLE GEXPMAX';'Access Exp Table ID Key'(s); // select periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE GEXPMAX';'Access Exp Table ID Key'(s); // Ultimate periodçä'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c48578 1c465e0 0 1c488f8 0 0 2
EXPENSE Curr Threshold Lookup(s)
Funktion
LOOKUPX('TABLE CEXPTHRHLD';'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Threshold")
F1 1c488f8 1c465e0 0 1c48c78 0 0 2
EXPENSE Guar threshold lookup(s)
Funktion
LOOKUPX('TABLE GEXPTHRHLD';'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);'Access Exp Band Code Key'(s);SetParameter("Issue_Age";s);"Threshold")
F1 1c48c78 1c465e0 1c48e98 0 0 0 2
--Build access keys--
Funktion

F1 1c48e98 1c48c78 0 1c490f8 0 0 2
Access Exp Table ID Key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c490f8 1c48c78 0 1c494c0 0 0 2
Access Exp ChargeBasedOn Key(s)
Funktion
 //SetParameter("Rule_Code";s)çäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);SetParameter("Rule_Code";s)) ; çä   // Use Charge based onçäSetParameter("Rule_Code";s) ; çä   // Else table not found, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c494c0 1c48c78 0 1c49878 0 0 2
Access Exp Jurisdiction Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49878 1c48c78 0 1c49c78 0 0 2
Access Exp Gender Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49c78 1c48c78 0 1c4a0e0 0 0 2
Access Exp Underwriting Class Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c4a0e0 1c48c78 0 1c4a590 0 0 2
Access Exp Smoke Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c4a590 1c48c78 0 0 0 0 2
Access Exp Band Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access Exp Table ID Key'(s);'Access Exp ChargeBasedOn Key'(s);'Access Exp Jurisdiction Key'(s);'Access Exp Gender Key'(s);'Access Exp Underwriting Class Key'(s);'Access Exp Smoke Code Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c4ac38 0 0 0 0

T1 1c4ac38 1c43ec4 1c4aea0 0 0 0 2
--Expense Rate Tables--
key
value
T7 1c4aea0 1c4ac38 0 1c4bb10 0 0 19
TABLE CEXPAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
40
40
02
*
*
*
*
*
*
99
40
40
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
99
40
40
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
99
40
40
40
40
40
40
40
40
40
40
40
T7 1c4bb10 1c4ac38 0 1c4c550 0 0 19
TABLE CEXPPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
18
2
2
2
2
2
2
2
2
2
2
2
02
*
*
*
*
*
*
99
2
2
2
2
2
2
2
2
2
2
2
06
*
*
*
*
*
*
18
2
2
2
2
2
2
2
2
2
2
2
06
*
*
*
*
*
*
99
2
2
2
2
2
2
2
2
2
2
2
13
*
*
*
*
*
*
18
2
2
2
2
2
2
2
2
2
2
2
13
*
*
*
*
*
*
99
2
2
2
2
2
2
2
2
2
2
2
T7 1c4c550 1c4ac38 0 1c4cf98 0 0 19
TABLE GEXPAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
02
*
*
*
*
*
*
99
60
60
60
60
60
60
60
60
60
60
60
06
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
06
*
*
*
*
*
*
99
60
60
60
60
60
60
60
60
60
60
60
13
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
13
*
*
*
*
*
*
99
60
60
60
60
60
60
60
60
60
60
60
T7 1c4cf98 1c4ac38 0 1c4d9e8 0 0 19
TABLE GEXPPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
18
3
3
3
3
3
3
3
3
3
3
3
02
*
*
*
*
*
*
99
3
3
3
3
3
3
3
3
3
3
3
06
*
*
*
*
*
*
18
3
3
3
3
3
3
3
3
3
3
3
06
*
*
*
*
*
*
99
3
3
3
3
3
3
3
3
3
3
3
13
*
*
*
*
*
*
18
3
3
3
3
3
3
3
3
3
3
3
13
*
*
*
*
*
*
99
3
3
3
3
3
3
3
3
3
3
3
T7 1c4d9e8 1c4ac38 0 1c4e440 0 0 19
TABLE CEXPMAX
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
40
40
40
40
40
40
40
40
40
40
40
02
*
*
*
*
*
*
99
40
40
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
0
40
40
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
99
40
40
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
0
40
40
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
99
40
40
40
40
40
40
40
40
40
40
40
T7 1c4e440 1c4ac38 0 1c4eea0 0 0 19
TABLE GEXPMAX
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
02
*
*
*
*
*
*
99
60
60
60
60
60
60
60
60
60
60
60
06
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
06
*
*
*
*
*
*
99
60
60
60
60
60
60
60
60
60
60
60
13
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
13
*
*
*
*
*
*
99
60
60
60
60
60
60
60
60
60
60
60
T7 1c4eea0 1c4ac38 0 1c4f270 0 0 9
TABLE CEXPTHRHLD
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Threshold
02
*
*
*
*
*
*
0
60000
02
*
*
*
*
*
*
35
65000
06
*
*
*
*
*
*
0
60000
06
*
*
*
*
*
*
35
70000
13
*
*
*
*
*
*
0
60000
13
*
*
*
*
*
*
35
70000
T7 1c4f270 1c4ac38 0 1c4f890 0 0 9
TABLE GEXPTHRHLD
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Threshold
02
*
*
*
*
*
*
0
60000
02
*
*
*
*
*
*
35
65000
06
*
*
*
*
*
*
0
60000
06
*
*
*
*
*
*
35
70000
13
*
*
*
*
*
*
0
60000
13
*
*
*
*
*
*
35
70000
T5 1c4f890 1c4ac38 0 0 0 0 2
TABLE EXP Select Period
rate_type
sel_period
CEXP
10
GEXP
10
CEXPMAX
10
GEXPMAX
10
I0 1c43f30 0 6f8e3508 0 0 0 0

I0 6f8e3508 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1cd06d0
1cd09b0
F19
1cd0ed0
1cd0f70
1c465e0
1c467c0
1c46cc8
1c470c8
1c475f0
1c47b10
1c48038
1c48578
1c488f8
1c48c78
1c48e98
1c490f8
1c494c0
1c49878
1c49c78
1c4a0e0
1c4a590
A0
T1
1c4ac38
!24
1c45090 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_CEXP.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45210 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_CEXP.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45430 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense rate, from internal table T_GEXP.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45658 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense rate, from internal table T_GEXP.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45888 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense maximum, from internal table T_CEXPMAX.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45ac0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense maximum, from internal table T_GEXPMAX.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45d00 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate account value threshold, from internal table T_CEXPTHRHLD.çäValidation is performed on the Band_Code and Issue_Age.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45f50 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guranteed expense rate account value threshold, from internal table T_GEXPTHRHLD.çäValidation is performed on the Band_Code and Issue_Age.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46378 -2 -2
Description: This function returns, the expense charge select period by rate type, from internal table T_exp_sel_period.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c467c0 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46cc8 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c470c8 -2 -2
Description: This function performs a look up in internal table T_CEXPMAX and returns the the current expense maximum. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c475f0 -2 -2
Description: This function performs a look up in internal table T_GEXP and returns the the guaranteed expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47b10 -2 -2
Description: This function performs a look up in internal table T_GEXP and returns the the guaranteed expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48038 -2 -2
Description: This function performs a look up in internal table T_GEXPMAX and returns the the guaranteed expense maximum. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48578 -2 -2
Description: This function performs a look up in internal table T_CEXPTHRHLD and returns the the current expense rate account value threshold. The look up is based on a select basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c488f8 -2 -2
Description: This function performs a look up in internal table T_GEXPTHRHLD and returns the the guaranteed expense rate account value threshold. The look up is based on a select basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48e98 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c490f8 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c494c0 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49878 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49c78 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c4a0e0 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c4a590 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
;Offset=00000000
