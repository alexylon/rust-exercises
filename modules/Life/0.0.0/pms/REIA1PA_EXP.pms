;1	08.12.2016 13:33:05	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X1 1c445d8 1c43ca8 1c44680 0 0 0 2
-- All Test Cases - EIA1PA EXP --
compilerversion
4.2.1
X1 1c44680 1c445d8 0 1c44788 0 0 2
CEXPAMT(s)
CEXPAMT("(EIA1PA!CEXPAMT!20060101!35!3!1!1!1!1!1000!02!1)")
50
X1 1c44788 1c445d8 0 1c448c8 0 0 2
GEXPAMT(s)
GEXPAMT("(EIA1PA!GEXPAMT!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
50
X1 1c448c8 1c445d8 0 1c44a08 0 0 2
CEXPPCT(s)
CEXPPCT("(FPA1PA!CEXPPCT!20060101!35!3!1!1!1!1!1000!02!1)")
2
X1 1c44a08 1c445d8 0 1c44b58 0 0 2
GEXPPCT(s)
GEXPPCT("(EIA1PA!GEXPPCT!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
5
X1 1c44b58 1c445d8 0 1c44cb0 0 0 2
CEXPMAX(s)
CEXPMAX("(EIA1PA!CEXPMAX!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
50
X1 1c44cb0 1c445d8 0 1c44e10 0 0 2
GEXPMAX(s)
GEXPMAX("(EIA1PA!GEXPMAX!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
60
X1 1c44e10 1c445d8 0 1c44f78 0 0 2
CEXPTHRHLD(s)
CEXPTHRHLD("(EIA1PA!CEXPTHRHLD!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
70000
X1 1c44f78 1c445d8 0 0 0 0 2
GEXPTHRHLD(s)
GEXPTHRHLD("(EIA1PA!GEXPTHRHLD!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
70000
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P3 1c43d14 0 1cd07f8 0 0 0 2

--description
Equity Indexed Annuity product's expense rates model.çä çäRate types include (but not limited to):çä - current expense amount (CEXPAMT)çä - current expense percentage (CEXPPCT)çä - current expense maximum (CEXPMAX)çä - current expense account value threshold (CEXPTHRHLD)çä - guaranteed expense amount (GEXPAMT)çä - guaranteed expense percentage (GEXPPCT)çä - guaranteed expense maximum (GEXPMAX)çä - guaranteed expense account value threshold (GEXPTHRHLD)
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.2.1"
P13 1cd07f8 1c43d14 1cd0ba0 0 0 0 2
Equity Indexed Annuity rates - Expense Charges/rates
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for REIA1PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"REIA1PA_EXP.PMS"
OUTPUT Source Version Number
'GEN VersionInfo'
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd0ba0 1cd07f8 0 0 0 0 2
EIA1PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1c45008 0 0 0 0

F1 1c45008 1c43d80 1c45120 0 0 0 2
-- Rate Types --
Funktion

F1 1c45120 1c45008 1c45288 1c46900 0 0 2
--Expense Rate Types--
Funktion

F1 1c45288 1c45120 0 1c45408 0 0 2
CEXPAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Amt Lookup'(s)çä)
F1 1c45408 1c45120 0 1c45628 0 0 2
CEXPPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Pct Lookup'(s)çä)
F1 1c45628 1c45120 0 1c45850 0 0 2
CEXPMAX(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Max Lookup'(s)çä)
F1 1c45850 1c45120 0 1c459e8 0 0 2
CEXPTHRHLD(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Issue_Age");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Threshold Lookup'(s)çä)
F1 1c459e8 1c45120 0 1c45c20 0 0 2
GEXPAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Amt Lookup'(s)çä)
F1 1c45c20 1c45120 0 1c45e60 0 0 2
GEXPPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Pct Lookup'(s)çä)
F1 1c45e60 1c45120 0 1c460b0 0 0 2
GEXPMAX(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Max Lookup'(s)çä)
F1 1c460b0 1c45120 0 1c46308 0 0 2
GEXPTHRHLD(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Issue_Age");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar threshold lookup'(s)çä)
F1 1c46308 1c45120 1c464d8 0 0 0 2
--Select period functions--
Funktion

F1 1c464d8 1c46308 0 1c46748 0 0 2
EXPENSE Select Period(s)
Funktion
IF (EXISTS('TABLE EXP Select Period';SetParameter("Rate_Type";s)) ; çä  'TABLE EXP Select Period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c46748 1c46308 0 0 0 0 2
EXPENSE Select Ultimate Lookup Column(s)
Funktion
IF (SetParameter("Duration";s) <= 'EXPENSE Select Period'(s) ; çä  "Year_" & SetParameter("Duration";s) ; çä  "Ultimate"çä)
F1 1c46900 1c45008 1c46ae8 0 0 0 2
--Table Access functions--
Funktion

F1 1c46ae8 1c46900 0 1c46d40 0 0 2
EXPENSE Curr Amt Lookup(s)
Funktion
LOOKUPX('TABLE CEXPAMT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c46d40 1c46900 0 1c470b0 0 0 2
EXPENSE Curr Pct Lookup(s)
Funktion
LOOKUPX('TABLE CEXPPCT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c470b0 1c46900 0 1c47428 0 0 2
EXPENSE Curr Max Lookup(s)
Funktion
LOOKUPX('TABLE CEXPMAX';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c47428 1c46900 0 1c47798 0 0 2
EXPENSE Curr Threshold Lookup(s)
Funktion
LOOKUPX('TABLE CEXPTHRHLD';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);"Threshold")
F1 1c47798 1c46900 0 1c47b20 0 0 2
EXPENSE Guar Amt Lookup(s)
Funktion
LOOKUPX('TABLE GEXPAMT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c47b20 1c46900 0 1c47eb0 0 0 2
EXPENSE Guar Pct Lookup(s)
Funktion
LOOKUPX('TABLE GEXPPCT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c47eb0 1c46900 0 1c48248 0 0 2
EXPENSE Guar Max Lookup(s)
Funktion
LOOKUPX('TABLE GEXPMAX';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c48248 1c46900 0 1c485d0 0 0 2
EXPENSE Guar threshold lookup(s)
Funktion
LOOKUPX('TABLE GEXPTHRHLD';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);"Threshold")
F1 1c485d0 1c46900 1c487f8 0 0 0 2
--Build Access keys--
Funktion

F1 1c487f8 1c485d0 0 1c48a60 0 0 2
Access EXP Table ID Key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c48a60 1c485d0 0 1c48e18 0 0 2
Access EXP ChargeBasedOn Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);SetParameter("Rule_Code";s)) ; çä   // Use Charge based onçäSetParameter("Rule_Code";s) ; çä   // Else table not found, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48e18 1c485d0 0 1c491d8 0 0 2
Access EXP Jurisdiction Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c491d8 1c485d0 0 1c495e0 0 0 2
Access EXP Gender Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c495e0 1c485d0 0 1c49a50 0 0 2
Access EXP Underwriting Class Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49a50 1c485d0 0 1c49f08 0 0 2
Access EXP Smoke Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49f08 1c485d0 0 0 0 0 2
Access EXP Band Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c4a5d0 0 0 0 0

T1 1c4a5d0 1c43ec4 1c4a840 0 0 0 2
--Expense Rate Tables--
key
value
T7 1c4a840 1c4a5d0 0 1c4b368 0 0 19
TABLE CEXPAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
02
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
06
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
06
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
13
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
13
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
T7 1c4b368 1c4a5d0 0 1c4bdb0 0 0 19
TABLE CEXPPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
2
2
2
2
2
2
2
2
2
2
2
02
*
*
*
*
*
*
35
2
2
2
2
2
2
2
2
2
2
2
06
*
*
*
*
*
*
0
2
2
2
2
2
2
2
2
2
2
2
06
*
*
*
*
*
*
35
2
2
2
2
2
2
2
2
2
2
2
13
*
*
*
*
*
*
0
2
2
2
2
2
2
2
2
2
2
2
13
*
*
*
*
*
*
35
2
2
2
2
2
2
2
2
2
2
2
T7 1c4bdb0 1c4a5d0 0 1c4c800 0 0 19
TABLE CEXPMAX
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
02
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
06
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
06
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
13
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
13
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
T7 1c4c800 1c4a5d0 0 1c4cbc0 0 0 9
TABLE CEXPTHRHLD
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Threshold
02
*
*
*
*
*
*
0
60000
02
*
*
*
*
*
*
35
65000
06
*
*
*
*
*
*
0
60000
06
*
*
*
*
*
*
35
70000
13
*
*
*
*
*
*
0
60000
13
*
*
*
*
*
*
35
70000
T7 1c4cbc0 1c4a5d0 0 1c4d8b0 0 0 19
TABLE GEXPAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
02
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
06
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
06
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
13
*
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
13
*
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
T13 1c4d8b0 1c4a5d0 0 1c4f168 0 0 19
TABLE GEXPPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
NS
1
0
15
15
15
15
15
15
15
15
15
15
10
02
*
*
*
*
NS
2
0
12.5
12.5
12.5
12.5
12.5
12.5
12.5
12.5
12.5
12.5
10
02
*
*
*
*
NS
3
0
10
10
10
10
10
10
10
10
10
10
10
02
*
*
*
*
S
1
0
20
20
20
20
20
20
20
20
20
20
10
06
*
*
*
*
S
2
0
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
10
06
*
*
*
*
S
3
0
15
15
15
15
15
15
15
15
15
15
10
06
*
*
*
*
*
*
0
10
5
5
5
5
5
5
5
5
5
5
06
*
*
*
*
*
*
99
12
5
5
5
5
5
5
5
5
5
5
13
*
*
*
*
S
2
0
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
10
13
*
*
*
*
S
3
0
15
15
15
15
15
15
15
15
15
15
10
13
*
*
*
*
*
*
0
10
5
5
5
5
5
5
5
5
5
5
13
*
*
*
*
*
*
99
12
5
5
5
5
5
5
5
5
5
5
T7 1c4f168 1c4a5d0 0 1c4fa08 0 0 19
TABLE GEXPMAX
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
02
*
*
*
*
*
*
35
60
60
60
60
60
60
60
60
60
60
60
06
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
06
*
*
*
*
*
*
35
60
60
60
60
60
60
60
60
60
60
60
13
*
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
13
*
*
*
*
*
*
35
60
60
60
60
60
60
60
60
60
60
60
T7 1c4fa08 1c4a5d0 0 1c4fde8 0 0 9
TABLE GEXPTHRHLD
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Threshold
02
*
*
*
*
*
*
0
60000
02
*
*
*
*
*
*
35
65000
06
*
*
*
*
*
*
0
60000
06
*
*
*
*
*
*
35
70000
13
*
*
*
*
*
*
0
60000
13
*
*
*
*
*
*
35
70000
T3 1c4fde8 1c4a5d0 0 0 0 0 2
TABLE EXP Select Period
rate_type
sel_period
CEXP
10
GEXP
10
I0 1c43f30 0 339a3f83 0 0 0 0

I0 339a3f83 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1cd07f8
1cd0ba0
F19
1c45008
1c45120
1c46900
1c46ae8
1c46d40
1c470b0
1c47428
1c47798
1c47b20
1c47eb0
1c48248
1c485d0
1c487f8
1c48a60
1c48e18
1c491d8
1c495e0
1c49a50
1c49f08
A0
T1
1c4a5d0
!25
1c45288 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_CEXP.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45408 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_CEXPPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45628 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense maximum, from internal table T_CEXPMAX.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45850 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate account value threshold, from internal table T_CEXPTHRHLD.çäValidation is performed on the Band_Code and Issue_Age.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c459e8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense rate, from internal table T_GEXPAMT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45c20 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_GEXPPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45e60 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense maximum, from internal table T_GEXPMAX.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c460b0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guranteed expense rate account value threshold, from internal table T_GEXPTHRHLD.çäValidation is performed on the Band_Code and Issue_Age.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c464d8 -2 -2
Description: This function returns, the expense charge select period by rate type, from internal table T_EXP_Select_Period.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c46748 -2 -2
Description: Checks to see if the duration is still in the select period or not. Returns the column name to use for rate table lookup.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c46ae8 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c46d40 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c470b0 -2 -2
Description: This function performs a look up in internal table T_CEXPMAX and returns the the current expense maximum. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47428 -2 -2
Description: This function performs a look up in internal table T_CEXPTHRHLD and returns the the current expense rate account value threshold. The look up is based on a select basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47798 -2 -2
Description: This function performs a look up in internal table T_GEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47b20 -2 -2
Description: This function performs a look up in internal table T_GEXPPCT and returns the the guaranteed expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47eb0 -2 -2
Description: This function performs a look up in internal table T_GEXPMAX and returns the the guaranteed expense maximum. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48248 -2 -2
Description: This function performs a look up in internal table T_GEXPTHRHLD and returns the the guaranteed expense rate account value threshold. The look up is based on a select basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c487f8 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48a60 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48e18 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c491d8 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c495e0 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c49a50 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c49f08 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
;Offset=00000000
