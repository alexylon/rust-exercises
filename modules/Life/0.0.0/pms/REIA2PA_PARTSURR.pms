;1	08.12.2016 13:33:05	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X0 1c445d8 1c43ca8 1c44670 0 0 0 0
--All test cases--
X1 1c44670 1c445d8 0 1c44758 0 0 2
PGRPDXIN(s)
PGRPDXIN("(EIA2PA!PGRPDXIN!19000101!35!1!1!1!1!1!**!01!2!A!1!1)")
0
X1 1c44758 1c445d8 0 1c44870 0 0 2
PCHGAMT(s)
PCHGAMT("(EIA2PA!PCHGAMT!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
10
X1 1c44870 1c445d8 0 1c449b0 0 0 2
PCHGPCT(s)
PCHGPCT("(EIA2PA!PCHGPCT!19000101!66!1!1!1!1!1!**!06!2!A!1!1)")
7
X1 1c449b0 1c445d8 0 1c44af8 0 0 2
PALLOW(s)
PALLOW("(EIA2PA!PALLOW!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
M
X1 1c44af8 1c445d8 0 1c44c50 0 0 2
PFREEPCT(s)
PFREEPCT("(EIA2PA!PFREEPCT!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
5
X1 1c44c50 1c445d8 0 0 0 0 2
PFREEMO(s)
PFREEMO("(EIA2PA!PFREEMO!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
0
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P3 1c43d14 0 1c44ec8 0 0 0 2

--description
Equity Indexed Annuity product's partial surrender rates model.çä çäRate types include (but not limited to):çä - surrender grace period after crossing anniv (PGRPDXIN)çä - partial surrender charge amount (PCHGAMT)çä - partial surrender charge percentage (FCHGPCT)çä - frequency of charge free withdrawal amounts allowed (PALLOW)çä - percentage of cash value which is charge free (PFREEPCT)çä - number of months of interest penalty free (PFREEMO)
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.2.1"
P13 1c44ec8 1c43d14 1cd0870 0 0 0 2
Equity Indexed Annuity rates - Partial Surrender Charges
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for REIA2PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"REIA2PA_PARTSURR.PMS"
OUTPUT Source Version Number
"1"
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd0870 1c44ec8 0 0 0 0 2
EIA2PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1c44f40 0 0 0 0

F1 1c44f40 1c43d80 1cd0da8 0 0 0 2
--Rate Types--
Funktion

F1 1cd0da8 1c44f40 1cd0e90 1c460b8 0 0 2
--Partial Surrender rate types--
Funktion

F1 1cd0e90 1cd0da8 0 1c45100 0 0 2
PGRPDXIN(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Grace Period Xin Lookup'(s)çä)
F1 1c45100 1cd0da8 0 1c45278 0 0 2
PCHGAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Charge Amount Lookup'(s)çä)
F1 1c45278 1cd0da8 0 1c45498 0 0 2
PCHGPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Charge Percent Lookup'(s)çä)
F1 1c45498 1cd0da8 0 1c45620 0 0 2
PALLOW(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Allow Lookup'(s)çä)
F1 1c45620 1cd0da8 0 1c45850 0 0 2
PFREEPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Free Percent Lookup'(s)çä)
F1 1c45850 1cd0da8 0 1c45a88 0 0 2
PFREEMO(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Free Months Lookup'(s)çä)
F1 1c45a88 1cd0da8 1c45c38 0 0 0 2
--Select period functions--
Funktion

F1 1c45c38 1c45a88 0 1c45e90 0 0 2
PARTSURR Select Period(s)
Funktion
IF (EXISTS('TABLE PARTSURR Select Period';SetParameter("Rate_Type";s)) ; çä  'TABLE PARTSURR Select Period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c45e90 1c45a88 0 0 0 0 2
PARTSURR Select Ultimate Lookup Column(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  "Year_" & SetParameter("Duration";s) ; çä  "Ultimate"çä)
F1 1c460b8 1c44f40 1c46280 0 0 0 2
--Table access functions--
Funktion

F1 1c46280 1c460b8 0 1c465f0 0 0 2
PARTSURR Grace Period Xin Lookup(s)
Funktion
LOOKUPX('TABLE PGRPDXIN';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c465f0 1c460b8 0 1c46968 0 0 2
PARTSURR Charge Amount Lookup(s)
Funktion
LOOKUPX('TABLE PCHGAMT';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c46968 1c460b8 0 1c46ce8 0 0 2
PARTSURR Charge Percent Lookup(s)
Funktion
LOOKUPX('TABLE PCHGPCT';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c46ce8 1c460b8 0 1c47078 0 0 2
PARTSURR Allow Lookup(s)
Funktion
LOOKUPX('TABLE PALLOW';'PARTSURR Access Table ID key'(s); // select periodçä'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c47078 1c460b8 0 1c47300 0 0 2
PARTSURR Free Percent Lookup(s)
Funktion
LOOKUPX('TABLE PFREEPCT';'PARTSURR Access Table ID key'(s); // select periodçä'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c47300 1c460b8 0 1c47690 0 0 2
PARTSURR Free Months Lookup(s)
Funktion
LOOKUPX('TABLE PFREEMO';'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);'PARTSURR Access Band Code key'(s);SetParameter("Issue_Age";s);'PARTSURR Select Ultimate Lookup Column'(s))
F1 1c47690 1c460b8 1c47868 0 0 0 2
--Build access keys--
Funktion

F1 1c47868 1c47690 0 1c47aa0 0 0 2
PARTSURR Access Table ID key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c47aa0 1c47690 0 1c47ea8 0 0 2
PARTSURR Access ChargeBasedOn key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);SetParameter("Rule_Code";s)) ; çä   // Table exists, use ChargeBasedOn value in searchçäSetParameter("Rule_Code";s) ; çä   // Else table does not exist, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);"*") ; çä     // Return the wildcard as the search parameterçä"*" ; çä     // Else no matchçä"nomatch"çä  )çä)
F1 1c47ea8 1c47690 0 1c48258 0 0 2
PARTSURR Access Jurisdiction key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48258 1c47690 0 1c48650 0 0 2
PARTSURR Access Gender key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48650 1c47690 0 1c48b10 0 0 2
PARTSURR Access Smoke Code key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48b10 1c47690 0 1c49040 0 0 2
PARTSURR Access Band Code key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'PARTSURR Access Underwriting Class key'(s);'PARTSURR Access Smoke Code key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49040 1c47690 0 0 0 0 2
PARTSURR Access Underwriting Class key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'PARTSURR Access Table ID key'(s);'PARTSURR Access ChargeBasedOn key'(s);'PARTSURR Access Jurisdiction key'(s);'PARTSURR Access Gender key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c495f0 0 0 0 0

T1 1c495f0 1c43ec4 1c49828 0 0 0 2
--Tables--
key
value
T7 1c49828 1c495f0 0 1c4a328 0 0 17
TABLE PGRPDXIN
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
01
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
T7 1c4a328 1c495f0 0 1c4ac78 0 0 17
TABLE PCHGAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
100
90
80
70
50
40
25
10
10
01
*
*
*
*
*
*
66
100
90
80
70
45
40
25
10
10
06
*
*
*
*
*
*
18
100
90
80
70
40
30
25
10
10
06
*
*
*
*
*
*
66
100
90
80
60
35
30
25
10
10
13
*
*
*
*
*
*
18
100
90
80
70
40
30
25
10
10
13
*
*
*
*
*
*
66
100
90
80
60
35
30
25
10
10
T7 1c4ac78 1c495f0 0 1c4b7e0 0 0 19
TABLE PCHGPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
01
*
*
*
*
*
*
18
9
9
8
7
6
5
4
3
2
1
0
01
*
*
*
*
*
*
66
7
6
5
4
3
2
1
0
0
0
0
06
*
*
*
*
*
*
18
9
9
8
7
6
5
4
3
2
1
0
06
*
*
*
*
*
*
66
7
6
5
4
3
2
1
0
0
0
0
13
*
*
*
*
*
*
18
9
9
8
7
6
5
4
3
2
1
0
13
*
*
*
*
*
*
66
7
6
5
4
3
2
1
0
0
0
0
T7 1c4b7e0 1c495f0 0 1c4c140 0 0 17
TABLE PALLOW
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
01
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
T7 1c4c140 1c495f0 0 1c4caa8 0 0 17
TABLE PFREEPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
01
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
06
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
06
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
13
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
13
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
T7 1c4caa8 1c495f0 0 1c4d418 0 0 17
TABLE PFREEMO
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
01
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
T7 1c4d418 1c495f0 0 0 0 0 2
TABLE PARTSURR Select Period
rate_type
sel_period
PGRPDXIN
8
PCHGAMT
8
PCHGPCT
10
PALLOW
8
PFREEPCT
8
PFREEMO
8
I0 1c43f30 0 7a929165 0 0 0 0

I0 7a929165 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1c44ec8
1cd0870
F17
1c44f40
1cd0da8
1c460b8
1c46280
1c465f0
1c46968
1c46ce8
1c47078
1c47300
1c47690
1c47868
1c47aa0
1c47ea8
1c48258
1c48650
1c48b10
1c49040
A0
T1
1c495f0
!20
1cd0e90 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the number of days following the policy anniversary that the surrender grace period is applicable, from internal table T_PGRPDXIN..çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45100 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender flat amount, from internal table T_PCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45278 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender percentage, from internal table T_PCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45498 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender frequency of charge free withdrawal amounts allowed, from internal table T_PALLOW.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45620 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender percentage of cash value that is charge free, from internal table T_PFREEPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45850 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender number of months of interest penalty free, from internal table T_PFREEMO.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45c38 -2 -2
Description: This function returns, the partial surrender select period by rate type, from internal table T_PSURR_Select_Period.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c45e90 -2 -2
Description: Checks to see if the duration is still in the select period or not.   Returns the column name to use for rate table lookup.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c46280 -2 -2
Description: This function performs a look up in internal table T_PGRPDXIN and returns the number of days following the policy anniversary that the surrender grace period is applicable. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c465f0 -2 -2
Description: This function performs a look up in internal table T_PCHGAMT and returns the partial surrender flat amount. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c46968 -2 -2
Description: This function performs a look up in internal table T_PCHGPCT and returns the partial surrender percentage. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c46ce8 -2 -2
Description: This function performs a look up in internal table T_PALLOW and returns the partial surrender frequency of charge free withdrawal amounts allowed. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47300 -2 -2
Description: This function performs a look up in internal table T_PFREEMO and returns the partial surrender number of months of interest penalty free. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47868 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47aa0 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c47ea8 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48258 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48650 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48b10 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c49040 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
;Offset=00000000
