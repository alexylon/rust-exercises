;1	08.12.2016 13:33:06	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X0 1c445d8 1c43ca8 1c44670 0 0 0 0
--All test cases--
X1 1c44670 1c445d8 0 1c44750 0 0 2
CEXPAMT(s)
CEXPAMT("(EIA2PA!CEXPAMT!19000101!35!10!1!1!1!1!*!02!1!A!1!1)")
50
X1 1c44750 1c445d8 0 1c44868 0 0 2
GEXPAMT(s)
GEXPAMT("(EIA2PA!GEXPAMT!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
50
X1 1c44868 1c445d8 0 1c449a8 0 0 2
CEXPPCT(s)
CEXPPCT("(EIA2PA!CEXPPCT!19000101!35!10!1!1!1!1!*!02!1!A!1!1)")
2
X1 1c449a8 1c445d8 0 1c44af8 0 0 2
GEXPPCT(s)
GEXPPCT("(EIA2PA!GEXPPCT!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
5
X1 1c44af8 1c445d8 0 1c44c50 0 0 2
CEXPMAX(s)
CEXPMAX("(EIA2PA!CEXPMAX!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
50
X1 1c44c50 1c445d8 0 1c44db0 0 0 2
GEXPMAX(s)
CEXPPCT("(EIA2PA!CEXPPCT!19000101!35!10!1!1!1!1!**!02!1!A!1!1)")
2
X1 1c44db0 1c445d8 0 1c44f18 0 0 2
CEXPTHRHLD(s)
CEXPTHRHLD("(EIA2PA!CEXPTHRHLD!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
70000
X1 1c44f18 1c445d8 0 0 0 0 2
GEXPTHRHLD(s)
GEXPTHRHLD("(EIA2PA!GEXPTHRHLD!19000101!35!10!1!1!1!1!**!06!1!A!1!1)")
70000
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P3 1c43d14 0 1cd07a0 0 0 0 2

--description
Equity Indexed Annuity product's expense rates model.çä çäRate types include (but not limited to):çä - current expense amount (CEXPAMT)çä - current expense percentage (CEXPPCT)çä - current expense maximum (CEXPMAX)çä - current expense account value threshold (CEXPTHRHLD)çä - guaranteed expense amount (GEXPAMT)çä - guaranteed expense percentage (GEXPPCT)çä - guaranteed expense maximum (GEXPMAX)çä - guaranteed expense account value threshold (GEXPTHRHLD)
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.2.1"
P13 1cd07a0 1c43d14 1cd0b48 0 0 0 2
Equity Indexed Annuity rates - Expense Charges/rates
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for REIA2PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"REIA2PA_EXP.PMS"
OUTPUT Source Version Number
"1"
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd0b48 1cd07a0 0 0 0 0 2
EIA2PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1cd0f60 0 0 0 0

F1 1cd0f60 1c43d80 1c450a8 0 0 0 2
-- Rate Types --
Funktion

F1 1c450a8 1cd0f60 1c45228 1c46898 0 0 2
--Expense Rate Types--
Funktion

F1 1c45228 1c450a8 0 1c453a8 0 0 2
CEXPAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Amt Lookup'(s)çä)
F1 1c453a8 1c450a8 0 1c455c8 0 0 2
CEXPPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Pct Lookup'(s)çä)
F1 1c455c8 1c450a8 0 1c457f0 0 0 2
CEXPMAX(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Max Lookup'(s)çä)
F1 1c457f0 1c450a8 0 1c45988 0 0 2
CEXPTHRHLD(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Issue_Age");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Curr Threshold Lookup'(s)çä)
F1 1c45988 1c450a8 0 1c45bc0 0 0 2
GEXPAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Amt Lookup'(s)çä)
F1 1c45bc0 1c450a8 0 1c45e00 0 0 2
GEXPPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Pct Lookup'(s)çä)
F1 1c45e00 1c450a8 0 1c46048 0 0 2
GEXPMAX(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar Max Lookup'(s)çä)
F1 1c46048 1c450a8 0 1c462a0 0 0 2
GEXPTHRHLD(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Issue_Age");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'EXPENSE Guar threshold lookup'(s)çä)
F1 1c462a0 1c450a8 1c46470 0 0 0 2
--Select period functions--
Funktion

F1 1c46470 1c462a0 0 1c466e0 0 0 2
EXPENSE Select Period(s)
Funktion
IF (EXISTS('TABLE EXP Select Period';SetParameter("Rate_Type";s)) ; çä  'TABLE EXP Select Period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c466e0 1c462a0 0 0 0 0 2
EXPENSE Select Ultimate Lookup Column(s)
Funktion
IF (SetParameter("Duration";s) <= 'EXPENSE Select Period'(s) ; çä  "Year_" & SetParameter("Duration";s) ; çä  "Ultimate"çä)
F1 1c46898 1cd0f60 1c46a80 0 0 0 2
--Table Access functions--
Funktion

F1 1c46a80 1c46898 0 1c46cd8 0 0 2
EXPENSE Curr Amt Lookup(s)
Funktion
LOOKUPX('TABLE CEXPAMT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c46cd8 1c46898 0 1c47048 0 0 2
EXPENSE Curr Pct Lookup(s)
Funktion
LOOKUPX('TABLE CEXPPCT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c47048 1c46898 0 1c473c0 0 0 2
EXPENSE Curr Max Lookup(s)
Funktion
LOOKUPX('TABLE CEXPMAX';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c473c0 1c46898 0 1c47730 0 0 2
EXPENSE Curr Threshold Lookup(s)
Funktion
LOOKUPX('TABLE CEXPTHRHLD';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);"Threshold")
F1 1c47730 1c46898 0 1c47ab8 0 0 2
EXPENSE Guar Amt Lookup(s)
Funktion
LOOKUPX('TABLE GEXPAMT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c47ab8 1c46898 0 1c47e48 0 0 2
EXPENSE Guar Pct Lookup(s)
Funktion
LOOKUPX('TABLE GEXPPCT';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c47e48 1c46898 0 1c481e8 0 0 2
EXPENSE Guar Max Lookup(s)
Funktion
LOOKUPX('TABLE GEXPMAX';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);'EXPENSE Select Ultimate Lookup Column'(s))
F1 1c481e8 1c46898 0 1c48428 0 0 2
EXPENSE Guar threshold lookup(s)
Funktion
LOOKUPX('TABLE GEXPTHRHLD';'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);'Access EXP Band Code Key'(s);SetParameter("Issue_Age";s);"Threshold")
F1 1c48428 1c46898 1c48650 0 0 0 2
--Build Access keys--
Funktion

F1 1c48650 1c48428 0 1c488b8 0 0 2
Access EXP Table ID Key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c488b8 1c48428 0 1c48c70 0 0 2
Access EXP ChargeBasedOn Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);SetParameter("Rule_Code";s)) ; çä   // Use Charge based onçäSetParameter("Rule_Code";s) ; çä   // Else table not found, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48c70 1c48428 0 1c49030 0 0 2
Access EXP Jurisdiction Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49030 1c48428 0 1c49438 0 0 2
Access EXP Gender Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49438 1c48428 0 1c498a8 0 0 2
Access EXP Underwriting Class Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c498a8 1c48428 0 1c49d60 0 0 2
Access EXP Smoke Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49d60 1c48428 0 0 0 0 2
Access EXP Band Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Access EXP Table ID Key'(s);'Access EXP ChargeBasedOn Key'(s);'Access EXP Jurisdiction Key'(s);'Access EXP Gender Key'(s);'Access EXP Underwriting Class Key'(s);'Access EXP Smoke Code Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c4a428 0 0 0 0

T1 1c4a428 1c43ec4 1c4a698 0 0 0 2
--Expense Rate Tables--
key
value
T7 1c4a698 1c4a428 0 1c4b1c8 0 0 19
TABLE CEXPAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
02
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
06
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
06
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
13
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
13
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
T7 1c4b1c8 1c4a428 0 1c4bc10 0 0 19
TABLE CEXPPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
1
*
*
*
*
*
0
2
2
2
2
2
2
2
2
2
2
2
02
1
*
*
*
*
*
35
2
2
2
2
2
2
2
2
2
2
2
06
1
*
*
*
*
*
0
2
2
2
2
2
2
2
2
2
2
2
06
1
*
*
*
*
*
35
2
2
2
2
2
2
2
2
2
2
2
13
1
*
*
*
*
*
0
2
2
2
2
2
2
2
2
2
2
2
13
1
*
*
*
*
*
35
2
2
2
2
2
2
2
2
2
2
2
T7 1c4bc10 1c4a428 0 1c4c668 0 0 19
TABLE CEXPMAX
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
02
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
06
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
06
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
13
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
13
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
T7 1c4c668 1c4a428 0 1c4ca28 0 0 9
TABLE CEXPTHRHLD
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Threshold
02
1
*
*
*
*
*
0
60000
02
1
*
*
*
*
*
35
65000
06
1
*
*
*
*
*
0
60000
06
1
*
*
*
*
*
35
70000
13
1
*
*
*
*
*
0
60000
13
1
*
*
*
*
*
35
70000
T7 1c4ca28 1c4a428 0 1c4d718 0 0 19
TABLE GEXPAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
02
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
06
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
06
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
13
1
*
*
*
*
*
0
50
50
50
50
50
50
50
50
50
50
50
13
1
*
*
*
*
*
35
50
50
50
50
50
50
50
50
50
50
50
T13 1c4d718 1c4a428 0 1c4efc8 0 0 19
TABLE GEXPPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
1
*
*
*
NS
1
0
15
15
15
15
15
15
15
15
15
15
10
02
1
*
*
*
NS
2
0
12.5
12.5
12.5
12.5
12.5
12.5
12.5
12.5
12.5
12.5
10
02
1
*
*
*
NS
3
0
10
10
10
10
10
10
10
10
10
10
10
02
1
*
*
*
S
1
0
20
20
20
20
20
20
20
20
20
20
10
06
1
*
*
*
S
2
0
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
10
06
1
*
*
*
S
3
0
15
15
15
15
15
15
15
15
15
15
10
06
1
*
*
*
*
*
0
10
5
5
5
5
5
5
5
5
5
5
06
1
*
*
*
*
*
99
12
5
5
5
5
5
5
5
5
5
5
13
1
*
*
*
S
2
0
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
17.5
10
13
1
*
*
*
S
3
0
15
15
15
15
15
15
15
15
15
15
10
13
1
*
*
*
*
*
0
10
5
5
5
5
5
5
5
5
5
5
13
1
*
*
*
*
*
99
12
5
5
5
5
5
5
5
5
5
5
T7 1c4efc8 1c4a428 0 1c4f868 0 0 19
TABLE GEXPMAX
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
02
1
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
02
1
*
*
*
*
*
35
60
60
60
60
60
60
60
60
60
60
60
06
1
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
06
1
*
*
*
*
*
35
60
60
60
60
60
60
60
60
60
60
60
13
1
*
*
*
*
*
0
60
60
60
60
60
60
60
60
60
60
60
13
1
*
*
*
*
*
35
60
60
60
60
60
60
60
60
60
60
60
T7 1c4f868 1c4a428 0 1c4fc48 0 0 9
TABLE GEXPTHRHLD
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Threshold
02
1
*
*
*
*
*
0
60000
02
1
*
*
*
*
*
35
65000
06
1
*
*
*
*
*
0
60000
06
1
*
*
*
*
*
35
70000
13
1
*
*
*
*
*
0
60000
13
1
*
*
*
*
*
35
70000
T3 1c4fc48 1c4a428 0 0 0 0 2
TABLE EXP Select Period
rate_type
sel_period
CEXPPCT
10
GEXPPCT
10
I0 1c43f30 0 59831209 0 0 0 0

I0 59831209 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1cd07a0
1cd0b48
F19
1cd0f60
1c450a8
1c46898
1c46a80
1c46cd8
1c47048
1c473c0
1c47730
1c47ab8
1c47e48
1c481e8
1c48428
1c48650
1c488b8
1c48c70
1c49030
1c49438
1c498a8
1c49d60
A0
T1
1c4a428
!25
1c45228 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_CEXP.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c453a8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_CEXPPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c455c8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense maximum, from internal table T_CEXPMAX.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c457f0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate account value threshold, from internal table T_CEXPTHRHLD.çäValidation is performed on the Band_Code and Issue_Age.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45988 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense rate, from internal table T_GEXPAMT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45bc0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the current expense rate, from internal table T_GEXPPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45e00 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guaranteed expense maximum, from internal table T_GEXPMAX.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46048 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the guranteed expense rate account value threshold, from internal table T_GEXPTHRHLD.çäValidation is performed on the Band_Code and Issue_Age.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46470 -2 -2
Description: This function returns, the expense charge select period by rate type, from internal table T_EXP_Select_Period.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c466e0 -2 -2
Description: Checks to see if the duration is still in the select period or not. Returns the column name to use for rate table lookup.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46a80 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46cd8 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47048 -2 -2
Description: This function performs a look up in internal table T_CEXPMAX and returns the the current expense maximum. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c473c0 -2 -2
Description: This function performs a look up in internal table T_CEXPTHRHLD and returns the the current expense rate account value threshold. The look up is based on a select basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47730 -2 -2
Description: This function performs a look up in internal table T_CEXP and returns the the current expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47ab8 -2 -2
Description: This function performs a look up in internal table T_GEXPPCT and returns the the guaranteed expense rate. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47e48 -2 -2
Description: This function performs a look up in internal table T_GEXPMAX and returns the the guaranteed expense maximum. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c481e8 -2 -2
Description: This function performs a look up in internal table T_GEXPTHRHLD and returns the the guaranteed expense rate account value threshold. The look up is based on a select basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 CSC Initial Calculation/Rule
1c48650 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c488b8 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48c70 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49030 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49438 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c498a8 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49d60 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
;Offset=00000000
