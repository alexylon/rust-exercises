;1	08.12.2016 13:35:29	jlawrie2	
X0 1c43cb0 0 1c445e0 0 0 0 0

X1 1c445e0 1c43cb0 1c44688 0 0 0 2
-- All Test Cases - VAUB1PA PARTSURR --


X1 1c44688 1c445e0 0 1c44770 0 0 2
PGRPDXIN(s)
PGRPDXIN("(VA1PA!PGRPDXIN!19000101!35!1!1!1!1!1!**!01!2!A!1!1)")
28
X1 1c44770 1c445e0 0 1c448a8 0 0 2
PCHGAMT(s)
PCHGAMT("(VA1PA!PCHGAMT!20070101!35!2!1!1!1!1!1000!01!*!)")
28
X1 1c448a8 1c445e0 0 1c449e8 0 0 2
PCHGPCT(s)
PCHGPCT("(VA1PA!PCHGPCT!19000101!66!1!1!1!1!1!**!06!2!A!1!1)")
33.6
X1 1c449e8 1c445e0 0 1c44b30 0 0 2
PALLOW(s)
PALLOW("(VA1PA!PALLOW!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
M
X1 1c44b30 1c445e0 0 1c44c88 0 0 2
PFREEPCT(s)
PFREEPCT("(VA1PA!PFREEPCT!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
28
X1 1c44c88 1c445e0 0 0 0 0 2
PFREEMO(s)
PFREEMO("(VA1PA!PFREEMO!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
35
O0 1c43b6c 0 0 0 0 0 0

E0 1c43bd8 0 0 0 0 0 0

L0 1c43c44 0 0 0 0 0 0

B0 1c43df4 0 0 0 0 0 0

P1 1c43d1c 0 1c44ea0 0 0 0 2

--description
Variable Annuity with Unbundled Mortality and Expense product's partial surrender rates model.çä çäRate types include (but not limited to):çä - surrender grace period after crossing anniv (PGRPDXIN)çä - partial surrender charge amount (PCHGAMT)çä - partial surrender charge percentage (FCHGPCT)çä - frequency of charge free withdrawal amounts allowed (PALLOW)çä - percentage of cash value which is charge free (PFREEPCT)çä - number of months of interest penalty free (PFREEMO)
P13 1c44ea0 1c43d1c 1cd07f0 0 0 0 2
Variable Annuity with Unbundled M&E pA - Partial Surrender Charge rates
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for Variable Annuity Unbundled M&E pA Plan 1 partial surrenders - base system"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"RVAUB1PA_PARTSURR.PMS"
OUTPUT Source Version Number
"1"
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"SS"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd07f0 1c44ea0 0 0 0 0 2
VAUB1PA
IncType
mandatory
IncRule

IncValue

F0 1c43d88 0 1c44f18 0 0 0 0

F1 1c44f18 1c43d88 1cd0da8 0 0 0 2
--Rate Types--
Funktion

F1 1cd0da8 1c44f18 1cd0e90 1c45e38 0 0 2
--Partial Surrender rate types--
Funktion

F1 1cd0e90 1cd0da8 0 1c450a8 0 0 2
PGRPDXIN(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Grace Period Xin Lookup'(s)çä)
F1 1c450a8 1cd0da8 0 1c45220 0 0 2
PCHGAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Charge Amount Lookup'(s)çä)
F1 1c45220 1cd0da8 0 1c45440 0 0 2
PCHGPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Charge Percent Lookup'(s)çä)
F1 1c45440 1cd0da8 0 1c455c8 0 0 2
PALLOW(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Allow Lookup'(s)çä)
F1 1c455c8 1cd0da8 0 1c457f8 0 0 2
PFREEPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Free Percent Lookup'(s)çä)
F1 1c457f8 1cd0da8 0 1c45a30 0 0 2
PFREEMO(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'PARTSURR Free Months Lookup'(s)çä)
F1 1c45a30 1cd0da8 1c45be0 0 0 0 2
--Select period functions--
Funktion

F1 1c45be0 1c45a30 0 0 0 0 2
PARTSURR Select Period(s)
Funktion
IF (EXISTS('TABLE PARTSURR Select period';SetParameter("Rate_Type";s)) ; çä  'TABLE PARTSURR Select period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c45e38 1c44f18 1c45ff8 0 0 0 2
--Table access functions--
Funktion

F1 1c45ff8 1c45e38 0 1c46518 0 0 2
PARTSURR Grace Period Xin Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  LOOKUPX('TABLE PGRPDXIN';'Psurr Access Table ID Key'(s); // select periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE PGRPDXIN';'Psurr Access Table ID Key'(s); // Ultimate periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c46518 1c45e38 0 1c46a40 0 0 2
PARTSURR Charge Amount Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  LOOKUPX('TABLE PCHGAMT';'Psurr Access Table ID Key'(s); // select periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE PCHGAMT';'Psurr Access Table ID Key'(s); // Ultimate periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c46a40 1c45e38 0 1c46f70 0 0 2
PARTSURR Charge Percent Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  LOOKUPX('TABLE PCHGPCT';'Psurr Access Table ID Key'(s); // select periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE PCHGPCT';'Psurr Access Table ID Key'(s); // Ultimate periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c46f70 1c45e38 0 1c474a0 0 0 2
PARTSURR Allow Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  LOOKUPX('TABLE PALLOW';'Psurr Access Table ID Key'(s); // select periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE PALLOW';'Psurr Access Table ID Key'(s); // Ultimate periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c474a0 1c45e38 0 1c479d8 0 0 2
PARTSURR Free Percent Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  LOOKUPX('TABLE PFREEPCT';'Psurr Access Table ID Key'(s); // select periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE PFREEPCT';'Psurr Access Table ID Key'(s); // Ultimate periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c479d8 1c45e38 0 1c47e08 0 0 2
PARTSURR Free Months Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'PARTSURR Select Period'(s) ; çä  LOOKUPX('TABLE PFREEMO';'Psurr Access Table ID Key'(s); // select periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE PFREEMO';'Psurr Access Table ID Key'(s); // Ultimate periodçä'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);'Psurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c47e08 1c45e38 1c47fd8 0 0 0 2
--Build access keys--
Funktion

F1 1c47fd8 1c47e08 0 1c48208 0 0 2
Psurr Access Table ID Key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c48208 1c47e08 0 1c48590 0 0 2
Psurr Access ChargeBasedOn Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);SetParameter("Rule_Code";s)) ; çä   // Use Charge based onçäSetParameter("Rule_Code";s) ; çä   // Else table not found, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48590 1c47e08 0 1c48928 0 0 2
Psurr Access Jurisdiction Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48928 1c47e08 0 1c48d08 0 0 2
Psurr Access Gender Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48d08 1c47e08 0 1c49198 0 0 2
Psurr Access Smoke Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49198 1c47e08 0 1c49690 0 0 2
Psurr Access Band Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Psurr Access Underwriting Class Key'(s);'Psurr Access Smoke Code Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49690 1c47e08 0 0 0 0 2
Psurr Access Underwriting Class Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Psurr Access Table ID Key'(s);'Psurr Access ChargeBasedOn Key'(s);'Psurr Access Jurisdiction Key'(s);'Psurr Access Gender Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e60 0 0 0 0 0 0

T0 1c43ecc 0 1c49c48 0 0 0 0

T1 1c49c48 1c43ecc 1c49e78 0 0 0 2
--Tables--
key
value
T7 1c49e78 1c49c48 0 1c4a7d8 0 0 17
TABLE PGRPDXIN
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
01
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
06
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
06
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
13
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
13
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
T7 1c4a7d8 1c49c48 0 1c4b120 0 0 17
TABLE PCHGAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
01
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
06
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
06
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
13
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
13
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
T7 1c4b120 1c49c48 0 1c4bc28 0 0 19
TABLE PCHGPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
01
*
*
*
*
*
*
18
35.2
35.2
34.4
33.6
32.8
32
31.2
30.4
29.6
28.8
28
01
*
*
*
*
*
*
66
33.6
32.8
32
31.2
30.4
29.6
28.8
28
28
28
28
06
*
*
*
*
*
*
18
35.2
35.2
34.4
33.6
32.8
32
31.2
30.4
29.6
28.8
28
06
*
*
*
*
*
*
66
33.6
32.8
32
31.2
30.4
29.6
28.8
28
28
28
28
13
*
*
*
*
*
*
18
35.2
35.2
34.4
33.6
32.8
32
31.2
30.4
29.6
28.8
28
13
*
*
*
*
*
*
66
33.6
32.8
32
31.2
30.4
29.6
28.8
28
28
28
28
T7 1c4bc28 1c49c48 0 1c4c588 0 0 17
TABLE PFREEPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
01
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
06
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
06
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
13
*
*
*
*
*
*
18
28
28
28
28
28
28
28
28
28
13
*
*
*
*
*
*
66
28
28
28
28
28
28
28
28
28
T7 1c4c588 1c49c48 0 1c4cee8 0 0 17
TABLE PFREEMO
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
35
35
35
35
35
35
35
35
35
01
*
*
*
*
*
*
66
35
35
35
35
35
35
35
35
35
06
*
*
*
*
*
*
18
35
35
35
35
35
35
35
35
35
06
*
*
*
*
*
*
66
35
35
35
35
35
35
35
35
35
13
*
*
*
*
*
*
18
35
35
35
35
35
35
35
35
35
13
*
*
*
*
*
*
66
35
35
35
35
35
35
35
35
35
T7 1c4cee8 1c49c48 0 1c4d850 0 0 17
TABLE PALLOW
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
01
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
T7 1c4d850 1c49c48 0 0 0 0 2
TABLE PARTSURR Select period
rate_type
sel_period
PGRPDXIN
8
PCHGAMT
8
PCHGPCT
10
PALLOW
8
PFREEPCT
8
PFREEMO
8
I0 1c43f38 0 31ac655b 0 0 0 0

I0 31ac655b 1c43f38 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1c44ea0
1cd07f0
F17
1c44f18
1cd0da8
1c45e38
1c45ff8
1c46518
1c46a40
1c46f70
1c474a0
1c479d8
1c47e08
1c47fd8
1c48208
1c48590
1c48928
1c48d08
1c49198
1c49690
A0
T1
1c49c48
!19
1cd0e90 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the number of days following the policy anniversary that the surrender grace period is applicable, from internal table T_PGRPDXIN..çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c450a8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender flat amount, from internal table T_PCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45220 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender percentage, from internal table T_PCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45440 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender frequency of charge free withdrawal amounts allowed, from internal table T_PALLOW.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c455c8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender percentage of cash value that is charge free, from internal table T_PFREEPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c457f8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the partial surrender number of months of interest penalty free, from internal table T_PFREEMO.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45be0 -2 -2
Description: This function returns, the partial surrender select period by rate type, from internal table T_psurr_sel_period.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45ff8 -2 -2
Description: This function performs a look up in internal table T_PGRPDXIN and returns the number of days following the policy anniversary that the surrender grace period is applicable. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46518 -2 -2
Description: This function performs a look up in internal table T_PCHGAMT and returns the partial surrender flat amount. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46a40 -2 -2
Description: This function performs a look up in internal table T_PCHGPCT and returns the partial surrender percentage. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46f70 -2 -2
Description: This function performs a look up in internal table T_PALLOW and returns the partial surrender frequency of charge free withdrawal amounts allowed. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c479d8 -2 -2
Description: This function performs a look up in internal table T_PFREEMO and returns the partial surrender number of months of interest penalty free. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47fd8 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48208 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48590 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48928 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48d08 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49198 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49690 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
;Offset=00000000
