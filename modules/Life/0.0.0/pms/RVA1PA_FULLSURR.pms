;1	08.12.2016 13:35:28	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X0 1c445d8 1c43ca8 1c44680 0 0 0 0
-- All Test Cases - VA1PA FULLSURR --
X1 1c44680 1c445d8 0 1c44768 0 0 2
FGRPDXIN(s)
FGRPDXIN("(VA1PA!FGRPDXIN!19000101!35!1!1!1!1!1!**!01!2!A!1!1)")
45
X1 1c44768 1c445d8 0 1c44878 0 0 2
FCHGAMT(s)
FCHGAMT("(VAPA!FCHGAMT!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
40
X1 1c44878 1c445d8 0 1c449b8 0 0 2
FCHGAMT(s)1
FCHGAMT("(VAPA!FCHGAMT!20020101!35!5!1!1!1!0!51!06!2!1!0!)")
40
X1 1c449b8 1c445d8 0 1c44b00 0 0 2
FCHGPCT(s)
FCHGPCT("(VA1PA!FCHGPCT!20060101!35!2!1!1!1!1!51!06!1)")
47
X1 1c44b00 1c445d8 0 1c44c50 0 0 2
FALLOW(s)
FALLOW("(VA1PA!FALLOW!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
M
X1 1c44c50 1c445d8 0 1c44db0 0 0 2
FFREEPCT(s)
FFREEPCT("(VA1PA!FFREEPCT!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
40
X1 1c44db0 1c445d8 0 0 0 0 2
FFREEMO(s)
FFREEMO("(VA1PA!FFREEMO!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
40
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P3 1c43d14 0 1c44f90 0 0 0 2

--description
Variable Annuity product's full surrender rates model.çä çäRate types include (but not limited to):çä - surrender grace period after crossing anniv (FGRPDXIN)çä - full surrender charge amount (FCHGAMT)çä - full surrender charge percentage (FCHGPCT)çä - frequency of charge free withdrawal amounts allowed (FALLOW)çä - percentage of cash value which is charge free (FFREEPCT)çä - number of months of interest penalty free (FFREEMO)
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.5.4"
P13 1c44f90 1c43d14 1c44ec8 0 0 0 2
Variable Annuity rates - Full Surrender Charges
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for RVA1PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"RVA1PA_FULLSURR.PMS"
OUTPUT Source Version Number
'GEN VersionInfo'
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"SS"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1c44ec8 1c44f90 0 0 0 0 2
VA1PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1cd0dd8 0 0 0 0

F1 1cd0dd8 1c43d80 1cd0e90 0 0 0 2
--Rate Types--
Funktion

F1 1cd0e90 1cd0dd8 1c45018 1c45ff0 0 0 2
--full Surrender rate types--
Funktion

F1 1c45018 1cd0e90 0 1c45190 0 0 2
FGRPDXIN(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Grace Period Xin Lookup'(s)çä)
F1 1c45190 1cd0e90 0 1c453b0 0 0 2
FCHGAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Charge Amount Lookup'(s)çä)
F1 1c453b0 1cd0e90 0 1c455d8 0 0 2
FCHGPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Charge Percent Lookup'(s)çä)
F1 1c455d8 1cd0e90 0 1c45768 0 0 2
FALLOW(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Allow Lookup'(s)çä)
F1 1c45768 1cd0e90 0 1c459a0 0 0 2
FFREEPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Free Percent Lookup'(s)çä)
F1 1c459a0 1cd0e90 0 1c45be0 0 0 2
FFREEMO(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Free Months Lookup'(s)çä)
F1 1c45be0 1cd0e90 1c45d98 0 0 0 2
--Select period functions--
Funktion

F1 1c45d98 1c45be0 0 0 0 0 2
FULLSURR Select Period(s)
Funktion
IF (EXISTS('TABLE fsurr Select period';SetParameter("Rate_Type";s)) ; çä  'TABLE fsurr Select period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c45ff0 1cd0dd8 1c461b8 0 0 0 2
--Table access functions--
Funktion

F1 1c461b8 1c45ff0 0 1c466e0 0 0 2
FULLSURR Grace Period Xin Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  LOOKUPX('TABLE FGRPDXIN';'Fsurr Access Table ID Key'(s); // select periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE FGRPDXIN';'Fsurr Access Table ID Key'(s); // Ultimate periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c466e0 1c45ff0 0 1c46c10 0 0 2
FULLSURR Charge Amount Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  LOOKUPX('TABLE FCHGAMT';'Fsurr Access Table ID Key'(s); // select periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE FCHGAMT';'Fsurr Access Table ID Key'(s); // Ultimate periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c46c10 1c45ff0 0 1c47148 0 0 2
FULLSURR Charge Percent Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  LOOKUPX('TABLE FCHGPCT';'Fsurr Access Table ID Key'(s); // select periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE FCHGPCT';'Fsurr Access Table ID Key'(s); // Ultimate periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c47148 1c45ff0 0 1c47680 0 0 2
FULLSURR Allow Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  LOOKUPX('TABLE FALLOW';'Fsurr Access Table ID Key'(s); // select periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE FALLOW';'Fsurr Access Table ID Key'(s); // Ultimate periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c47680 1c45ff0 0 1c47ab0 0 0 2
FULLSURR Free Percent Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  LOOKUPX('TABLE FFREEPCT';'Fsurr Access Table ID Key'(s); // select periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE FFREEPCT';'Fsurr Access Table ID Key'(s); // Ultimate periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c47ab0 1c45ff0 0 1c47ff8 0 0 2
FULLSURR Free Months Lookup(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  LOOKUPX('TABLE FFREEMO';'Fsurr Access Table ID Key'(s); // select periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Year_" & SetParameter("Duration";s)) ; çä  LOOKUPX('TABLE FFREEMO';'Fsurr Access Table ID Key'(s); // Ultimate periodçä'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);'Fsurr Access Band Code Key'(s);SetParameter("Issue_Age";s);"Ultimate")çä)
F1 1c47ff8 1c45ff0 1c481d0 0 0 0 2
--Build access keys--
Funktion

F1 1c481d0 1c47ff8 0 1c48408 0 0 2
Fsurr Access Table ID Key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c48408 1c47ff8 0 1c48808 0 0 2
Fsurr Access ChargeBasedOn Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);SetParameter("Rule_Code";s)) ; çä   // Table exists, use ChargeBasedOn value in searchçäSetParameter("Rule_Code";s) ; çä   // Else table does not exist, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);"*") ; çä     // Return the wildcard as the search parameterçä"*" ; çä     // Else no matchçä"nomatch"çä  )çä)
F1 1c48808 1c47ff8 0 1c48ba8 0 0 2
Fsurr Access Jurisdiction Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48ba8 1c47ff8 0 1c48f90 0 0 2
Fsurr Access Gender Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48f90 1c47ff8 0 1c49428 0 0 2
Fsurr Access Smoke Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49428 1c47ff8 0 1c49928 0 0 2
Fsurr Access Band Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Fsurr Access Underwriting Class Key'(s);'Fsurr Access Smoke Code Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c49928 1c47ff8 0 0 0 0 2
Fsurr Access Underwriting Class Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'Fsurr Access Table ID Key'(s);'Fsurr Access ChargeBasedOn Key'(s);'Fsurr Access Jurisdiction Key'(s);'Fsurr Access Gender Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c49ef0 0 0 0 0

T1 1c49ef0 1c43ec4 1c4a128 0 0 0 2
--Tables--
key
value
T7 1c4a128 1c49ef0 0 1c4abf0 0 0 17
TABLE FGRPDXIN
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
45
45
45
45
45
45
45
45
45
01
*
*
*
*
*
*
66
45
45
45
45
45
45
45
45
45
06
*
*
*
*
*
*
18
45
45
45
45
45
45
45
45
45
06
*
*
*
*
*
*
66
45
45
45
45
45
45
45
45
45
13
*
*
*
*
*
*
18
45
45
45
45
45
45
45
45
45
13
*
*
*
*
*
*
66
45
45
45
45
45
45
45
45
45
T7 1c4abf0 1c49ef0 0 1c4b548 0 0 17
TABLE FCHGAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
01
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
T7 1c4b548 1c49ef0 0 1c4bcf0 0 0 16
TABLE FCHGPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Ultimate
01
*
*
*
*
*
*
18
47
47
46
45
44
42
41
40
01
*
*
*
*
*
*
66
46
45
44
43
42
41
40
40
06
*
*
*
*
*
*
18
47
47
46
45
44
42
41
40
06
*
*
*
*
*
*
66
46
45
44
43
42
41
40
40
13
*
*
*
*
*
*
18
47
47
46
45
44
42
41
40
13
*
*
*
*
*
*
66
46
45
44
43
42
41
40
40
T7 1c4bcf0 1c49ef0 0 1c4c658 0 0 17
TABLE FFREEPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
01
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
T7 1c4c658 1c49ef0 0 1c4cfc0 0 0 17
TABLE FFREEMO
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
01
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
06
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
18
40
40
40
40
40
40
40
40
40
13
*
*
*
*
*
*
66
40
40
40
40
40
40
40
40
40
T7 1c4cfc0 1c49ef0 0 1c4d930 0 0 17
TABLE FALLOW
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
01
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
T7 1c4d930 1c49ef0 0 0 0 0 2
TABLE fsurr Select period
rate_type
sel_period
FGRPDXIN
8
FCHGAMT
8
FCHGPCT
7
FALLOW
8
FFREEPCT
8
FFREEMO
8
I0 1c43f30 0 290d275d 0 0 0 0

I0 290d275d 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1c44f90
1c44ec8
F17
1cd0dd8
1cd0e90
1c45ff0
1c461b8
1c466e0
1c46c10
1c47148
1c47680
1c47ab0
1c47ff8
1c481d0
1c48408
1c48808
1c48ba8
1c48f90
1c49428
1c49928
A0
T1
1c49ef0
!19
1c45018 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the number of days following the policy anniversary that the surrender grace period is applicable, from internal table T_FGRPDXIN..çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45190 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender flat amount, from internal table T_FCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c453b0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender percentage, from internal table T_FCHGPCT. Validation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c455d8 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender frequency of charge free withdrawal amounts allowed, from internal table T_FALLOW.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45768 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender percentage of cash value that is charge free, from internal table T_FFREEPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c459a0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender number of months of interest penalty free, from internal table T_FFREEMO.çäValidation is performed on the Band_Code and Duration.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c45d98 -2 -2
Description: This function returns, the full surrender select period by rate type, from internal table T_fsurr_sel_period.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c461b8 -2 -2
Description: This function performs a look up in internal table T_FGRPDXIN and returns the number of days following the policy anniversary that the surrender grace period is applicable. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c466e0 -2 -2
Description: This function performs a look up in internal table T_FCHGAMT and returns the full surrender flat amount. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c46c10 -2 -2
Description: This function performs a look up in internal table T_FCHGPCT and returns the full surrender percentage. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47148 -2 -2
Description: This function performs a look up in internal table T_FALLOW and returns the full surrender frequency of charge free withdrawal amounts allowed. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c47ab0 -2 -2
Description: This function performs a look up in internal table T_FFREEMO and returns the full surrender number of months of interest penalty free. The look up is based on a select and ultimate basis and any or all of the key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c481d0 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48408 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48808 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48ba8 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c48f90 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the  wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49428 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
1c49928 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Logçä10/31/2007 CSC Initial Calculation/Rule
;Offset=00000000
