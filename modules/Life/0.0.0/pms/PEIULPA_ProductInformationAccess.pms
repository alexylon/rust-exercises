;1	20.03.2017 13:20:05	jtomlienovic	
X0 003f40d0 0 0 0 0 0 0

O0 003f3f8c 0 0 0 0 0 0

E0 003f3ff8 0 0 0 0 0 0

L0 003f4064 0 0 0 0 0 0

B0 003f4214 0 0 0 0 0 0

P0 003f413c 0 0 0 0 0 0

F0 003f41a8 0 003f2928 0 0 0 0

F1 003f2928 003f41a8 003f46f0 003f5008 0 0 2
-- Utility Functions --
Funktion

F1 003f46f0 003f2928 0 003f4870 0 0 2
Table Effective Date(effectiveDate)
Funktion
DATE(effectiveDate;0;0;0;"YMD") //(year(effective_date) * 10000) + (month(effective_date) * 100) + day(effective_date)ä
F1 003f4870 003f2928 003f49a8 0 0 0 2
-- Wildcard Lookup Functions --
Funktion

F1 003f49a8 003f4870 0 003f4b98 0 0 2
key2 lookup(tablename; key1; key2)
Funktion
IF (EXISTS(table(tablename);key1;key2) ; çä  key2 ; çä  IF (EXISTS(table(tablename);key1;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & " not found in " & tablename)çä    )çä)çä)
F1 003f4b98 003f4870 0 003f4e18 0 0 2
key3 lookup(tablename; key1; key2; key3)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3) ; çä  key3 ; çä  IF (EXISTS(table(tablename);key1;key2;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & " not found in " & tablename)çä    )çä)çä)
F1 003f4e18 003f4870 0 003f4f78 0 0 2
key4 lookup(tablename; key1; key2; key3; key4)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4) ; çä  key4 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;1000) ; çä    1000 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;0) ; çä      0 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & " not found in " & tablename)çä    )çä)çä)
F1 003f4f78 003f4870 0 01e607b0 0 0 2
key5 lookup(tablename; key1; key2; key3; key4; key5)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5) ; çä  key5 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & " not found in " & tablename)çä    )çä)çä)
F1 01e607b0 003f4870 0 01e605a8 0 0 2
key6 lookup(tablename; key1; key2; key3; key4; key5; key6)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6) ; çä  key6 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & " not found in " & tablename)çä    )çä)çä)
F1 01e605a8 003f4870 0 01e60cf0 0 0 2
key7 lookup(tablename; key1; key2; key3; key4; key5; key6; key7)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7) ; çä  key7 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf0 003f4870 0 01e60cf1 0 0 2
key8 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8) ; çä  key8 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & key8 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf1 003f4870 0 01e60cf2 0 0 2
key9 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9) ; çä  key9 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf2 003f4870 0 0 0 0 2
key10 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9, key10)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;key10) ; çä  key10 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & "/" & key10 & " not found in " & tablename)çä    )çä)çä)
F1 003f5008 003f41a8 003f5fe0 0 0 0 2
-- NEW Table Access Functions --
Funktion

F1 003f5fe0 003f5008 003f61a0 0 0 0 2
-- Table Access functions --
Funktion

F1 003f61a0 003f5fe0 003f6350 0 0 0 2
--
Funktion

F1 003f6350 003f61a0 0 35cea6bd 0 0 2
--
Funktion

F1 35cea6bd 003f61a0 0 5d12e6f0 0 0 2
PP LP CP PremiumRate(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct PremiumRateçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct PremiumRate';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct PremiumRate'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçäe_(v_construct(s_keys);8);  //mortalityAssumptionTypeçäe_(v_construct(s_keys);9) //premiumRateTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d12e6f0 003f61a0 0 11e02530 0 0 2
PP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProductçäIF (EXISTS('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11e02530 003f61a0 0 57afbe7b 0 0 2
PP LoanProvision MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LoanProvision MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57afbe7b 003f61a0 0 1d67a506 0 0 2
PP LapseProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LapseProvisionçäIF (EXISTS('Table PolicyProduct LapseProvision';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LapseProvision'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1d67a506 003f61a0 0 379a6e4b 0 0 2
PP LP CPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 379a6e4b 003f61a0 0 12554599 0 0 2
SourceInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfoçäIF (EXISTS('Table SourceInfo';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12554599 003f61a0 0 6e7f6a57 0 0 2
PPExt PaymentAssembly(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssemblyçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e7f6a57 003f61a0 0 60ba2fed 0 0 2
PP IPInfoExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 60ba2fed 003f61a0 0 30595e3b 0 0 2
PPExt FS(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatementçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30595e3b 003f61a0 0 3ed8930c 0 0 2
PP LP CP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //indicatorCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);6) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct LifeProduct CoverageProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //indicatorCodeçäe_(v_construct(s_keys);5); //productCodeçäe_(v_construct(s_keys);6); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);7)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ed8930c 003f61a0 0 90a299 0 0 2
PP LPExt ArrangementProduct ArrangementOptProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct FeeçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 90a299 003f61a0 0 39972c6d 0 0 2
PP LP CP COP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10)); //underwritingClassçäe_(v_construct(s_keys);11); //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12)); //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçä'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));  //underwritingClassçäe_(v_construct(s_keys);11);  //underwritingSubClassçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));  //tobaccoPremiumBasisçä'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'PP LP CP COP'(s_keys;"CovOpt_Key");e_(v_construct(s_keys);10));e_(v_construct(s_keys);11);e_(v_construct(s_keys);12));e_(v_construct(s_keys);13)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39972c6d 003f61a0 0 e07d89e 0 0 2
PP LP LifeUSAProduct IRSPremCalcMethod(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethodçäIF (EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethod';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct LifeUSAProduct IRSPremCalcMethod'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e07d89e 003f61a0 0 65cc6899 0 0 2
PP LPExt ArrangementProduct ArrangementOptProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 65cc6899 003f61a0 0 19c4a2f7 0 0 2
PP LP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProductçäIF (EXISTS('Table PolicyProduct LifeProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19c4a2f7 003f61a0 0 1c268ad4 0 0 2
PP LoanProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvisionçäIF (EXISTS('Table PolicyProduct LoanProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c268ad4 003f61a0 0 39f9e67e 0 0 2
IssueGenderCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IssueGenderCCçäIF (EXISTS('Table IssueGenderCC';e_(v_construct(s_keys);0) //IssueGenderCC_id_extçä) ; çä   // then read from the table çä'Table IssueGenderCC'[e_(v_construct(s_keys);0) //IssueGenderCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39f9e67e 003f61a0 0 5c00fbd4 0 0 2
PP IPInfoExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c00fbd4 003f61a0 0 221de740 0 0 2
PP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 221de740 003f61a0 0 5578cae1 0 0 2
PP LPExt ArrangementProduct ArrangementOptProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProductçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5578cae1 003f61a0 0 764ab88e 0 0 2
PP LP CP COP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçäe_(v_construct(s_keys);8); //productCodeçä'table effective date'(e_(v_construct(s_keys);9)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 764ab88e 003f61a0 0 5054dfb2 0 0 2
PP LP CPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5054dfb2 003f61a0 0 c6b1458 0 0 2
PP LP CP COPExt ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key") //CovOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c6b1458 003f61a0 0 5b90134b 0 0 2
PP IPInfoExt AllowedArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProductçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b90134b 003f61a0 0 3c6a270b 0 0 2
PP LP CPExt ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key") //Coverage_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c6a270b 003f61a0 0 b3b88da 0 0 2
PP IPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //productCodeçä'table effective date'(e_(v_construct(s_keys);5)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b3b88da 003f61a0 0 1e01b8ac 0 0 2
PP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FeeçäIF (EXISTS('Table PolicyProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e01b8ac 003f61a0 0 2eafa02e 0 0 2
PP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2eafa02e 003f61a0 0 300f6efc 0 0 2
PP LP CP COP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct FeeçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 300f6efc 003f61a0 0 6af44ee1 0 0 2
PP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6af44ee1 003f61a0 0 72e031a5 0 0 2
PP LoanProvision RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariationçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72e031a5 003f61a0 0 5b9b2901 0 0 2
DefLifeInsMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DefLifeInsMethodCCçäIF (EXISTS('Table DefLifeInsMethodCC';e_(v_construct(s_keys);0) //DefLifeInsMethodCC_id_extçä) ; çä   // then read from the table çä'Table DefLifeInsMethodCC'[e_(v_construct(s_keys);0) //DefLifeInsMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b9b2901 003f61a0 0 41ddbfe8 0 0 2
PP PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41ddbfe8 003f61a0 0 b2dba06 0 0 2
JurisdictionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table JurisdictionCCçäIF (EXISTS('Table JurisdictionCC';e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä) ; çä   // then read from the table çä'Table JurisdictionCC'[e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b2dba06 003f61a0 0 72a7463b 0 0 2
PP LPExt ArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProductçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72a7463b 003f61a0 0 2cb8fc93 0 0 2
DeathBenefitOptCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DeathBenefitOptCCçäIF (EXISTS('Table DeathBenefitOptCC';e_(v_construct(s_keys);0) //DeathBenefitOptCC_id_extçä) ; çä   // then read from the table çä'Table DeathBenefitOptCC'[e_(v_construct(s_keys);0) //DeathBenefitOptCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2cb8fc93 003f61a0 0 4eded791 0 0 2
PP IPInfoExt IndexCalc(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalcçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //periodModeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //periodModeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4eded791 003f61a0 0 3f4441a4 0 0 2
PP PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailableçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f4441a4 003f61a0 0 232a740d 0 0 2
PP LP CP UnderwritingClassProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProductçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8)); //underwritingClassçäe_(v_construct(s_keys);9); //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)); //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));  //underwritingClassçäe_(v_construct(s_keys);9);  //underwritingSubClassçä'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));  //tobaccoPremiumBasisçä'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct";PP(s_keys;"Policy_Key");'PP LP CP'(s_keys;"Coverage_Key");e_(v_construct(s_keys);8));e_(v_construct(s_keys);9);e_(v_construct(s_keys);10));e_(v_construct(s_keys);11)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 232a740d 003f61a0 0 7c94f77b 0 0 2
PP LPExt ArrangementProduct ArrangementOptProduct SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //arrTypeçäe_(v_construct(s_keys);5); //arrTypeçäe_(v_construct(s_keys);6) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct OLifEExtension LifeProductExtension ArrangementProduct ArrangementOptProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //arrTypeçäe_(v_construct(s_keys);5);  //arrTypeçäe_(v_construct(s_keys);6) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c94f77b 003f61a0 0 558c424c 0 0 2
IP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProductçäIF (EXISTS('Table InvestProduct';e_(v_construct(s_keys);0) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct';e_(v_construct(s_keys);0); //productCodeçä'table effective date'(e_(v_construct(s_keys);1)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 558c424c 003f61a0 0 322b8c9d 0 0 2
PP PPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfoçäIF (EXISTS('Table PolicyProduct PolicyProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 322b8c9d 003f61a0 0 79d689f2 0 0 2
PP LP CP COPExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key"); //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key"); //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP LP CP'(s_keys;"Coverage_Key");  //Coverage_Keyçä'PP LP CP COP'(s_keys;"CovOpt_Key");  //CovOpt_Keyçäe_(v_construct(s_keys);10) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79d689f2 003f61a0 0 14844322 0 0 2
PP LP LifeUSAProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProductçäIF (EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LifeProduct LifeUSAProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14844322 003f61a0 0 0 0 0 2
PP IPInfoExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
A0 003f4280 0 0 0 0 0 0

T0 003f42ec 0 0 0 0 0 0

I0 003f4358 0 3024e973 0 0 0 0

I0 3024e973 003f4358 0 0 0 0 0
PPfL.pms
-
O0
E0
L0
B0
P0
F61
003f2928
003f46f0
003f4870
003f49a8
003f4b98
003f4e18
003f4f78
01e607b0
01e605a8
01e60cf0
01e60cf1
01e60cf2
003f5008
003f5fe0
003f61a0
003f6350
35cea6bd
5d12e6f0
11e02530
57afbe7b
1d67a506
379a6e4b
12554599
6e7f6a57
60ba2fed
30595e3b
3ed8930c
90a299
39972c6d
e07d89e
65cc6899
19c4a2f7
1c268ad4
39f9e67e
5c00fbd4
221de740
5578cae1
764ab88e
5054dfb2
c6b1458
5b90134b
3c6a270b
b3b88da
1e01b8ac
2eafa02e
300f6efc
6af44ee1
72e031a5
5b9b2901
41ddbfe8
b2dba06
72a7463b
2cb8fc93
4eded791
3f4441a4
232a740d
7c94f77b
558c424c
322b8c9d
79d689f2
14844322
A0
T0
!10
003f46f0 -2 -2
Description: Converts the date to format YYYYMMDD.çä çäModification Log:çä03/07/2007 CSC Illustrations ILLUS001  Modified function for performanceçä10/31/2007 CSC Initial Calculation/Ruleçä
003f49a8 -2 -2
Description: Checks that Key2 exists in table lookup
003f4b98 -2 -2
Description: Checks that Key3 exists in table lookup
003f4e18 -2 -2
Description: Checks that Key4 exists in table lookup
003f4f78 -2 -2
Description: Checks that Key5 exists in table lookup
01e607b0 -2 -2
Description: Checks that Key6 exists in table lookup
01e605a8 -2 -2
Description: Checks that Key7 exists in table lookup
01e60cf0 -2 -2
Description: Checks that Key8 exists in table lookup
01e60cf1 -2 -2
Description: Checks that Key9 exists in table lookup
01e60cf2 -2 -2
Description: Checks that Key10 exists in table lookup
;Offset=00000000
