;1	08.12.2016 13:33:06	jlawrie2	
X0 1c43ca8 0 1c445d8 0 0 0 0

X0 1c445d8 1c43ca8 1c44670 0 0 0 0
--All test cases--
X1 1c44670 1c445d8 0 1c44758 0 0 2
FGRPDXIN(s)
FGRPDXIN("(EIA2PA!FGRPDXIN!19000101!35!1!1!1!1!1!**!01!2!A!1!1)")
0
X1 1c44758 1c445d8 0 1c44870 0 0 2
FCHGAMT(s)
FCHGAMT("(EIA2PA!FCHGAMT!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
10
X1 1c44870 1c445d8 0 1c449b0 0 0 2
FCHGPCT(s)
FCHGPCT("(EIA2PA!FCHGPCT!19000101!66!1!1!1!1!1!**!06!2!A!1!1)")
7
X1 1c449b0 1c445d8 0 1c44af8 0 0 2
FALLOW(s)
FALLOW("(EIA2PA!FALLOW!19000101!35!10!1!1!1!1!**!01!2!A!1!1)")
M
X1 1c44af8 1c445d8 0 1c44c50 0 0 2
FFREEPCT(s)
FFREEPCT("(EIA2PA!FFREEPCT!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
5
X1 1c44c50 1c445d8 0 0 0 0 2
FFREEMO(s)
FFREEMO("(EIA2PA!FFREEMO!19000101!35!10!1!1!1!1!**!06!2!A!1!1)")
0
O0 1c43b64 0 0 0 0 0 0

E0 1c43bd0 0 0 0 0 0 0

L0 1c43c3c 0 0 0 0 0 0

B0 1c43dec 0 0 0 0 0 0

P3 1c43d14 0 1c44ec8 0 0 0 2

--description
Equity Indexed Annuity product's full surrender rates model.çä çäRate types include (but not limited to):çä - surrender grace period after crossing anniv (FGRPDXIN)çä - full surrender charge amount (FCHGAMT)çä - full surrender charge percentage (FCHGPCT)çä - frequency of charge free withdrawal amounts allowed (FALLOW)çä - percentage of cash value which is charge free (FFREEPCT)çä - number of months of interest penalty free (FFREEMO)
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.2.1"
P13 1c44ec8 1c43d14 1cd0820 0 0 0 2
Equity Indexed Annuity rates - Full Surrender Charges
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Rate tables model for REIA2PA plan"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"REIA2PA_FULLSURR.PMS"
OUTPUT Source Version Number
"1"
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 1cd0820 1c44ec8 0 0 0 0 2
EIA2PA Plan
IncType
mandatory
IncRule

IncValue

F0 1c43d80 0 1c44f40 0 0 0 0

F1 1c44f40 1c43d80 1cd0d48 0 0 0 2
--Rate Types--
Funktion

F1 1cd0d48 1c44f40 1cd0e28 1c46010 0 0 2
-- Full Surrender Rate Types --
Funktion

F1 1cd0e28 1cd0d48 0 1c45100 0 0 2
FGRPDXIN(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Grace Period Xin Lookup'(s)çä)
F1 1c45100 1cd0d48 0 1c45220 0 0 2
FCHGAMT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Charge Amount Lookup'(s)çä)
F1 1c45220 1cd0d48 0 1c45428 0 0 2
FCHGPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Charge Percent Lookup'(s)çä)
F1 1c45428 1cd0d48 0 1c455b0 0 0 2
FALLOW(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Allow Lookup'(s)çä)
F1 1c455b0 1cd0d48 0 1c457e0 0 0 2
FFREEPCT(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Free Percent Lookup'(s)çä)
F1 1c457e0 1cd0d48 0 1c45a18 0 0 2
FFREEMO(s)
Funktion
IF ('Parm Validation'(V_("Band_Code";"Duration");s) ; çä  "NoRateFound" ; çä   // Validation for existing Rates...çä'FULLSURR Free Months Lookup'(s)çä)
F1 1c45a18 1cd0d48 1c45ba0 0 0 0 2
-- Select Period --
Funktion

F1 1c45ba0 1c45a18 0 1c45df0 0 0 2
FULLSURR Select Period(s)
Funktion
IF (EXISTS('TABLE FSURR Select Period';SetParameter("Rate_Type";s)) ; çä  'TABLE FSURR Select Period'[SetParameter("Rate_Type";s)] ; çä  0çä)
F1 1c45df0 1c45a18 0 0 0 0 2
FULLSURR Select Ultimate Lookup Column(s)
Funktion
IF (SetParameter("Duration";s) <= 'FULLSURR Select Period'(s) ; çä  "Year_" & SetParameter("Duration";s) ; çä  "Ultimate"çä)
F1 1c46010 1c44f40 1c461d0 0 0 0 2
-- Table Access --
Funktion

F1 1c461d0 1c46010 0 1c46550 0 0 2
FULLSURR Grace Period Xin Lookup(s)
Funktion
LOOKUPX('TABLE FGRPDXIN';'FULLSURR Access Table ID Key'(s); // select periodçä'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);'FULLSURR Access Band Code Key'(s);SetParameter("Issue_Age";s);'FULLSURR Select Ultimate Lookup Column'(s))
F1 1c46550 1c46010 0 1c468c8 0 0 2
FULLSURR Charge Amount Lookup(s)
Funktion
LOOKUPX('TABLE FCHGAMT';'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);'FULLSURR Access Band Code Key'(s);SetParameter("Issue_Age";s);'FULLSURR Select Ultimate Lookup Column'(s))
F1 1c468c8 1c46010 0 1c46c48 0 0 2
FULLSURR Charge Percent Lookup(s)
Funktion
LOOKUPX('TABLE FCHGPCT';'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);'FULLSURR Access Band Code Key'(s);SetParameter("Issue_Age";s);'FULLSURR Select Ultimate Lookup Column'(s))
F1 1c46c48 1c46010 0 1c46fd8 0 0 2
FULLSURR Allow Lookup(s)
Funktion
LOOKUPX('TABLE FALLOW';'FULLSURR Access Table ID Key'(s); // select periodçä'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);'FULLSURR Access Band Code Key'(s);SetParameter("Issue_Age";s);'FULLSURR Select Ultimate Lookup Column'(s))
F1 1c46fd8 1c46010 0 1c47250 0 0 2
FULLSURR Free Percent Lookup(s)
Funktion
LOOKUPX('TABLE FFREEPCT';'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);'FULLSURR Access Band Code Key'(s);SetParameter("Issue_Age";s);'FULLSURR Select Ultimate Lookup Column'(s))
F1 1c47250 1c46010 0 1c475f0 0 0 2
FULLSURR Free Months Lookup(s)
Funktion
LOOKUPX('TABLE FFREEMO';'FULLSURR Access Table ID Key'(s); // Ultimate periodçä'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);'FULLSURR Access Band Code Key'(s);SetParameter("Issue_Age";s);'FULLSURR Select Ultimate Lookup Column'(s))
F1 1c475f0 1c46010 1c477e8 0 0 0 2
-- Build Access Keys --
Funktion

F1 1c477e8 1c475f0 0 1c47a20 0 0 2
FULLSURR Access Table ID Key(s)
Funktion
SetParameter("Table_Code";s)
F1 1c47a20 1c475f0 0 1c47e28 0 0 2
FULLSURR Access ChargeBasedOn Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);SetParameter("Rule_Code";s)) ; çä   // Table exists, use ChargeBasedOn value in searchçäSetParameter("Rule_Code";s) ; çä   // Else table does not exist, use wildcardçäIF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);"*") ; çä     // Return the wildcard as the search parameterçä"*" ; çä     // Else no matchçä"nomatch"çä  )çä)
F1 1c47e28 1c475f0 0 1c481d8 0 0 2
FULLSURR Access Jurisdiction Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);SetParameter("State_Code";s)) ; çä  SetParameter("State_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c481d8 1c475f0 0 1c485d0 0 0 2
FULLSURR Access Gender Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'Gender Code Key'(s)) ; çä  'Gender Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c485d0 1c475f0 0 1c48a90 0 0 2
FULLSURR Access Smoke Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'Smoke Code Key'(s)) ; çä  'Smoke Code Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48a90 1c475f0 0 1c48fc0 0 0 2
FULLSURR Access Band Code Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);SetParameter("Band_Code";s)) ; çä  SetParameter("Band_Code";s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'FULLSURR Access Underwriting Class Key'(s);'FULLSURR Access Smoke Code Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
F1 1c48fc0 1c475f0 0 0 0 0 2
FULLSURR Access Underwriting Class Key(s)
Funktion
IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);'Underwriting Class Key'(s)) ; çä  'Underwriting Class Key'(s) ; çä  IF (EXISTS(table("TABLE " & SetParameter("Rate_Type";s));'FULLSURR Access Table ID Key'(s);'FULLSURR Access ChargeBasedOn Key'(s);'FULLSURR Access Jurisdiction Key'(s);'FULLSURR Access Gender Key'(s);"*") ; çä    "*" ; çä    "nomatch"çä  )çä)
A0 1c43e58 0 0 0 0 0 0

T0 1c43ec4 0 1c495a8 0 0 0 0

T1 1c495a8 1c43ec4 1c497e0 0 0 0 2
--Tables--
key
value
T7 1c497e0 1c495a8 0 1c4a328 0 0 17
TABLE FGRPDXIN
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
01
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
T7 1c4a328 1c495a8 0 1c4ac78 0 0 17
TABLE FCHGAMT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
100
90
80
70
50
40
25
10
10
01
*
*
*
*
*
*
66
100
90
80
70
45
40
25
10
10
06
*
*
*
*
*
*
18
100
90
80
70
40
30
25
10
10
06
*
*
*
*
*
*
66
100
90
80
60
35
30
25
10
10
13
*
*
*
*
*
*
18
100
90
80
70
40
30
25
10
10
13
*
*
*
*
*
*
66
100
90
80
60
35
30
25
10
10
T7 1c4ac78 1c495a8 0 1c4b7e0 0 0 19
TABLE FCHGPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Year_9
Year_10
Ultimate
01
*
*
*
*
*
*
18
9
9
8
7
6
5
4
3
2
1
0
01
*
*
*
*
*
*
66
7
6
5
4
3
2
1
0
0
0
0
06
*
*
*
*
*
*
18
9
9
8
7
6
5
4
3
2
1
0
06
*
*
*
*
*
*
66
7
6
5
4
3
2
1
0
0
0
0
13
*
*
*
*
*
*
18
9
9
8
7
6
5
4
3
2
1
0
13
*
*
*
*
*
*
66
7
6
5
4
3
2
1
0
0
0
0
T7 1c4b7e0 1c495a8 0 1c4c140 0 0 17
TABLE FALLOW
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
01
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
06
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
18
M
M
M
M
M
M
M
M
M
13
*
*
*
*
*
*
66
M
M
M
M
M
M
M
M
M
T7 1c4c140 1c495a8 0 1c4caa8 0 0 17
TABLE FFREEMO
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
01
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
06
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
18
0
0
0
0
0
0
0
0
0
13
*
*
*
*
*
*
66
0
0
0
0
0
0
0
0
0
T7 1c4caa8 1c495a8 0 1c4d418 0 0 17
TABLE FFREEPCT
TableIdentity
ChargeBasedOn
Jurisdiction
Gender_Code
Underwriting_Class
Smoke_Code
Band_Code
low_age
Year_1
Year_2
Year_3
Year_4
Year_5
Year_6
Year_7
Year_8
Ultimate
01
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
01
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
06
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
06
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
13
*
*
*
*
*
*
18
9
9
9
9
9
9
9
5
5
13
*
*
*
*
*
*
66
9
9
9
9
9
9
9
5
5
T7 1c4d418 1c495a8 0 0 0 0 2
TABLE FSURR Select Period
rate_type
sel_period
FGRPDXIN
8
FCHGAMT
8
FCHGPCT
10
FALLOW
8
FFREEPCT
8
FFREEMO
8
I0 1c43f30 0 4f1681f 0 0 0 0

I0 4f1681f 1c43f30 0 0 0 0 0
RateModelFunctions.pms
-
O0
E0
L0
B0
P2
1c44ec8
1cd0820
F17
1c44f40
1cd0d48
1c46010
1c461d0
1c46550
1c468c8
1c46c48
1c46fd8
1c47250
1c475f0
1c477e8
1c47a20
1c47e28
1c481d8
1c485d0
1c48a90
1c48fc0
A0
T8
1c495a8
1c497e0
1c4a328
1c4ac78
1c4b7e0
1c4c140
1c4caa8
1c4d418
!20
1cd0e28 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the number of days following the policy anniversary that the surrender grace period is applicable, from internal table T_FGRPDXIN..çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c45100 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender flat amount, from internal table T_FCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c45220 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender percentage, from internal table T_FCHGPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c45428 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender frequency of charge free withdrawal amounts allowed, from internal table T_FALLOW.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c455b0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender percentage of cash value that is charge free, from internal table T_FFREEPCT.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c457e0 -2 -2
Description: This function is called by late referencing from the Access Model and returns, the full surrender number of months of interest penalty free, from internal table T_FFREEMO.çäValidation is performed on the Band_Code and Duration.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c45ba0 -2 -2
Description: This function returns, the full surrender select period by rate type, from internal table T_FSURR_Select_Period.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c45df0 -2 -2
Description: Checks to see if the duration is still in the select period or not. Returns the column name to use for rate table lookup.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c461d0 -2 -2
Description: This function performs a look up in internal table T_FGRPDXIN and returns the number of days following the policy anniversary that the surrender grace period is applicable. The look up is based on a select and ultimate basis and any or all of the Key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c46550 -2 -2
Description: This function performs a look up in internal table T_FCHGAMT and returns the full surrender flat amount. The look up is based on a select and ultimate basis and any or all of the Key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c468c8 -2 -2
Description: This function performs a look up in internal table T_FCHGPCT and returns the full surrender percentage. The look up is based on a select and ultimate basis and any or all of the Key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c46c48 -2 -2
Description: This function performs a look up in internal table T_FALLOW and returns the full surrender frequency of charge free withdrawal amounts allowed. The look up is based on a select and ultimate basis and any or all of the Key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c47250 -2 -2
Description: This function performs a look up in internal table T_FFREEMO and returns the full surrender number of months of interest penalty free. The look up is based on a select and ultimate basis and any or all of the Key information between the charge based on rule and issue age can contain wildcards (*).  Each of the wildcardable parms will check for a match on the input value, but if that exact match is not found, then that parm will be overridden with the wildcard value (*).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c477e8 -2 -2
Description: This function parses and returns the table identity code from the passed serialized vector string (s).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c47a20 -2 -2
Description: This function parses and returns the charge based on rule code from the passed serialized vector string (s).çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c47e28 -2 -2
Description: This function parses and validates the jurisdiction code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c481d8 -2 -2
Description: This function parses and validates the gender code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c485d0 -2 -2
Description: This function parses and validates the smoke code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c48a90 -2 -2
Description: This function parses and validates the band code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
1c48fc0 -2 -2
Description: This function parses and validates the underwriting class code from the passed serialized vector string (s). A test is performed, using all established parms to this position, to insure the existence of the parm value, and if present, returns the original parm value.  If the exact parm value is not within the table, an attempt is made using the wildcard value (*).  If the wildcard entry is located the wildcard value (*) is returned.  If neither test is successful, a no match value is returned.çä çäModification Log:çä10/31/2007 Initial Calculation/Rule
;Offset=00000000
