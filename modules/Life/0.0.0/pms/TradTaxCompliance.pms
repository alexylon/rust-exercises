;1	08.12.2016 13:29:32	jlawrie2	
X0 1f2d6ac 0 1efc860 0 0 0 0

X0 1efc860 1f2d6ac 1e10358 0 0 0 0
-- Unit Test Cases - TaxCompliance --
X0 1e10358 1efc860 1e103f8 0 0 0 0
-- Calculation Functions --
X18 1e103f8 1e10358 0 1f4f478 0 0 2
TaxCompliance Policy Specified Amount
'TaxCompliance Policy Specified Amount'("C")
1000000
INPUT Policy number of Coverage
1
INPUT Policy Coverage CurrentNumberOfUnits
1000
INPUT Policy Coverage ValuePerUnit
1000
INPUT TransEffDate
01/01/2006
INPUT Policy Coverage LifeCovStatus
1
INPUT Policy Coverage EffDate
01/01/2006
INPUT Policy Coverage TermDate
12/31/2999
INPUT Policy Coverage IndicatorCode
1
INPUT Policy Coverage ProductCode
UL1PA
INPUT Policy EffDate
01/01/2006
INPUT Calling System
I1
INPUT Policy CarrierCode
00
INPUT Policy Jurisdiction
1000
INPUT Policy ProductCode
UL1PA
INPUT Calling Program

INPUT Policy ProductVersionCode

INPUT Policy Coverage ProductVersionCode
1
X16 1f4f478 1e10358 0 1f4fc38 0 0 2
TaxCompliance Policy Maturity Duration
'TaxCompliance Policy Maturity Duration'("C")
65
INPUT Policy ProductCode
UL1PA
INPUT TransEffDate
01/01/2006
INPUT Calling System
I1
INPUT Policy CarrierCode
00
INPUT Policy Jurisdiction
51
INPUT Policy Coverage IndicatorCode
1
INPUT Policy Coverage ProductCode
UL1PA
INPUT Policy EffDate
01/01/2006
INPUT Policy LifeParticipant IssueAge
35
INPUT Policy Coverage EffDate
01/01/2006
INPUT Calling Program

INPUT Policy ProductVersionCode

INPUT Policy Coverage ProductVersionCode
1
INPUT Policy number of Coverage
1
INPUT Policy Coverage TermDate
12/31/2106
X16 1f4fc38 1e10358 0 1e10710 0 0 2
TaxCompliance Policy Maturity Duration
'TaxCompliance Policy Maturity Duration'("C")
65
INPUT Policy ProductCode
UL2PA
INPUT TransEffDate
01/01/2006
INPUT Calling System
I1
INPUT Policy CarrierCode
00
INPUT Policy Jurisdiction
51
INPUT Policy Coverage IndicatorCode
1
INPUT Policy Coverage ProductCode
UL2PA
INPUT Policy EffDate
01/01/2006
INPUT Policy LifeParticipant IssueAge
35
INPUT Policy Coverage EffDate
01/01/2006
INPUT Calling Program

INPUT Policy ProductVersionCode

INPUT Policy Coverage ProductVersionCode
1
INPUT Policy number of Coverage
1
INPUT Policy Coverage TermDate
12/31/2106
X9 1e10710 1e10358 0 1e10990 0 0 2
TaxCompliance Policy Interest Rate
'TaxCompliance Policy Interest Rate'("7PP")
4
INPUT Policy ProductCode
UL1PA
INPUT TransEffDate
01/01/2006
INPUT Calling System
I1
INPUT Policy CarrierCode
00
INPUT Policy Jurisdiction
51
INPUT Policy EffDate
01/01/2006
INPUT Calling Program

INPUT Policy ProductVersionCode

X1 1e10990 1e10358 0 29d425d8 0 0 2
TaxCompliance Tolerance(type)
'TaxCompliance Tolerance'("CV")
0.01
X37 29d425d8 1e10358 0 0 0 0 2
--TaxCompliance WL 7 Pay Premium(yearIndex)
0//'TaxCompliance WL 7 Pay Premium'(1)
0
INPUT Policy number of Coverage
1
INPUT Policy CarrierCode
00
INPUT Policy ProductCode
WL1PA
INPUT Policy Coverage ProductCode
WL1PA
INPUT Calling Program
VPMSTEST
INPUT Calling System
I1
Input TransEffDate
01/01/2006
INPUT Policy Number Of CoverageOption
0
INPUT Policy LifeParticipant IssueAge
35
INPUT Policy Coverage EffDate
01/01/2006
INPUT Policy ProductVersionCode

INPUT Policy Jurisdiction
51
INPUT Policy Coverage IndicatorCode
1
INPUT Policy Coverage ProductVersionCode
1
INPUT Policy EffDate
01/01/2006
INPUT Policy LifeParticipant IssueGender
1
INPUT Policy LifeParticipant UnderwritingClass
1
INPUT Policy LifeParticipant TobaccoPremiumBasis
1
INPUT Policy LifeParticipant TempTableRating
1
INPUT Policy LifeParticipant PermTableRating
1
INPUT Policy Number of LifeParticipant
1
INPUT Policy LifeParticipant PermFlatExtraAmount
0
INPUT Policy LifeParticipant TempFlatExtraAmount
0
INPUT Policy Coverage CurrentNumberOfUnits
500
INPUT Policy Coverage LifeCovTypeCode
1
INPUT Policy Coverage BandCode
0
INPUT Policy CoverageOption OptionNumberOfUnits
0
INPUT Message Language
9
INPUT Illus Face Amt Solve DesignType
1000500001
INPUT Illus FaceAmtDesignType
1000500001
INPUT Policy Coverage LifeCovStatus
1
INPUT Policy Coverage RequestedEffDur
1
INPUT Policy LifeUSA AccumValue1035
0
INPUT Policy Life CashValueAmt
0
INPUT Policy Coverage RequestedMaturityDur
20
INPUT Policy Coverage CurrentAmt
0
O0 1f2d55c 0 0 0 0 0 0

E0 1f2d5cc 0 0 0 0 0 0

L0 1f2d63c 0 0 0 0 0 0

B0 1f2d7fc 0 0 0 0 0 0

P3 1f2d71c 0 1e112d8 0 0 0 2

--description
The Tax Compliance model supports calculations such as:çä- guideline annual premiums (GLP)çä- guideline single premiums (GSP)çä- cash value accumulation test net single premiums (7NP)çä- 7-pay premium calculations (7PP)çä çäPremiums are computed using an iterative solve method, implemented in a single iterative solve function, which is used for the above regulatory premiums.çäThe cash value function used by the iterative solve function uses varying assumptions for each premium solve type.çä çä7-pay calculations support an iterative solve methodology for 7-pay premiums.  This includes support for calculation of 7-pay premiums at a contract level for a newly issued contract.  The model also includes support for adjustments to the 7-pay premium limits for inforce contract changes that trigger material change calculations, and decreases to the 7-pay limits for 'reductions in benefits'.çäSupport for adjustments to the 7-pay premium limits for 1035 exchanges that trigger material change calculations are also included. çä çäCalculations support DEFRA Cash Value Accumulation Test (CVAT) Net Single Premiums (NSP), and the implied corridor factors under the CVAT test.  A present value method for determining the CVAT NSPs for the base product and optionally for Qualified Additional Benefits (QABs) are utilized.çä çäNote: Support for testing 7-pay premiums paid toward the limits for purposes of determining if the contract has passed or failed the 7-pay test are outside of the scope of the product calculation models, and would be included in the appropriate consuming admin system.çä çäRELEASE LOG:çäRELEASE 1301 - SCARAB/JIRA issues PAD1213çäRELEASE 1101 - PAC013 calcType
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.5.4"
P14 1e112d8 1f2d71c 1e119c0 0 0 0 2
Tax Compliance
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"TaxComplianceçä Guideline calculations (single=GSP, level=GLP)çä 7-pay calculations (7-pay=7PP, 7-pay NSP=7PN)çä CVAT NSP calculations"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"PA"
OUTPUT Source Version File
"TaxCompliance.pms"
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Number
'GEN VersionInfo'
Output Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Time Stamp
now("M/D/Y  H:M")
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P7 1e119c0 1e112d8 0 0 0 0 2
CVAT calculations
IncType
mandatory
IncRule

IncValue

OUTPUT Policy NSP Base
SUMX(cov;0;'Policy Number of Coverage'('GEN Vector Blank';TransEffDur) - 1;'TaxCompliance Cov NSP'('GEN Vector Blank';'TaxCompliance Attained Age'('Policy LifeParticipant IssueAge'('GEN Vector Blank';#cov;0);'Policy Coverage EffDate'('GEN Vector Blank';#cov);TransEffDate);'Duration Year'(TransEffDate;'Policy EffDate');#cov) * 'Policy Coverage CurrentNumberOfUnits'('GEN Vector Blank';#cov;TransEffDur))
OUTPUT Policy NSP Rider
0
OUTPUT Policy NSP Base Array(age)
SUMX(cov;0;'Policy Number of Coverage'('GEN Vector Blank';TransEffDur) - 1;'TaxCompliance Cov NSP'('GEN Vector Blank';age;'Duration Year'(TransEffDate;'Policy EffDate') + age - 'Policy LifeParticipant IssueAge'('GEN Vector Blank';#cov;0);#cov) * 'Policy Coverage CurrentNumberOfUnits'('GEN Vector Blank';#cov;TransEffDur))
OUTPUT Policy NSP Rider Array(age)
0
F0 1f2d78c 0 1e11e18 0 0 0 0

F1 1e11e18 1f2d78c 1e11ee0 1e18ff0 0 0 2
:TaxCompliance
Funktion

F1 1e11ee0 1e11e18 1e11fb8 1e12790 0 0 2
-- Policy Functions --
Funktion

F1 1e11fb8 1e11ee0 0 1e122f8 0 0 2
TaxCompliance Policy Specified Amount(calcType)
Funktion
SUMX(cov;0;'Policy Number of Coverage'(calcType;TransEffDur) - 1;IF ('Std Coverage Is InForce'(calcType;#cov;TransEffDate;TransEffDur) && ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#cov)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#cov))) ; çä   /*Include specified amount in total for policy*/ 'Policy Coverage CurrentNumberOfUnits'(calcType;#cov;TransEffDur) * 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;#cov);#cov;'Policy EffDate') ; çä  0 // Else return zero for coverageçäçä))
F1 1e122f8 1e11ee0 0 1e123e0 0 0 2
TaxCompliance Policy Maturity Duration(calcType)
Funktion
MAX(95;MIN(100;'PI CoverageProduct MaturityAge'(calcType;'Policy ProductCode';0;'Policy EffDate'))) - 'Policy LifeParticipant IssueAge'(calcType;0;0)
F1 1e123e0 1e11ee0 0 1e124d0 0 0 2
TaxCompliance Policy Premium Duration(calcType)
Funktion
CASE('CalcType Element'(calcType;5);çä   /*Calculation type*/ "GSP";"7PN" : 1;çä   /*GSP or 7-pay NSP*/ "7PP" : 7;çä   /*7-pay premium*/  : 'TaxCompliance Policy Maturity Duration'(calcType) /*else GLP*/ )çä
F1 1e124d0 1e11ee0 0 1e126a8 0 0 2
TaxCompliance Policy Interest Rate(calcType)
Funktion
MAX('ACCS CalcRule Interest Rate'(calcType;TransEffDate); //'Addl Product Info'('Policy ProductCode'; TransEffDate; v_("IntRate"; calcType));çä'PI PolicyProduct GuarIntRate'('Policy ProductCode';'Policy EffDate'))
F1 1e126a8 1e11ee0 0 0 0 0 2
TaxCompliance Total Coverage Amount(calcType)
Funktion
'TaxCompliance Policy Specified Amount'(calcType) + SUMX(coverageIndex;0;'Policy Number of Coverage'(calcType;TransEffDur) - 1;IF ( /*Coverage is in force, and is rider*///'Coverage Is InForce'(calcType; #coverageIndex; TransEffDate; TransEffDur) çä 'Std Coverage Is InForce'(calcType;#coverageIndex;TransEffDate;TransEffDur) && ('IndicatorCode is Integrated'('Policy Coverage IndicatorCode'(calcType;#coverageIndex)) || 'IndicatorCode is Rider'('Policy Coverage IndicatorCode'(calcType;#coverageIndex))) ; çä   /*Rider face amount*/ 'Policy Coverage CurrentNumberOfUnits'(calcType;#coverageIndex;TransEffDur) * 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;#coverageIndex);#coverageIndex;'Policy EffDate') ; çä   // Else zeroçä0çä))
F1 1e12790 1e11e18 1e12848 1e12928 0 0 2
-- Iteration functions --
Funktion

F1 1e12848 1e12790 0 0 0 0 2
TaxCompliance Tolerance(type)
Funktion
CASE(TOUPPER(type);çä   /*Tolerance type*/ "CV" : 0.01;çä   /*Cash value*/ "P" : 0.001;çä   /*Premium*/  : 0)çä
F1 1e12928 1e11e18 1e12ae8 1e14dd8 0 0 2
-- CVAT Functions --
Funktion

F1 1e12ae8 1e12928 1e12fc0 0 0 0 2
TaxCompliance Cov NSP(calcType; age; yearIndex; coverageIndex)
Funktion
IF (age >= 'PI CoverageProduct MaturityAge'(calcType;'Policy Coverage ProductCode'(calcType;coverageIndex);coverageIndex;'Policy EffDate') ; çä  'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;coverageIndex);coverageIndex;'Policy EffDate') ; çä   /*Discount specified amount for a year*/ 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;coverageIndex);coverageIndex;'Policy EffDate') * 'ACT V Discount Factor'('TaxCompliance InterestRate') //'Vector TCOM Interest Function'çä * 'TaxCompliance Mort Rate'(calcType;age;yearIndex;coverageIndex) / 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;coverageIndex);coverageIndex;'Policy EffDate') + 'ACT V Discount Factor'('TaxCompliance InterestRate') //'Vector TCOM Interest Function' çä * (1 - 'TaxCompliance Mort Rate'(calcType;age;yearIndex;coverageIndex) / 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;coverageIndex);coverageIndex;'Policy EffDate')) * 'TaxCompliance Cov NSP'(calcType;age + 1;yearIndex + 1;coverageIndex)çä) //IF (/*Projection past maturity age?*/age >= 'PI CoverageProduct MaturityAge'(calcType; 'Policy Coverage ProductCode'(calcType;coverageIndex); coverageIndex; 'Policy EffDate'); çä//â/*Return Specified amount for coverage*/çä//â'PI CoverageProduct ValuePerUnit'(calcType; 'Policy Coverage ProductCode'(calcType;coverageIndex); coverageIndex; 'Policy EffDate');çä//âçä//â/*Discount specified amount for a year*/çä//â'PI CoverageProduct ValuePerUnit'(calcType; 'Policy Coverage ProductCode'(calcType;coverageIndex); coverageIndex; 'Policy EffDate') çä//â* 'Vector TCOM Interest Function' çä//      â* 'TaxCompliance Mort Rate'(calcType; age; yearIndex; coverageIndex) çä//â/ 'PI CoverageProduct ValuePerUnit'(calcType; 'Policy Coverage ProductCode'(calcType;coverageIndex); coverageIndex; 'Policy EffDate') çä//çä//      â+ 'Vector TCOM Interest Function' çä//      â* ( 1 - 'TaxCompliance Mort Rate'(calcType;age; yearIndex; coverageIndex) çä//â    / 'PI CoverageProduct ValuePerUnit'(calcType; 'Policy Coverage ProductCode'(calcType;coverageIndex); coverageIndex; 'Policy EffDate')çä//                 ) çä//      â   * 'TaxCompliance Cov NSP'(calcType;  age + 1; yearIndex + 1; coverageIndex ) çä//)ä
F1 1e12fc0 1e12ae8 0 1e13078 0 0 2
TaxCompliance Mort Rate(calcType; age; yearIndex; coverageIndex)
Funktion
IF ( /*More than one life on policy*/ 'Policy Number of LifeParticipant'(calcType;coverageIndex) > 1 ; çä   // joint life çä'FRASIER Joint Survivor Annual Rate'('CalcType CVAT'(calcType);coverageIndex;"MORT";yearIndex;1;'GEN Vector Blank') ; çä   /*Single life*/ MIN('TaxCompliance qx'(calcType;age;coverageIndex) * 'Std Coverage Table Rating factor'(calcType;coverageIndex;yearIndex;0) + 'Std Coverage Total Flat Extra'(calcType;coverageIndex;yearIndex;0);999.9999999)çä)
F1 1e13078 1e12ae8 0 1e13260 0 0 2
TaxCompliance qx(calcType; age; coverageIndex)
Funktion
Rate('Policy Coverage ProductCode'(calcType;coverageIndex);"MORT";TransEffDate;V_('Policy LifeParticipant IssueAge'(calcType;coverageIndex;0);age - 'Policy LifeParticipant IssueAge'(calcType;coverageIndex;0) + 1;'Policy LifeParticipant IssueGender'(calcType;coverageIndex;0);'Policy LifeParticipant UnderwritingClass'(calcType;coverageIndex;0;TransEffDur);'Policy LifeParticipant TobaccoPremiumBasis'(calcType;coverageIndex;0;TransEffDur);'Policy Coverage BandCode'(calcType;coverageIndex;TransEffDur);'GEN Vector Blank';'GEN Vector Blank';'GEN Vector Blank';'GEN Vector Blank'; // parameters not used for mortality ratesçä'PI PolicyProduct MortalityOrMorbidityTable'('Policy Coverage ProductCode'(calcType;coverageIndex);'Policy EffDate');'PI PolicyProduct AgeCalculationType'('Policy Coverage ProductCode'(calcType;coverageIndex);'Policy EffDate'))) / 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;coverageIndex);coverageIndex;'Policy EffDate')
F1 1e13260 1e12ae8 0 1e135c0 0 0 2
TaxCompliance Attained Age(iss_age; iss_date; effectiveDate)
Funktion
iss_age + 'Duration Year'(effectiveDate;'Policy EffDate') - 'Duration Year'(iss_date;'Policy EffDate')
F1 1e135c0 1e12ae8 0 4f2f91f8 0 0 2
TaxCompliance InterestRate
Funktion
MAX('ACCS CalcRule Interest Rate'('CalcType CVAT'('GEN Vector Blank');TransEffDate);'PI PolicyProduct GuarIntRate'('Policy ProductCode';'Policy EffDate') * 0.01)
F1 4f2f91f8 1e12ae8 0 0 0 0 2
--Vector TCOM Interest Function
Funktion
1 / ( 1 + ( 'TaxCompliance InterestRate' * 0.01) )
F1 1e14dd8 1e11e18 1e15038 1e164a0 0 0 2
-- Illustration Policy Change Functions --
Funktion

F1 1e15038 1e14dd8 1e15130 1e15dc0 0 0 2
TaxCompliance Policy Changes for Guidelines(calcType; yearIndex)
Funktion
'TaxCompliance Specified Amount Changes'(calcType;yearIndex) + 'TaxCompliance Death Benefit Option Changes'(calcType;yearIndex) + 'TaxCompliance Rider Add or Terminate'(calcType;yearIndex) + 'TaxCompliance Benefit Add or Terminate'(calcType;yearIndex)
F1 1e15130 1e15038 0 1e153a8 0 0 2
TaxCompliance Specified Amount Changes(calcType; yearIndex)
Funktion
 //return a 1 for each year where the total policy specified amount increases,çä//a 2 for each year where the total policy specified amount decreases,çä//and a 0 for each year with no activity.  Policy year 1 will always be a 1.çäIF (yearIndex = 1 ; çä  1 ; çä  IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'Policy Coverage CurrentNumberOfUnits'(calcType;#coverageIndex;yearIndex - 1)) < SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'Policy Coverage CurrentNumberOfUnits'(calcType;#coverageIndex;yearIndex)) ; çä    1 ; çä    IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'Policy Coverage CurrentNumberOfUnits'(calcType;#coverageIndex;yearIndex - 1)) > SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'Policy Coverage CurrentNumberOfUnits'(calcType;#coverageIndex;yearIndex)) ; çä      2 ; çä      0çä    )çä)çä)
F1 1e153a8 1e15038 0 1e156c0 0 0 2
TaxCompliance Death Benefit Option Changes(calcType; yearIndex)
Funktion
 //return a 1 for each year where the policy death benefit option does not,çä//equal previous years' death benefit option, and a 0 for each year there is noçä//change.  Policy year 1 will always be a 1.çäIF (yearIndex = 1 ; çä  1 ; çä  IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('Policy Coverage DeathBenefitOptType'(calcType;#coverageIndex;yearIndex - 1) <> 'Policy Coverage DeathBenefitOptType'(calcType;#coverageIndex;yearIndex) ; çä    1 ; çä    0çä  )) > 0 ; çä  1 ; çä  0çä)çä)
F1 1e156c0 1e15038 0 1e15940 0 0 2
TaxCompliance Rider Add or Terminate(calcType; yearIndex)
Funktion
 //return a 1 for each year where the a rider is added, a 2 for each year whereçä//a rider is terminated, and 0 if there are no changes.çäIF (yearIndex = 1 ; çä  1 ; çä  IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('Policy Coverage RequestedEffDur'(calcType;#coverageIndex) = yearIndex ; çä    1 ; çä    0çä  )) > 0 ; çä  1 ; çä  IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('Policy Coverage RequestedMaturityDur'(calcType;#coverageIndex) = yearIndex && 'PIDRV CoverageProduct MaturityDuration'(calcType;'Policy EffDate';#coverageIndex) <> yearIndex ; çä    1 ; çä    0çä  )) > 0 ; çä  2 ; çä  0çä)çä)çä)
F1 1e15940 1e15038 0 0 0 0 2
TaxCompliance Benefit Add or Terminate(calcType; yearIndex)
Funktion
 //return a 1 for each year where the a Benefit is added, a 2 for each year whereçä//a Benefit is terminated, and 0 if there are no changes.çäIF (yearIndex = 1 ; çä  1 ; çä  IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;SUMX(covOptIndex;0;'Policy Number of CovOption'(calcType;#coverageIndex) - 1;IF ('Policy CovOption RequestedMaturityDur'(calcType;#coverageIndex;#covOptIndex) = yearIndex ; çä    1 ; çä    0çä  ))) > 0 ; çä  1 ; çä  IF (SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;SUMX(covOptIndex;0;'Policy Number of CovOption'(calcType;#coverageIndex) - 1;IF ('Policy CovOption RequestedMaturityDur'(calcType;#coverageIndex;#covOptIndex) = yearIndex && 'PIDRV CovOptionProduct MaturityDuration'(calcType;'Policy EffDate';#coverageIndex;#covOptIndex) <> yearIndex ; çä    1 ; çä    0çä  ))) > 0 ; çä  2 ; çä  0çä)çä)çä)
F1 1e15dc0 1e14dd8 1e16058 0 0 0 2
TaxCompliance Policy Changes for 7pay rec(calcType; yearIndex)
Funktion
IF ( /*At issue*/ yearIndex = 1 ; çä   /*Yes*/ 1 ; çä   /*No*/ IF ( /*Material Change*/ 'TaxCompliance Policy Changes for 7pay'(calcType;yearIndex) = 1 ; çä     /*Yes*/ yearIndex ; çä     /*No*/ IF ( /*Policy Decrease*/ 'TaxCompliance Policy Changes for 7pay'(calcType;yearIndex) = 2 ; çä       /*Yes*/ 'TaxCompliance Policy Changes for 7pay rec'(calcType;yearIndex - 1) ; çä       /*Otherwise no Changes*/ 'TaxCompliance Policy Changes for 7pay rec'(calcType;yearIndex - 1)çä    )çä)çä)
F1 1e16058 1e15dc0 0 0 0 0 2
TaxCompliance Policy Changes for 7pay(calcType; yearIndex)
Funktion
IF ( /*Check for first policy year*/ yearIndex = 1 ; çä  1 ; çä  IF ( /*Check for Material Changes*/ 'TaxCompliance Specified Amount Changes'(calcType;yearIndex) = 1 //â||çä//'TaxCompliance Death Benefit Option Changes'(calcType; yearIndex) = 1çä || 'TaxCompliance Rider Add or Terminate'(calcType;yearIndex) = 1 || 'TaxCompliance Benefit Add or Terminate'(calcType;yearIndex) = 1 ; çä     /*Yes*/ 1 ; çä     /*No*/ IF ( /*Check for decreases*/ 'TaxCompliance Specified Amount Changes'(calcType;yearIndex) = 2 //â||çä//'Std Death Benefit Option Changes'(yearIndex) = 1çä || 'TaxCompliance Rider Add or Terminate'(calcType;yearIndex) = 2 || 'TaxCompliance Benefit Add or Terminate'(calcType;yearIndex) = 2 ; çä       /*Yes*/ 2 ; çä      0çä    )çä)çä)
F1 1e164a0 1e11e18 1e16590 1e18328 0 0 2
-- WL Illustration Policy Change Functions
Funktion

F1 1e16590 1e164a0 1e16a08 1e16cc0 0 0 2
TaxCompliance Policy Changes for WL 7pay rec(calcType; yearIndex)
Funktion
IF ( /*At issue*/ yearIndex = 1 ; çä   /*Yes*/ 1 ; çä   /*No*/ IF ( /*Material Change*/ 'TaxCompliance Policy Changes for WL 7pay'(calcType;yearIndex) = 1 ; çä     /*Yes*/ yearIndex ; çä     /*No*/ IF ( /*Policy Decrease*/ 'TaxCompliance Policy Changes for WL 7pay'(calcType;yearIndex) = 2 ; çä       /*Yes*/ 'TaxCompliance Policy Changes for WL 7pay rec'(calcType;yearIndex - 1) ; çä       /*Otherwise no Changes*/ 'TaxCompliance Policy Changes for WL 7pay rec'(calcType;yearIndex - 1)çä    )çä)çä)
F1 1e16a08 1e16590 0 0 0 0 2
TaxCompliance Policy Changes for WL 7pay(calcType; yearIndex)
Funktion
IF ( /*Check for first policy year*/ yearIndex = 1 ; çä  1 ; çä  IF ( /*Check for Material Changes*/ 'TaxCompliance Outside PUAR Changes'(calcType;yearIndex) = 1 || 'TaxCompliance Inside PUAR Changes'(calcType;yearIndex) = 1 || 'TaxCompliance Rider Add or Terminate'(calcType;yearIndex) = 1 || 'TaxCompliance Benefit Add or Terminate'(calcType;yearIndex) = 1 ; çä     /*Yes*/ 1 ; çä     /*No*/ IF ( /*Check for decreases*/ 'TaxCompliance Outside PUAR Changes'(calcType;yearIndex) = 2 || 'TaxCompliance Inside PUAR Changes'(calcType;yearIndex) = 2 || 'TaxCompliance Rider Add or Terminate'(calcType;yearIndex) = 2 || 'TaxCompliance Benefit Add or Terminate'(calcType;yearIndex) = 2 ; çä       /*Yes*/ 2 ; çä      0çä    )çä)çä)
F1 1e16cc0 1e164a0 168c38ee 1e17658 0 0 2
TaxCompliance Outside PUAR Changes(calcType; yearIndex)
Funktion
 //return a 1 for each year where the outside PUAR increases,çä//a 2 for each year where the outside PUAR decreases,çä//and a 0 for each year with no activity.  çä//Policy year 1 will always be a 1.çäIF ( /*Policy year 1*/ yearIndex EQUAL 1 ; çä  1 ; çä  'TaxCompliance PUA FaceAmount Increase or Decrease Check'('TaxCompliance Sum Outside Coverage PUA FaceAmount'(calcType;yearIndex);'TaxCompliance Sum Outside Coverage PUA FaceAmount'(calcType;yearIndex - 1))çä)
F1 168c38ee 1e16cc0 0 0 0 0 2
TaxCompliance Sum Outside Coverage PUA FaceAmount(calcType; yearIndex)
Funktion
SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('TGTDB Coverage Is Outside PUAR'(calcType;#coverageIndex) ; çä  'TGTDB Proj Coverage PUA FaceAmount'('CalcType Current'(calcType);#coverageIndex;yearIndex;'TGTDB Vector BIRInputVector'('CalcType Current'(calcType);yearIndex;'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex));'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex)) ; çä  0çä))
F1 1e17658 1e164a0 4ddbe834 5380c7db 0 0 2
TaxCompliance Inside PUAR Changes(calcType; yearIndex)
Funktion
 //return a 1 for each year where the Inside PUAR increases once crossoverçä//has been achieved, a 2 for each year where the outside PUAR decreases and crossover still achieved,çä//and a 0 for each year with no activity.  Policy year 1 will always be a 1.çäIF ( /*Policy year 1*/ yearIndex = 1 ; çä  1 ; çä  IF ('Std BIR coverage exists'(calcType) && 'TGTDB Proj OYTCover'('CalcType Current'(calcType);yearIndex;'TGTDB Vector BIRInputVector'('CalcType Current'(calcType);yearIndex;'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex));'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex)) >= 0 ; çä    0 ; çä    'TaxCompliance PUA FaceAmount Increase or Decrease Check'('TaxCompliance Sum Inside Coverage PUA FaceAmount'(calcType;yearIndex);'TaxCompliance Sum Inside Coverage PUA FaceAmount'(calcType;yearIndex - 1))çä  )çä)
F1 4ddbe834 1e17658 0 0 0 0 2
TaxCompliance Sum Inside Coverage PUA FaceAmount(calcType; yearIndex)
Funktion
SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('TGTDB Coverage Is Inside PUAR'(calcType;#coverageIndex) ; çä  'TGTDB Proj Coverage PUA FaceAmount'('CalcType Current'(calcType);#coverageIndex;yearIndex;'TGTDB Vector BIRInputVector'('CalcType Current'(calcType);yearIndex;'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex));'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex)) ; çä  0çä))
F1 5380c7db 1e164a0 0 0 0 0 2
TaxCompliance PUA FaceAmount Increase or Decrease Check(prev; curr)
Funktion
IF ( /*Increase*/ (prev > curr) ; çä  1 ; çä  IF ( /*Decrease*/ (prev < curr) ; çä    2 ; çä    0çä  )çä)
F1 1e18328 1e11e18 1e185e0 1e188b8 0 0 2
-- Miscellaneous Functions --
Funktion

F1 1e185e0 1e18328 0 0 0 0 2
TaxCompliance Model Name
Funktion
"TaxCompliance"
F1 1e188b8 1e11e18 1e189a0 0 0 0 2
-- Policy Projection Functions --
Funktion

F1 1e189a0 1e188b8 1e18a98 0 0 0 2
TaxCompliance Proj Total Coverage Amount(calcType; yearIndex)
Funktion
'TaxCompliance Proj Policy Specified Amount'(calcType;yearIndex) + SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ( /*Coverage is in force, and is rider*/ 'Std Coverage Is InForce'(calcType;#coverageIndex;TransEffDate;yearIndex) && ('IndicatorCode is Integrated'('Policy Coverage IndicatorCode'(calcType;#coverageIndex)) || 'IndicatorCode is Rider'('Policy Coverage IndicatorCode'(calcType;#coverageIndex))) ; çä   /*Rider face amount*/ 'Policy Coverage CurrentNumberOfUnits'(calcType;#coverageIndex;TransEffDur) * 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;#coverageIndex);#coverageIndex;'Policy EffDate') ; çä   // Else zeroçä0çä))
F1 1e18a98 1e189a0 0 0 0 0 2
TaxCompliance Proj Policy Specified Amount(calcType; yearIndex)
Funktion
sumx(cov;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ( /*Coverage in force, and not a rider*/ 'Std Coverage Is InForce'(calcType;#cov;TransEffDate;yearIndex) && ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#cov)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#cov))) ; çä   /*Include specified amount in total for policy*/ 'Policy Coverage CurrentNumberOfUnits'(calcType;#cov;yearIndex) * 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;#cov);#cov;'Policy EffDate') ; çä   // Else return zero for coverageçä0çä))
F1 1e18ff0 1f2d78c 1e192d0 0 0 0 2
-- Whole Life 7-Pay Premiums --
Funktion

F1 1e192d0 1e18ff0 1e195c8 1e1ae40 0 0 2
TaxCompliance WL 7 Pay Premium(calcType; yearIndex)
Funktion
('TaxCompliance Present Value Death Benefits'(calcType;yearIndex) + 'TaxCompliance Present Value QAB Premiums'(calcType;yearIndex) - 'Policy LifeUSA AccumValue1035' - 'Policy Life CashValueAmt') / 'ACT 7yr Annuity Due'(calcType;yearIndex - 1;0;'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex))
F1 1e195c8 1e192d0 1e196c0 1e19990 0 0 2
TaxCompliance Present Value Death Benefits(calcType; yearIndex)
Funktion
SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'TaxCompliance Present Value Coverage DB'(calcType;yearIndex;#coverageIndex))
F1 1e196c0 1e195c8 0 0 0 0 2
TaxCompliance Present Value Coverage DB(calcType; yearIndex; coverageIndex)
Funktion
IF ( /*Coverage is active*//*Yes*/ 'Std Coverage Is InForce'(calcType;coverageIndex;'Increase Date By Years'('Policy EffDate';yearIndex);yearIndex) = 1 &&  /*Coverage is included using the PV of Death Benefits*/ 'TaxCompliance Coverage Included in SevenPay'(calcType;coverageIndex) = 1 && 'TaxCompliance Coverage SevenPay Inclusion Type'(calcType;coverageIndex) ALIKE "FA" ; çä  'ACT NSP'(calcType;yearIndex - 1;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex)) * IF ( /*Coverage is inside PUAR*//*Yes*/ 'TGTDB Coverage is Inside PUAR'(calcType;coverageIndex) ||  /*Coverage is outside PUAR*//*Yes*/ 'TGTDB Coverage is Outside PUAR'(calcType;coverageIndex) ; çä    'TGTDB Proj Coverage PUA FaceAmount'('CalcType Current'(calcType);coverageIndex;yearIndex;'TGTDB Vector BIRInputVector'('CalcType Current'(calcType);yearIndex;'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex));'TGTDB WithdrawalVector'('CalcType Current'(calcType);yearIndex)) / 1000 ; çä     /*Coverage is not inside or outside PUAR*/ 'Policy Coverage CurrentNumberOfUnits'(calcType;coverageIndex;yearIndex)çä  ) ; çä /*No*/ 0çä)
F1 1e19990 1e192d0 1e19ca8 0 0 0 2
TaxCompliance Present Value QAB Premiums(calcType; yearIndex)
Funktion
SUMX(coverageIndex;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'TaxCompliance Present Value Coverage QAB Premiums'(calcType;yearIndex;#coverageIndex) + IF ('Policy Number of CovOption'(calcType;#coverageIndex) > 0 ; çä  SUMX(covOptIndex;0;'Policy Number of CovOption'(calcType;#coverageIndex) - 1;'TaxCompliance Present Value CovOption QAB Premiums'(calcType;yearIndex;#coverageIndex;#covOptIndex)) ; çä  0çä))
F1 1e19ca8 1e19990 0 1e1a540 0 0 2
TaxCompliance Present Value Coverage QAB Premiums(calcType; yearIndex; coverageIndex)
Funktion
IF ( /*Coverage is included using the PV of Death Benefits*//*Yes*/ 'TaxCompliance Coverage Included in SevenPay'(calcType;coverageIndex) = 1 && 'TaxCompliance Coverage SevenPay Inclusion Type'(calcType;coverageIndex) ALIKE "RCH" ; çä  IF (yearIndex >= 'Policy Coverage RequestedEffDur'(calcType;coverageIndex) ; çä    SUMX(yrIndex;yearIndex;'PIDRV CoverageProduct MaturityDuration'(calcType;'Policy EffDate';coverageIndex) - 1;IF ('Std Coverage Is InForce'(calcType;coverageIndex;'Increase Date By Years'('Policy EffDate';#yrIndex);#yrIndex) = 1 ; çä      'ACT Dx'(calcType;#yrIndex;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex)) * (('Policy Coverage CurrentNumberOfUnits'(calcType;coverageIndex;#yrIndex) * ('ModePremium Coverage PremiumPerUnit'(calcType;coverageIndex;'Vector TCOM ModePremium Coverage Rate Vector Parms'(calcType;coverageIndex;#yrIndex)) * 'ModePremium Coverage Table Rating Factor'(calcType;coverageIndex;1;'Vector TCOM ModePremium Coverage Rate Vector Parms'(calcType;coverageIndex;yearIndex))) + 'ModePremium Coverage Flat Extras'(calcType;coverageIndex;1;'Vector TCOM ModePremium Coverage Rate Vector Parms'(calcType;coverageIndex;yearIndex)))) ; çä       //Table ratings and flat extras still to be added.çä0çä    )) ///çä / 'ACT Dx'(calcType;yearIndex - 1;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex)) /*No*/  ; çä  0çä) ; çä0çä)
F1 1e1a540 1e19990 0 0 0 0 2
TaxCompliance Present Value CovOption QAB Premiums(calcType; yearIndex; coverageIndex; covOptIndex)
Funktion
IF ( /*Coverage is included using the PV of Death Benefits*//*Yes*/ 'TaxCompliance CovOption Included in SevenPay'(calcType;coverageIndex;covOptIndex) = 1 && 'TaxCompliance CovOption SevenPay Inclusion Type'(calcType;coverageIndex;covOptIndex) ALIKE "RCH" ; çä  IF (yearIndex >= 'Policy CovOption RequestedEffDur'(calcType;coverageIndex;covOptIndex) ; çä    SUMX(yrIndex;yearIndex;'PIDRV CoverageProduct MaturityDuration'(calcType;'Policy EffDate';coverageIndex) - 1;IF ('Std CovOption Is InForce'(calcType;coverageIndex;covOptIndex;'Increase Date By Years'('Policy EffDate';#yrIndex);#yrIndex) = 1 ; çä      'ACT Dx'(calcType;#yrIndex;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex)) * (('Policy CovOption OptionNumberOfUnits'(calcType;coverageIndex;covOptIndex) * ('ModePremium CovOption PremiumPerUnit'(calcType;coverageIndex;covOptIndex;'Vector TCOM ModePremium CovOption Rate Vector Parms'(calcType;coverageIndex;covOptIndex;yearIndex)) * 'ModePremium CovOption Table Rating Factor'(calcType;coverageIndex;covOptIndex;1;'Vector TCOM ModePremium CovOption Rate Vector Parms'(calcType;coverageIndex;covOptIndex;yearIndex))) + 'ModePremium CovOption Flat Extras'(calcType;coverageIndex;covOptIndex;1;'Vector TCOM ModePremium CovOption Rate Vector Parms'(calcType;coverageIndex;covOptIndex;yearIndex)))) ; çä      0çä    )) ///çä / 'ACT Dx'(calcType;yearIndex - 1;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex)) /*No*/  ; çä  0çä) ; çä0çä)
F1 1e1ae40 1e18ff0 1e1b158 1e1c9b8 0 0 2
-- Inclusion Functions --
Funktion

F1 1e1b158 1e1ae40 0 1e1b260 0 0 2
TaxCompliance Coverage FlatExtras Included in SevenPay(calcType; coverageIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'GEN Vector Blank';'Policy EffDate');5)
F1 1e1b260 1e1ae40 0 1e1b5a8 0 0 2
TaxCompliance Coverage Included in SevenPay(calcType; coverageIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'GEN Vector Blank';'Policy EffDate');0)
F1 1e1b5a8 1e1ae40 0 1e1b9c8 0 0 2
TaxCompliance Coverage Ratings Included in SevenPay(calcType; coverageIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'GEN Vector Blank';'Policy EffDate');4)
F1 1e1b9c8 1e1ae40 0 1e1bde8 0 0 2
TaxCompliance Coverage SevenPay Inclusion Type(calcType; coverageIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'GEN Vector Blank';'Policy EffDate');3)
F1 1e1bde8 1e1ae40 0 1e1bea0 0 0 2
TaxCompliance CovOption FlatExtras Included in SevenPay(calcType; coverageIndex; covOptIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'Policy CovOption ProductCode'(calcType;coverageIndex;covOptIndex);'Policy EffDate');5)
F1 1e1bea0 1e1ae40 0 1e1c318 0 0 2
TaxCompliance CovOption Included in SevenPay(calcType; coverageIndex; covOptIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'Policy CovOption ProductCode'(calcType;coverageIndex;covOptIndex);'Policy EffDate');0)
F1 1e1c318 1e1ae40 0 1e1c530 0 0 2
TaxCompliance CovOption Ratings Included in SevenPay(calcType; coverageIndex; covOptIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'Policy CovOption ProductCode'(calcType;coverageIndex;covOptIndex);'Policy EffDate');4)
F1 1e1c530 1e1ae40 0 0 0 0 2
TaxCompliance CovOption SevenPay Inclusion Type(calcType; coverageIndex; covOptIndex)
Funktion
e_('ACCS CalcRule Traditional Tax Compliance Inclusions'('Policy CarrierCode';'Policy ProductCode';'Policy Coverage ProductCode'(calcType;coverageIndex);'Policy CovOption ProductCode'(calcType;coverageIndex;covOptIndex);'Policy EffDate');3)
F1 1e1c9b8 1e18ff0 1e1cd10 1e1e658 0 0 2
-- Vector functions --
Funktion

F1 1e1cd10 1e1c9b8 0 1e1d418 0 0 2
Vector TCOM ACTL Info(coverageIndex; calcType; yearIndex)
Funktion
v_('Policy LifeParticipant IssueAge'(calcType;coverageIndex;0);'PIDRV CoverageProduct MaturityDuration'(calcType;'Policy Coverage EffDate'(calcType;coverageIndex);coverageIndex);'TaxCompliance Policy Interest Rate'(calcType);'PI PolicyProduct MortalityOrMorbidityTable'('Policy ProductCode';'Policy EffDate');'Policy LifeParticipant IssueGender'(calcType;coverageIndex;0);'Policy LifeParticipant UnderwritingClass'(calcType;coverageIndex;0;yearIndex);'Policy LifeParticipant TobaccoPremiumBasis'(calcType;coverageIndex;0;yearIndex);'Policy ProductCode';'Policy EffDate';'Policy Jurisdiction';'PI PolicyProduct AgeCalculationType'('Policy ProductCode';'Policy EffDate');IF ('TaxCompliance Coverage Ratings Included in SevenPay'(calcType;coverageIndex) ; çä  1 ; çä  0çä); // Include Table Ratingsçä0; // Include Flat Extrasçä'PIDRV PolicyProduct PayToDuration'(calcType;'Policy Coverage EffDate'(calcType;coverageIndex)) //Premium paying durationçä)
F1 1e1d418 1e1c9b8 0 1e1d810 0 0 2
Vector TCOM ModePremium Coverage Rate Vector Parms(calcType; coverageIndex; yearIndex)
Funktion
v_(1; //Payment_Modeçä0; //Forced_Payment_Modeçä6; //Mode_Premium_Calc_Option -> 0 for entire policy, 3 for specific phase/coverage, 6 for specific element of coverageçä0; //Comm_Premium_Calc_IndçäcoverageIndex; //Specified_Phase/Coverageçä"E"; //Specified_Element of Coverage -> i.e. base coverage, table ratings, flat extras, etc.çä1; //Specified_Element_Indexçä'Policy EffDate'; //TransEffDateçä"P"; //Premium_Typeçä"R"; //Premium_Subtypeçä0; //Rate_info_Passed_Indçä'Calling System'; //Calling_Systemçä0; //Payment_FormçäyearIndex; //Policy Duration.  Pass blank if the duration is to be based on the transaction effective date.çäyearIndex;'CalcType Current'(calcType); //Rate Assumptionçä0 //units to allow variation for WL Face Solvesçä)
F1 1e1d810 1e1c9b8 0 1e1dc20 0 0 2
Vector TCOM ModePremium CovOption Rate Vector Parms(calcType; coverageIndex; covOptIndex; yearIndex)
Funktion
v_(1; //Payment_Modeçä0; //Forced_Payment_Modeçä6; //Mode_Premium_Calc_Option -> 0 for entire policy, 3 for specific phase/coverage, 6 for specific element of coverageçä0; //Comm_Premium_Calc_IndçäcoverageIndex; //Specified_Phase/Coverageçä"B"; //Specified_Element of Coverage -> i.e. base coverage, table ratings, flat extras, etc.çäcovOptIndex; //Specified_Element_Indexçä'Policy EffDate'; //TransEffDateçä"P"; //Premium_Typeçä"R"; //Premium_Subtypeçä0; //Rate_info_Passed_Indçä'Calling System'; //Calling_Systemçä0; //Payment_FormçäyearIndex; //Policy Duration.  Pass blank if the duration is to be based on the transaction effective date.çä'CalcType Current'(calcType) //Rate Assumptionçä)
F1 1e1dc20 1e1c9b8 0 0 0 0 2
TaxCompliance Vector WLProj(calcType; yearIndex)
Funktion
'TGTDB Vector WLProj'(calcType;yearIndex;'TGTDB Vector BIRInputVector'(calcType;yearIndex;'TGTDB WithdrawalVector'(calcType;yearIndex));'TGTDB WithdrawalVector'(calcType;yearIndex))
F1 1e1e658 1e18ff0 1e1e768 1f50920 0 0 2
TaxCompliance 7 Pay Premiums Paid(calcType;taxStartYear;yearIndex)
Funktion
IF (yearIndex > 1 ; çä  'TaxCompliance 7 Pay Standard Premiums Paid'(calcType;taxStartYear;yearIndex) ; çä  'TaxCompliance 7 Pay First Year Premiums Paid'(calcType)çä)
F1 1e1e768 1e1e658 1e1ef60 1f50820 0 0 2
TaxCompliance 7 Pay Standard Premiums Paid(calcType; taxStartYear; yearIndex)
Funktion
IF (yearIndex > 1 && yearIndex = taxStartYear && 'TaxCompliance Fail Necessary Premium Test'(calcType;'TaxCompliance Last Low Death Benefit Year'(calcType;yearIndex);yearIndex) ; çä  'TaxCompliance Unnecessary Premium'(calcType;'TaxCompliance Last Low Death Benefit Year'(calcType;yearIndex);yearIndex) ; çä  SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;'ModePremium Coverage Mode Premium'(calcType;#cov;'Vector ModePremium Create Parms Vector From Inputs'))çä) - 'TaxCompliance Withdrawal Reductions to Premiums Paid'(calcType;yearIndex) //çä// if(yearIndex > 1 && yearIndex = taxStartYearçä//                        && 'TaxCompliance Fail Necessary Premium Test'(calcType;çä//                                          'TaxCompliance Last Low Death Benefit Year'(calcType; yearIndex); yearIndex);çä//                                          çä//                                          'TaxCompliance Unnecessary Premium'(calcType; çä//                                                       'TaxCompliance Last Low Death Benefit Year'(calcType; yearIndex); yearIndex);çä// ââ/* if( rateAssumption equal 'CalcType Current'(calcType) && 'APO is Active'(calcType;yearIndex); 0; */çä// çä//                  sumx(cov; 0; 'Policy Number Of Coverage'(calcType;yearIndex) - 1;çä//     çä//                                       'ModePremium Coverage Mode Premium'(calcType; #cov; 'Vector ModePremium Create Parms Vector From Inputs')çä//                             )çä//      )                    çä//    çä//     - 'TaxCompliance Withdrawal Reductions to Premiums Paid'(calcType; yearIndex)ä
F1 1e1ef60 1e1e768 0 0 0 0 2
TaxCompliance Withdrawal Reductions to Premiums Paid(calcType; yearIndex)
Funktion
'WLCashValue Total CV Release from Face Decrease'(calcType;yearIndex) + 'TaxCompliance Withdrawal'(calcType;yearIndex)
F1 1f50820 1e1e658 0 0 0 0 2
TaxCompliance 7 Pay First Year Premiums Paid(calcType)
Funktion
MIN('TaxCompliance 7 Pay Standard Premiums Paid'('CalcType Current'(calcType);1;1);'ModePremium Mode Premium'(calcType;'Vector ModePremium Create Parms Vector From Inputs') - 'Policy LifeUSA AccumValue1035')
F1 1f50920 1e18ff0 0 1f50db0 0 0 2
TaxCompliance 7 Pay Standard Sum of Premiums Paid(calcType; taxStartYear; yearIndex)
Funktion
SUMX(yr_t;taxStartYear;yearIndex;'TaxCompliance 7 Pay Premiums Paid'(calcType;taxStartYear;#yr_t)) // sumx(year; taxStartYear; yearIndex;çä// çä//      'TaxCompliance 7 Pay Premiums Paid'( calcType; taxStartYear; #year)çä//çä//     )  ä
F1 1f50db0 1e18ff0 0 1f511a0 0 0 2
TaxCompliance Calculate WL 7 Pay Premium(calcType; yearIndex; LowDeathBenefit; CVor1035)
Funktion
'GEN Round'(('ACT NSP'(calcType;yearIndex - 1;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex)) * LowDeathBenefit / 1000 - CVor1035) / 'ACT 7yr Annuity Due'(calcType;yearIndex - 1;'Std BaseCov Index'(calcType);'Vector TCOM ACTL Info'('Std BaseCov Index'(calcType);'CalcType 7PP'(calcType);yearIndex));2)
F1 1f511a0 1e18ff0 1f518c8 0 0 0 2
TaxCompliance Total Cash Value for 7 Pay(calcType; yearIndex)
Funktion
IF (yearIndex = 1 ; çä  'Policy LifeUSA AccumValue1035' ; çä  'TaxCompliance Base DCV'(calcType;yearIndex - 1;yearIndex) + 'TaxCompliance Total DivPUA DCV'(calcType;yearIndex;yearIndex) + 'TaxCompliance PremPUA DCV'(calcType;yearIndex;yearIndex) + 'TaxCompliance Unnecessary Premium Adjustment to Cash Value'(calcType;'TaxCompliance Last Low Death Benefit Year'(calcType;yearIndex);yearIndex)çä) //  If(yearIndex = 1; çä//  çä//                      'Policy LifeUSA AccumValue1035';çä// çä// çä//                    'TaxCompliance Base DCV'( calcType; yearIndex - 1; yearIndex)çä//                    çä//                    + 'TaxCompliance Total DivPUA DCV'( calcType; yearIndex; yearIndex)çä// çä//                     + 'TaxCompliance PremPUA DCV'( calcType; yearIndex; yearIndex)çä// çä//                      +'TaxCompliance Unnecessary Premium Adjustment to Cash Value'(calcType; çä//                                                                'TaxCompliance Last Low Death Benefit Year'(calcType; yearIndex);çä//                                                                              yearIndex)       çä//                                  çä//            )                                 ä
F1 1f518c8 1f511a0 1f52070 1f568d0 0 0 2
TaxCompliance Unnecessary Premium Adjustment to Cash Value(calcType; lowDByear; yearIndex)
Funktion
IF ('TaxCompliance Fail Necessary Premium Test'(calcType;lowDByear;yearIndex) ; çä  (-'TaxCompliance Unnecessary Premium'(calcType;lowDByear;yearIndex)) + IF ('Std BIR coverage exists'(calcType) ; çä    'ModePremium Coverage Mode Premium'(calcType;'Std BIR coverageIndex'(calcType);'Vector ModePremium Create Parms Vector From Inputs') ; çä    0çä  ) + IF ('Std PUAR coverage exists'(calcType) ; çä  'TaxCompliance PUAR Net Premium'(calcType;yearIndex) ; çä  0çä) ; çä0çä)
F1 1f52070 1f518c8 0 0 0 0 2
TaxCompliance PUAR Net Premium(calcType; yearIndex)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ( /*PUAR*/ 'Illus Coverage is'(calcType;#cov;"PUAR") ; çä  'ModePremium Coverage Mode Premium'(calcType;#cov;'Vector ModePremium Create Parms Vector From Inputs') ; çä  0çä))
F1 1f568d0 1f511a0 1f55eb8 3e9e6f8 0 0 2
--TaxCompliance Deemed Cash Value( calcType; lowDByear; yearIndex)
Funktion
'TaxCompliance Deemed Cash Value Before Premium'( calcType; lowDByear; yearIndex)çä  çä//  +  'TaxCompliance Standard Net Premium'( calcType; lowDByear; yearIndex)çä  çä    
F1 1f55eb8 1f568d0 1f55fd0 1f56e28 0 0 2
TaxCompliance Deemed Cash Value Before Premium( calcType; lowDByear; yearIndex)
Funktion
'TaxCompliance Base DCV'(calcType;lowDByear;yearIndex) + 'TaxCompliance DivPUA DCV'(calcType;lowDByear;yearIndex) + 'TaxCompliance PremPUA DCV'(calcType;lowDByear;yearIndex)
F1 1f55fd0 1f55eb8 0 1f56448 0 0 2
TaxCompliance DivPUA DCV( calcType; lowDByear; yearIndex)
Funktion
IF ('Std BIR coverage exists'(calcType) && 'TGTDB Proj BIRPremium CrossOver Check'('CalcType Current'(calcType);lowDByear;'TGTDB WithdrawalVector'(calcType;yearIndex)) ; çä  0 ; çä   //     'TaxCompliance PUAR DivPUA DCV'( calcType; lowDByear; yearIndex);çä'TaxCompliance Total DivPUA DCV'(calcType;lowDByear;yearIndex)çä)
F1 1f56448 1f55eb8 0 0 0 0 2
TaxCompliance PremPUA DCV( calcType; lowDByear; yearIndex)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex - 1) - 1; // use yearIndex in summation instead of lowDByear in order to include any additional PUAR segmentsçäIF ('Std BIR coverage exists'(calcType) && #cov = 'Std BIR coverageIndex'(calcType) || 'Std PUAR coverage exists'(calcType) && #cov = 'Std PUAR coverageIndex'(calcType) ; çä  'WL CashValue Proj Coverage PremPUA CV'(calcType;#cov;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex - 1)) ; çä  0çä))
F1 1f56e28 1f568d0 0 1f52600 0 0 2
TaxCompliance Base DCV( calcType; lowDByear; yearIndex)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#cov)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#cov)) ; çä  'WLCashValue Proj Coverage CV'(calcType;#cov;yearIndex;0) ; çä   //Empty WLProjVectorçä0çä))
F1 1f52600 1f568d0 0 0 0 0 2
TaxCompliance Total DivPUA DCV( calcType; lowDByear; yearIndex)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;lowDByear - 1) - 1;'WL CashValue Proj Coverage DivPUA CV'(calcType;#cov;yearIndex;'TaxCompliance Vector WLProj'(calcType;lowDByear)))
F1 3e9e6f8 1f511a0 3e9ec50 3e5f8f8 0 0 2
-- Low Death Benefit --
Funktion

F1 3e9ec50 3e9e6f8 3e9ed10 0 0 0 2
TaxCompliance Low Death Benefit(calcType; yearIndex)
Funktion
'TaxCompliance Base LDB'(calcType;yearIndex) + 'TaxCompliance NonBase LDB'(calcType;yearIndex)
F1 3e9ed10 3e9ec50 0 3e9e680 0 0 2
TaxCompliance Base LDB(calcType; yearIndex)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ( /*base or increase and inforce*/ 'IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#cov)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#cov)) ; çä   //true - calculate death benefitçä'Policy Coverage CurrentNumberOfUnits'(calcType;#cov;yearIndex) * 'PI CoverageProduct ValuePerUnit'(calcType;'Policy Coverage ProductCode'(calcType;#cov);#cov;'Policy EffDate') ; çä   // Else 0çä0çä))
F1 3e9e680 3e9ec50 3e78608 3e3a538 0 0 2
TaxCompliance NonBase LDB(calcType; yearIndex)
Funktion
'TaxCompliance PUAR LDB'(calcType;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex)) + IF ('Std BIR coverage exists'(calcType) ; çä  'TaxCompliance BIR LDB'(calcType;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex);'TGTDB WithdrawalVector'(calcType;yearIndex - 1)) ; çä  'TaxCompliance Base PUA LDB'(calcType;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex))çä)
F1 3e78608 3e9e680 0 3e82778 0 0 2
TaxCompliance BIR LDB(calcType; yearIndex; vectorWLProj; vectorWithdrwl)
Funktion
IF ('TGTDB Proj BIRPremium CrossOver Check'('CalcType Current'(calcType);yearIndex;'TGTDB WithdrawalVector'(calcType;yearIndex)) ; çä  'TGTDB Proj OYTCover'(calcType;yearIndex;'TGTDB Vector BIRInputVector'(calcType;yearIndex;'TGTDB WithdrawalVector'(calcType;yearIndex));'TGTDB WithdrawalVector'(calcType;yearIndex)) ; çä  'TaxCompliance Coverage Total PUA LDB'(vectorWLProj;'Std BIR coverageIndex'(calcType)) + 'TaxCompliance Base PUA LDB'(calcType;yearIndex;vectorWLProj)çä)
F1 3e82778 3e9e680 0 3e5c328 0 0 2
TaxCompliance PUAR LDB(calcType; yearIndex; vectorWLProj)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex) - 1;IF ('Std PUAR coverage exists'(calcType) && #cov = 'Std PUAR coverageIndex'(calcType) ; çä  'TaxCompliance Coverage Total PUA LDB'(vectorWLProj;#cov) ; çä  0çä))
F1 3e5c328 3e9e680 0 0 0 0 2
TaxCompliance NonBase LDB Prior Year(calcType; yearIndex)
Funktion
'TaxCompliance PUAR LDB'(calcType;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex - 1)) + IF ('Std BIR coverage exists'(calcType) ; çä  'TaxCompliance BIR LDB'(calcType;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex - 1);'TGTDB WithdrawalVector'(calcType;yearIndex - 1)) ; çä  'TaxCompliance Base PUA LDB'(calcType;yearIndex;'TaxCompliance Vector WLProj'(calcType;yearIndex - 1))çä)
F1 3e3a538 3e9ec50 3e5ad00 0 0 0 2
TaxCompliance Base PUA LDB(calcType; yearIndex; vectorWLProj)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;yearIndex - 1) - 1;IF ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#cov)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#cov)) ; çä  'TaxCompliance Coverage Total PUA LDB'(vectorWLProj;#cov) ; çä  0çä))
F1 3e5ad00 3e3a538 0 0 0 0 2
TaxCompliance Coverage Total PUA LDB(vectorWLProj; coverageIndex)
Funktion
('SharedVector WLProj DivPUAUnits'(vectorWLProj;coverageIndex) + 'SharedVector WLProj PremPUAUnits'(vectorWLProj;coverageIndex)) * 1000
F1 3e5f8f8 1f511a0 3e609a8 0 0 0 2
-- Necessary Premium Test --
Funktion

F1 3e609a8 3e5f8f8 0 3e5fc38 0 0 2
TaxCompliance Material Change Occurs(calcType; lowDByear; yearIndex)
Funktion
(yearIndex < 'PIDRV CoverageProduct MaturityDuration'(calcType;'Policy Coverage EffDate'(calcType;'Std BaseCov Index'(calcType));'Std BaseCov Index'(calcType)) && 'TaxCompliance Base LDB'(calcType;yearIndex) > 'TaxCompliance Base LDB'(calcType;yearIndex - 1)) || 'TaxCompliance Fail Necessary Premium Test'(calcType;lowDByear;yearIndex)
F1 3e5fc38 3e5f8f8 3e5fce8 3e60ee0 0 0 2
TaxCompliance Reduction in Benefits Occurs(calcType; taxStartYear; lowDByear; yearIndex)
Funktion
'TaxCompliance Reduction in Benefits Trigger'(calcType;taxStartYear;yearIndex) && ('TaxCompliance Low Death Benefit'(calcType;yearIndex) < 'TaxCompliance Low Death Benefit'(calcType;lowDByear))
F1 3e5fce8 3e5fc38 0 3e611e0 0 0 2
TaxCompliance Reduction in Benefits Trigger(calcType; taxStartYear; yearIndex)
Funktion
(yearIndex > taxStartYear) && (yearIndex < taxStartYear + 7) && (('TaxCompliance Base LDB'(calcType;yearIndex) < 'TaxCompliance Base LDB'(calcType;yearIndex - 1)) || ('Std BIR coverage exists'(calcType) && ('vBIR faceAmount'('TGTDB Vector BIRInputVector'(calcType;yearIndex;'TGTDB WithdrawalVector'(calcType;yearIndex))) < 'vBIR faceAmount'('TGTDB Vector BIRInputVector'(calcType;yearIndex - 1;'TGTDB WithdrawalVector'(calcType;yearIndex - 1)))) || IF (calcType ALIKE 'CalcType Current'(calcType) ; çä  'APO is Active'(calcType;yearIndex) ; çä  0çä) || ('TaxCompliance Withdrawal'(calcType;yearIndex) > 0))) //çä//   yearIndex > taxStartYear &&  (yearIndex < taxStartYear + 7)çä//          çä//            && (  'TaxCompliance Base LDB'(calcType; yearIndex)                                        çä//                                            <  'TaxCompliance Base LDB'(calcType; yearIndex - 1) çä//                    çä//                     || ( 'Std BIR coverage exists'(calcType) çä//           çä//                    &&  'vBIR faceAmount'('TGTDB Vector BIRInputVector'(calcType; yearIndex; 'TGTDB WithdrawalVector'(calcType; yearIndex)) ) <çä//  çä//                               'vBIR faceAmount'(çä//                                     'TGTDB Vector BIRInputVector'( calcType; yearIndex - 1; çä//                                       'TGTDB WithdrawalVector'(calcType; yearIndex - 1) ) ) )                              çä//                                                                                                                                                                                                  çä//                                          ||  if( calcType equal 'CalcType Current'(calcType); 'APO is Active'(calcType;yearIndex); 0 )    çä//                                          çä//                                            || 'TaxCompliance Withdrawal'(calcType; yearIndex) > 0çä//                                              çä//                                              )                   çä//                                                                     çä//                                                                      çä//                                                                      ä
F1 3e611e0 3e5fc38 0 3e60b38 0 0 2
TaxCompliance Withdrawal(calcType; yearIndex)
Funktion
IF ('Illus WithdrawalDesignType' ALIKE "1000500001" ; çä  0 ; çä  'Illus WithdrawalAmt'(calcType;yearIndex)çä)
F1 3e60b38 3e5fc38 0 0 0 0 2
TaxCompliance Maximum Face Decrease No Reduction(calcType; lowDByear; yearIndex)
Funktion
'GEN Ceil'(MAX(0;'TaxCompliance Base LDB'(calcType;yearIndex - 1) + 'TaxCompliance NonBase LDB Prior Year'(calcType;yearIndex) - 'TaxCompliance Low Death Benefit'(calcType;lowDByear));2)
F1 3e60ee0 3e5f8f8 3e61c78 3e61070 0 0 2
TaxCompliance Fail Necessary Premium Test(calcType; lowDByear; yearIndex)
Funktion
'TaxCompliance Low Death Benefit NSP'(calcType;lowDByear;yearIndex) < 'TaxCompliance Deemed Cash Value Before Premium'(calcType;lowDByear;yearIndex) //'TaxCompliance Deemed Cash Value'( calcType; lowDByear; yearIndex)çä
F1 3e61c78 3e60ee0 0 3e612f8 0 0 2
TaxCompliance Necessary Premium(calcType; lowDByear; yearIndex)
Funktion
'TaxCompliance Low Death Benefit NSP'(calcType;lowDByear;yearIndex) - 'TaxCompliance Deemed Cash Value Before Premium'(calcType;lowDByear;yearIndex)
F1 3e612f8 3e60ee0 0 3f5a3c8 0 0 2
TaxCompliance Unnecessary Premium(calcType; lowDByear; yearIndex)
Funktion
IF ('TaxCompliance Fail Necessary Premium Test'(calcType;lowDByear;yearIndex) ; çä   //â'TaxCompliance Standard Net Premium'( calcType; lowDByear; yearIndex)çä'TaxCompliance Standard Net Premium'(calcType) - 'TaxCompliance Necessary Premium'(calcType;lowDByear;yearIndex) ; çä  0çä)
F1 3f5a3c8 3e60ee0 0 5514644d 0 0 2
--TaxCompliance Standard Net Premium( calcType; lowDByear; yearIndex)
Funktion
'ModePremium Mode Premium'(calcType;'Vector ModePremium Create Parms Vector From Inputs')
F1 5514644d 3e60ee0 0 0 0 0 2
TaxCompliance Standard Net Premium(calcType)
Funktion
'ModePremium Mode Premium'(calcType;'Vector ModePremium Create Parms Vector From Inputs')
F1 3e61070 3e5f8f8 0 3e61680 0 0 2
TaxCompliance Low Death Benefit NSP(calcType; lowDByear; yearIndex)
Funktion
'GEN Round'('TaxCompliance Low Death Benefit'(calcType;lowDByear) * 'PUACalc Rate'(calcType;'Std BaseCov Index'(calcType);yearIndex - 1);2)
F1 3e61680 3e5f8f8 0 3e5f788 0 0 2
TaxCompliance Last Material Change Year(calcType; yearIndex)
Funktion
IF (yearIndex = 1 || 'TaxCompliance Material Change Occurs'(calcType;'TaxCompliance Last Low Death Benefit Year'(calcType;yearIndex - 1);yearIndex) ; çä  yearIndex ; çä  'TaxCompliance Last Material Change Year'(calcType;yearIndex - 1)çä)
F1 3e5f788 3e5f8f8 3e5f850 0 0 0 2
TaxCompliance Last Low Death Benefit Year(calcType; yearIndex)
Funktion
IF (yearIndex = 1 ; çä  yearIndex ; çä  'TaxCompliance Find Low Death Benefit Year'(calcType;'TaxCompliance Last Material Change Year'(calcType;yearIndex - 1);MAX('TaxCompliance Last Material Change Year'(calcType;yearIndex - 1);'TaxCompliance Last Low Death Benefit Year'(calcType;yearIndex - 1));1;yearIndex)çä) //TaxCompliance Find Low Death Benefit Year(calcType; taxStartYear; lastLDBYear; yearIndex)                          ä
F1 3e5f850 3e5f788 0 0 0 0 2
TaxCompliance Find Low Death Benefit Year(calcType; taxStartYear; lastLDBYear; t; endYear)
Funktion
IF (endYear = taxStartYear ; çä  taxStartYear ; çä  IF ((endYear >= taxStartYear + 7) || (taxStartYear + t > endYear) ; çä    lastLDBYear ; çä    IF ('TaxCompliance Reduction in Benefits Occurs'(calcType;taxStartYear;lastLDBYear;taxStartYear + t) ; çä      'TaxCompliance Find Low Death Benefit Year'(calcType;taxStartYear;taxStartYear + t;t + 1;endYear) ; çä      'TaxCompliance Find Low Death Benefit Year'(calcType;taxStartYear;lastLDBYear;t + 1;endYear)çä    )çä)çä)
A0 1f2d86c 0 0 0 0 0 0

T0 1f2d8dc 0 1f572b8 0 0 0 0

T1 1f572b8 1f2d8dc 1f57728 0 0 0 2
--List Tables--
key
value
T5 1f57728 1f572b8 0 0 0 0 2
List_calc_type
key
value
GLP
Guideline Level Premium
GSP
Guideline Single Premium
7PP
7 Pay Premium
7PN
7 Pay Net Single Premium
I0 1f2d94c 0 6c4a66aa 0 0 0 0

I0 6c4a66aa 1f2d94c 0 0 0 0 0
TargetDeathBenefit.pms
-
O0
E0
L0
B0
P2
1e112d8
1e119c0
F89
1e11e18
1e11ee0
1e11fb8
1e122f8
1e123e0
1e124d0
1e126a8
1e12790
1e12848
1e12928
1e12ae8
1e12fc0
1e13078
1e13260
1e135c0
4f2f91f8
1e14dd8
1e15038
1e15130
1e153a8
1e156c0
1e15940
1e15dc0
1e164a0
1e18328
1e185e0
1e188b8
1e189a0
1e18a98
1e18ff0
1e192d0
1e195c8
1e196c0
1e19990
1e19ca8
1e1a540
1e1ae40
1e1b158
1e1b260
1e1b5a8
1e1b9c8
1e1bde8
1e1bea0
1e1c318
1e1c530
1e1c9b8
1e1cd10
1e1d418
1e1d810
1e1dc20
1e1e658
1e1e768
1e1ef60
1f50820
1f50920
1f50db0
1f511a0
1f518c8
1f52070
1f568d0
1f55eb8
1f55fd0
1f56448
1f56e28
1f52600
3e9e6f8
3e9ec50
3e9ed10
3e9e680
3e78608
3e82778
3e5c328
3e3a538
3e5ad00
3e5f8f8
3e609a8
3e5fc38
3e5fce8
3e611e0
3e60b38
3e60ee0
3e61c78
3e612f8
3f5a3c8
5514644d
3e61070
3e61680
3e5f788
3e5f850
A0
T2
1f572b8
1f57728
!86
1e119c0 3 -1
çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e119c0 5 -1
çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e11fb8 -2 -2
Description: Total specified amount for policyçä çäModification logçä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä02/14/2013 - PAD1213 - JL - Use "Std Coverage is Inforce" instead of "Coverage is Inforce"çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä06/03/2009 - PA1277 - JL - Add TransEffDur as yearIndex to "Coverage is InForce", such that the model compilesçä10/31/2007 CSC Initial Calculation/Rule
1e122f8 -2 -2
Description - duration at which policy reaches maturityçä çäModification logçä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
1e123e0 -2 -2
Description : Premium duration (up to which premium is paid under the policy)çä çäModification logçä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC Updated to pull target calctypeçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
1e124d0 -2 -2
Description : Interest rate used for calculationçä çäModification logçä02/01/2008 Additional product information moved to Calc Rules modelçä10/31/2007 CSC Initial Calculation/Ruleçä
1e126a8 -2 -2
Description:  Returns the total  amount of all the active coverages.çä çäModification logçä02/14/2013 - PAD1213 - JL - Use "Std Coverage is Inforce" instead of "Coverage is Inforce"çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä06/03/2009 - PA1277 - JL - Add TransEffDur as yearIndex to "Coverage is InForce", such that the model compilesçä10/31/2007 CSC Initial Calculation/Rule
1e12848 -2 -2
Description: Tolerance levelsçä çäModification logçä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä10/31/2007 CSC Initial Calculation/Rule
1e12ae8 -2 -2
Description : Net single premium per unitçä çäModification logçä05/06/2014 - PA1501 - rm - Replaced redundant interest function.  Made formatting adjustments to comply with pA modeling standards.çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
1e12fc0 -2 -2
Description: mortality rate including table ratings and flat extrasçä çäModification logçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/18/2011 - PAC013 calcType - BT - Restructureçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
1e13078 -2 -2
Description: mortality rate excluding table ratings and flat extras for single livesçä çäModification logçä08/13/2013 PA1401-26 - rm - added yearIndex parm for UnderwritingClass and TobaccoPremiumBasisçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
1e13260 -2 -2
Description: attained age çä çäModification logçä10/31/2007 CSC Initial Calculation/Rule
1e135c0 -2 -2
Description: Interest rate for CVAT calculationçä çäModification logçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/18/2011 - PAC013 calcType - BT - Restructureçä10/31/2007 CSC Initial Calculation/Ruleçä02/01/2008 Additional Product Information moved to CalcRules
4f2f91f8 -2 -2
Description:  v interest discount factorçä çäModification logçä05/06/2014 - PA1501 - rm - Removed to reuse common function calculating vçä10/31/2007 CSC Initial Calculation/Rule
1e15038 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e15130 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e153a8 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e156c0 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e15940 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e15dc0 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e16058 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e16590 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e16a08 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e16cc0 -2 -2
Modification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä01/18/2010 - pA 1001 - performance - BT - split up functionçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä çä
168c38ee -2 -2
çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä01/18/2010 - pA 1001 - performance - BT - added
1e17658 -2 -2
Modification Log:çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä01/18/2010 - pA 1001 - performance - BT - split up function and changed outcover conditionçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä çä
4ddbe834 -2 -2
çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä01/18/2010 - pA 1001 - performance - BT - added
5380c7db -2 -2
çä01/18/2010 - pA 1001 - performance - BT - added in order to change the logic in TaxCompliance Inside PUAR Changes and TaxCompliance Outside PUAR Changes 
1e189a0 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e18a98 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e192d0 -2 -2
Description : Solves for  WL 7-pay premiumçä çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC update for sevenpay calctypeçä09/07/2010 - PAC021 - rm - Replaced coverageIndex=0 with standard function 'Std BaseCov Index'(calcType)çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e195c8 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e196c0 -2 -2
Modification Log:çä08/13/2013 PA1401-26 - rm - added yearIndex parm for UnderwritingClass and TobaccoPremiumBasisçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC update for sevenpay calctypeçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä
1e19990 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e19ca8 -2 -2
çä08/13/2013 PA1401-26 - rm - added yearIndex parm for UnderwritingClass and TobaccoPremiumBasisçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC update for sevenpay calctypeçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e1a540 -2 -2
çä01/26/2011 - PAC013 CMC update for sevenpay calctypeçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e1b158 -2 -2
Description : Determines if flat extras for the specified coverage are included in the seven pay calculation.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1b260 -2 -2
Description : Determines if specified coverage is included in the seven pay calculation.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1b5a8 -2 -2
Description : Determines if ratings for the specified coverage are included in the seven pay calculation.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1b9c8 -2 -2
Description : Determines whether the coverage is included using the death benefit or the premium.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1bde8 -2 -2
Description : Determines if flat extras for the specified coverage option are included in the seven pay calculation.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1bea0 -2 -2
Description : Determines if specified coverage option is included in the seven pay calculation.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1c318 -2 -2
Description : Determines if ratings for the specified coverage option are included in the seven pay calculation.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1c530 -2 -2
Description : Determines whether the coverage option is included using the death benefit or the premium.çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä02/01/2008 Phase 2 Illus001
1e1cd10 -2 -2
07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e1d418 -2 -2
çäModification Log:çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2009 - PAC004 - MO - add year index - so that according to shared vectors - rate assumption is element 15.çä07/03/2009 - PA1277  Added parm to allow units to vary.çä
1e1d810 -2 -2
çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e1dc20 -2 -2
Description:  WLProj Vector for beginning of specified tax yearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä09/10/2008 - rlc - use revised BIR vector functionçä05/06/2008 - rlc - switched to BOY logicçä04/25/2008 - rlc - created function
1e1e658 -2 -2
çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
1e1e768 -2 -2
Description: Sum of the standard premiums paid from specified yearIndex - includes adjustments for withdrawals.  If necessary premium test fails, a material change occurs & the premiums paid for that year equals the unnecessary premium.çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Removed rateAssumption parameter from APO is Active function, as it is not usedçä05/08/2008 - rlc - add APO testçä05/05/2008 - rlc - updated function
1e1ef60 -2 -2
Description:  Withdrawals that reduce premiums paidçä çäModification Log: çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/05/2008 - rlc - created function
1f50820 -2 -2
Description:  First year premiums paid are limited to actual premiums paid less 1035 exchangeçä çäModification Log: çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä09/24/2008 - Phase 3 - RPU - BMS - Add RPU rate Assumption change for year 1çä06/14/2008 - rlc - eliminate intermediate functionçä05/05/2008 - rlc - pull in sum of coverage premiums
1f50920 -2 -2
Description: Sum of the standard premiums paid from taxStartYear through yearIndex - includes adjustments for withdrawals & unnecessary premiumçä çäModification Log:çä05/06/2014 - PA1501 - rm - replaced counter "year" with "yr_t" so standard VP/MS function name is not used as a parameterçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/06/2008 - rlc - use # coverages for yearIndexçä
1f50db0 -2 -2
Description: Calculate unrounded 7 Pay Premium using base coverage issue age and gender and specified LowDeathBenefit and cash value or 1035 valueçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä08/13/2013 PA1401-26 - rm - added yearIndex parm for UnderwritingClass and TobaccoPremiumBasisçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC update for sevenpay calctypeçä09/07/2010 - PAC021 - rm - Replaced coverageIndex=0 with standard function 'Std BaseCov Index'(calcType)çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/04/2008 - add roundingçä04/23/2008 - rlc - created function 
1f511a0 -2 -2
Description: The Total Cash Value (TCV) will be the actual policy cash value at the end of the prior year (t ‚Äì 1) including cash value for Paid Up Additions purchased by dividends through the end of year (t - 1) plus net standard BIR and PUAR premium at the beginning of year t less any unnecessary premium paid at the beginning of year t.çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 - CSC Phase 2 Initial Calc
1f518c8 -2 -2
Description: If material change is a result of failing the necessary premium test,  adjust cash value to calculate new 7 pay premium by subtracting unnecessary premium and adding rider premiums that purchase PUA's.çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
1f52070 -2 -2
Description: Total premium paid on PUAR coverages for specified year.  çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
1f568d0 -2 -2
Description: Deemed Cash Value for specified year after payment of premiums assuming last material change occurred at the beginning of start year.  DCV is compared to the NSP for the Low Death Benefit to determine if a material change has occurred.çä çäEquals the Deemed Cash Value Before payment of premiums plusçä çä1.âthe net annual premium used to calculate the guaranteed cash value for each coverage segment multiplied by DBAR/DX.çä2.âPUAR net standard annual premium for the specified yearçä3.âBIR net standard annual premium for the specified year. çä çäModification Log:çä05/06/2014 - PA1501 - rm - Commented out - No need for one function to call a single function with same parametersçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calcçä çä
1f55eb8 -2 -2
Description: Deemed Cash Value Before Premium for specified year assuming last material change occurred at the beginning of start year.  çä çäEquals the sum ofçä1.âthe guaranteed cash value at the end or the prior year for the face amount of base coverages included in the Low Death Benefitçä2.âcash value of all Paid Up Additions purchased with dividends that were included in the Low Death Benefitçä3.âcash value of all paid up additions purchased with PUAR or BIR premium that were included in the Low Death Benefit çä4.âcashvalue of all Paid Up Additions purchased with PUAR or BIR premium since the beginning of the current 7 pay period and prior to the current yearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calcçä çä
1f55fd0 -2 -2
Description: Deemed Cash Value for Dividend PUA's = cash value of all Paid Up Additions purchased with dividends that were included in the Low Death Benefit established at taxStartYearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 -PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä12/09/2008 CSC Phase 2 Initial Calc
1f56448 -2 -2
Description: Deemed Cash Value for Premium  PUA's = cash value of all PUA's purchased with premium that were included in the Low Death Benefit prior to the current year plus cashvalue of all PUA's purchased with premium since the beginning of the current 7 pay period and prior to the current yearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
1f56e28 -2 -2
Description: Base Deemed Cash Value before Payment of Premium = Guaranteed cash value at the end or the prior year for the face amount of base coverages included in the Low Death Benefit established at taxStartYearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calcçä11/16/2009 - PAC002 - JL - Add empty WLProjVector parm
1f52600 -2 -2
Description: cash value of all Paid Up Additions purchased with dividends that were included in the Low Death Benefit çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e9ec50 -2 -2
Description:  Low Death Benefit at the beginning of specified year - does not depend on taxStartYear.  Includes baseçä  RTR, BIR & PUAR coverages onlyçä çäModification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e9ed10 -2 -2
Description:  Sum of face amount on base coverages as of Low Death Benefit year çä çäModification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e9e680 -2 -2
Description:  Low Death Benefit at the beginning of specified year forBase PUA's and RTR, BIR & PUAR coverages.çä çäModification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä12/09/2008 CSC Phase 2 Initial Calc
3e78608 -2 -2
Description: Prior to crossover, the target death benefit; after crossover, paid-up additions including those purchased at the beginning of year t - this function is only called if BIR existsçä çäModification Log:çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä12/09/2008 CSC Phase 2 Initial Calc
3e82778 -2 -2
Description: Total paid up additions on PUAR coverages.  yearIndex insures that the increase coverages are included.  çä çäModification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e5c328 -2 -2
Description:  Low death benefit for non base coverages.çä çäModification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä12/09/2008 CSC Phase 2 Initial Calc
3e3a538 -2 -2
Description: Total paid up additions on base coverages.  yearIndex insures that the increase coverages are included.  çä çäModification Log:çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e5ad00 -2 -2
Description: Sum of PUA on specified coverage - rateAssumption & yearIndex is specified in definition of vectorWLProjçä çäModification Log:çä12/09/2008 CSC Phase 2 Initial Calcçä çä
3e609a8 -2 -2
Description:  Boolean function that a material change occurs at the beginning of the specified year.  çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e5fc38 -2 -2
Description: Boolean function that a reduction in benefits has occurredçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e5fce8 -2 -2
Description: Determine if any changes have occurred that might cause a reduction in death benefitsçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä05/14/2009 - PA1013 - wdp - Added rateAssumption parameter to WithdrawalVectorçä12/09/2008 CSC Phase 2 Initial Calc
3e611e0 -2 -2
 Description:  Withdrawal Amount - temporary function to pull from input withdrawal streamçä çäModification Log: çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calcçä
3e60b38 -2 -2
Description:  Calculate the maximum base face decrease for a specified year that does not trigger a reduction in benefits. Only called if yearIndex is within a 7 year period. Returns zero if any decrease would trigger a reduction in benefits.çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e60ee0 -2 -2
Description: Boolean function that the necessary premium test fails for a specified year based on the low deathçäbenefit from lowDByear.  The test is passed if the NSP for the Low Death Benefit is greater than the Deemed Cash Value after payment of premiumsçä çäModification Log:çä05/06/2014 - PA1501 - rm - Replaced redundant "TaxCompliance Deemed Cash Value" with "TaxCompliance Deemed Cash Value Before Premium"çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e61c78 -2 -2
Description: Necessary premium before the material change is the excess of the Net Single Premium for the Low Death Benefit over the Deemed Cash Value before payment of the annual premium.çä çäâNecessary Premium  = NSP(LDB) - DCVBeforeçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e612f8 -2 -2
Description: Unnecessary Premium - set to zero unless Necessary Premium Test is failedçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standards.  Replaced function parms for Standard Net Premium function.çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3f5a3c8 -2 -2
Desciption:  Net Premiums for Necessary Premium Testingçä çäModification Log:çä05/06/2014 - PA1501 - rm - commented out - Replace function with new one without unused parameters lowDByear & yearIndexçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
5514644d -2 -2
Desciption:  Net Premiums for Necessary Premium Testingçä çäModification Log:çä05/06/2014 - PA1501 - rm - Eliminated unused parameters lowDByear & yearIndexçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e61070 -2 -2
Description:  Net Single Premium for the Low Death Benefit çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e61680 -2 -2
Description: Iterative Function for the material change year applicable to the specified yearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e5f788 -2 -2
Description:  Find the applicable low death benefit year prior to determining if a material change occurs in specified yearçä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
3e5f850 -2 -2
Description:  Iterative function for the year that the last reduction in benefits occurred since the last material change. Allows for multiple benefit reductions during 7 pay period. t is initialized at 1.çä çäModification Log:çä05/06/2014 - PA1501 - rm - Formatting adjustments to comply with pA modeling standardsçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/09/2008 CSC Phase 2 Initial Calc
29d425d8 -2 -2
Export to run
;Offset=00000000
