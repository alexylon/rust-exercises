;1			
X0 591d4cbf 0 0 0 0 0 0

O0 12966f3b 0 0 0 0 0 0

E0 47ff8b98 0 0 0 0 0 0

L0 5d61a208 0 0 0 0 0 0

B0 570a6d35 0 0 0 0 0 0

P0 5a514cc9 0 0 0 0 0 0

F0 3797b161 0 4ae755a8 0 0 0 0

F1 4ae755a8 3797b161 0 2e051bb7 0 0 2
Table Effective Date(effectiveDate)
Funktion
DATE(effectiveDate; 0; 0; 0; "YMD")Š//(year(effective_date) * 10000) + (month(effective_date) * 100) + day(effective_date)
F1 2e051bb7 3797b161 0 556d0e02 0 0 2
key1 lookup(tablename; key1)
Funktion
IF(EXISTS(table(tablename); key1);Š‰key1;Š‰Š‰IF(EXISTS(table(tablename); 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); 1000);Š‰‰‰1000;ŠŠ           ‰‰‰ERROR("Key fields " & key1 &" not found in " & tablename)Š‰‰)Š‰)Š)Š
F1 556d0e02 3797b161 0 241f7687 0 0 2
key2 lookup(tablename; key1; key2)
Funktion
IF(EXISTS(table(tablename); key1; key2);Š‰key2;Š‰Š‰IF(EXISTS(table(tablename); key1; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; 1000);Š‰‰‰1000;ŠŠ           ‰‰‰ERROR("Key fields " & key1 & "/" & key2 &" not found in " & tablename)Š‰‰)Š‰)Š)Š
F1 241f7687 3797b161 0 3e3b45f7 0 0 2
key3 lookup(tablename; key1; key2; key3)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3);Š‰key3;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 &" not found in " & tablename)Š‰‰)Š‰)Š)Š
F1 3e3b45f7 3797b161 0 7a5f36f6 0 0 2
key4 lookup(tablename; key1; key2; key3; key4)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4);Š‰key4;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; 1000);Š‰‰1000;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; 0);Š‰‰‰0;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 &" not found in " & tablename)Š‰‰)Š‰)Š)Š
F1 7a5f36f6 3797b161 0 19322849 0 0 2
key5 lookup(tablename; key1; key2; key3; key4; key5)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4; key5);Š‰key5;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; key4; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; key4; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 &" not found in " & tablename)Š‰‰)Š‰)Š)Š
F1 19322849 3797b161 0 4eb9386 0 0 2
key6 lookup(tablename; key1; key2; key3; key4; key5; key6)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6);Š‰key6;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & Š‰‰‰‰"/" & key4 & "/" & key5 & "/" & key6 &" not found in " & tablenameŠ‰‰‰)Š‰‰)Š‰)Š)Š
F1 4eb9386 3797b161 0 717ee829 0 0 2
key7 lookup(tablename; key1; key2; key3; key4; key5; key6; key7)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7);Š‰key7;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & Š‰‰‰‰"/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 &" not found in " & tablenameŠ‰‰‰)Š‰‰)Š‰)Š)
F1 717ee829 3797b161 0 6613abee 0 0 2
key8 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8);Š‰key8;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & Š‰‰‰‰"/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & key8 & " not found in " & tablenameŠ‰‰‰)Š‰‰)Š‰)Š)Š
F1 6613abee 3797b161 0 7b825eb0 0 0 2
key9 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8; key9);Š‰key9;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & Š‰‰‰‰"/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & " not found in " & tablenameŠ‰‰‰)Š‰‰)Š‰)Š)Š
F1 7b825eb0 3797b161 0 660ee189 0 0 2
key10 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9, key10)
Funktion
IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8; key9; key10);Š‰key10;Š‰Š‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8; key9; 0);Š‰‰0;Š‰‰IF(EXISTS(table(tablename); key1; key2; key3; key4; key5; key6; key7; key8; key9; 1000);Š‰‰‰1000;Š‰           ‰‰ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & Š‰‰‰‰"/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & "/" & key10 & " not found in " & tablenameŠ‰‰‰)Š‰‰)Š‰)Š)Š
F1 660ee189 3797b161 0 3d2096f1 0 0 2
PP(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProductŠIF(EXISTS('Table PolicyProduct';ŠŠe_(v_construct(s_keys); 0);  //carrierCodeŠe_(v_construct(s_keys); 1);  //productCodeŠe_(v_construct(s_keys); 2)  //productVersionCodeŠŠ);ŠŠŠ// then read from the table ŠLOOKUPX( 'Table PolicyProduct';Še_(v_construct(s_keys); 0);  //carrierCodeŠe_(v_construct(s_keys); 1);  //productCodeŠe_(v_construct(s_keys); 2);  //productVersionCodeŠ'table effective date'(e_(v_construct(s_keys); 3));  //saleEffectiveDateŠ field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 3d2096f1 3797b161 0 5195ece6 0 0 2
PP LoanProvision MinBalanceCalcRule(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LoanProvision MinBalanceCalcRuleŠIF(EXISTS('Table PolicyProduct LoanProvision MinBalanceCalcRule';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //loanTypeŠe_(v_construct(s_keys); 5);  //balanceTypeŠe_(v_construct(s_keys); 6)  //sequenceNumberŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LoanProvision MinBalanceCalcRule'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //loanTypeŠe_(v_construct(s_keys); 5);  //balanceTypeŠe_(v_construct(s_keys); 6)  //sequenceNumberŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 5195ece6 3797b161 0 502a9989 0 0 2
PP LP CP DividendRate TableRef(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRefŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠe_(v_construct(s_keys); 8)  //dividendRateTypeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct CoverageProduct DividendRate TableRef'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠe_(v_construct(s_keys); 8)  //dividendRateTypeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 502a9989 3797b161 0 657d10d8 0 0 2
SourceInfo(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table SourceInfoŠIF(EXISTS('Table SourceInfo';ŠŠe_(v_construct(s_keys); 0)  //sequenceNumberŠŠ);ŠŠŠ// then read from the table Š 'Table SourceInfo'[Še_(v_construct(s_keys); 0)  //sequenceNumberŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 657d10d8 3797b161 0 6268ac01 0 0 2
PPExt PaymentAssembly(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssemblyŠIF(EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly';ŠŠ'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct OLifEExtension PolicyProductExtension PaymentAssembly'[Š'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 6268ac01 3797b161 0 5c65142b 0 0 2
PP LP CP(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProductŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //indicatorCodeŠe_(v_construct(s_keys); 5);  //productCodeŠe_(v_construct(s_keys); 6)  //productVersionCodeŠŠ);ŠŠŠ// then read from the table ŠLOOKUPX( 'Table PolicyProduct LifeProduct CoverageProduct';Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //indicatorCodeŠe_(v_construct(s_keys); 5);  //productCodeŠe_(v_construct(s_keys); 6);  //productVersionCodeŠ'table effective date'(e_(v_construct(s_keys); 7));  //saleEffectiveDateŠ field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 5c65142b 3797b161 0 67f647fa 0 0 2
PP LoanProvision RV TableRef(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation TableRefŠIF(EXISTS('Table PolicyProduct LoanProvision RateVariation TableRef';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //loanTypeŠe_(v_construct(s_keys); 5)  //rateVariationCodeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LoanProvision RateVariation TableRef'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //loanTypeŠe_(v_construct(s_keys); 5)  //rateVariationCodeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 67f647fa 3797b161 0 52237118 0 0 2
PP LP CP COP UnderwritingClassProduct(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProductŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠ'PP LP CP COP'(s_keys; "CovOpt_Key");  //CovOpt_KeyŠ'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));  //underwritingClassŠe_(v_construct(s_keys); 11);  //underwritingSubClassŠ'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11);e_(v_construct(s_keys); 12));  //tobaccoPremiumBasisŠ'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11);e_(v_construct(s_keys); 12));e_(v_construct(s_keys); 13))  //issueGenderŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠ'PP LP CP COP'(s_keys; "CovOpt_Key");  //CovOpt_KeyŠ'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));  //underwritingClassŠe_(v_construct(s_keys); 11);  //underwritingSubClassŠ'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11);e_(v_construct(s_keys); 12));  //tobaccoPremiumBasisŠ'key7 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11);'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");'key4 lookup'("Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'PP LP CP COP'(s_keys; "CovOpt_Key");e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11);e_(v_construct(s_keys); 12));e_(v_construct(s_keys); 13))  //issueGenderŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 52237118 3797b161 0 7b0ba5b5 0 0 2
PP LP(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProductŠIF(EXISTS('Table PolicyProduct LifeProduct';ŠŠ'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct'[Š'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 7b0ba5b5 3797b161 0 79cfbafd 0 0 2
PP LoanProvision(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LoanProvisionŠIF(EXISTS('Table PolicyProduct LoanProvision';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //loanTypeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LoanProvision'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //loanTypeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 79cfbafd 3797b161 0 365f8be8 0 0 2
IssueGenderCC(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table IssueGenderCCŠIF(EXISTS('Table IssueGenderCC';ŠŠe_(v_construct(s_keys); 0)  //IssueGenderCC_id_extŠŠ);ŠŠŠ// then read from the table Š 'Table IssueGenderCC'[Še_(v_construct(s_keys); 0)  //IssueGenderCC_id_extŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 365f8be8 3797b161 0 29e6891b 0 0 2
PPExt PolicyComponentNonForRule(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension PolicyComponentNonForRuleŠIF(EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension PolicyComponentNonForRule';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //divTypeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct OLifEExtension PolicyProductExtension PolicyComponentNonForRule'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //divTypeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 29e6891b 3797b161 0 389978d6 0 0 2
PP LP CP DividendRate(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct DividendRateŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct DividendRate';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠe_(v_construct(s_keys); 8)  //dividendRateTypeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct CoverageProduct DividendRate'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠe_(v_construct(s_keys); 8)  //dividendRateTypeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 389978d6 3797b161 0 e81612b 0 0 2
PP LP CP COP(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProductŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠe_(v_construct(s_keys); 8)  //productCodeŠŠ);ŠŠŠ// then read from the table ŠLOOKUPX( 'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct';Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠe_(v_construct(s_keys); 8);  //productCodeŠ'table effective date'(e_(v_construct(s_keys); 9));  //saleEffectiveDateŠ field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 e81612b 3797b161 0 5c8165d2 0 0 2
PP LP CP COPExt ParticipantProduct(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProductŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProduct';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠ'PP LP CP COP'(s_keys; "CovOpt_Key")  //CovOpt_KeyŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct CoverageProduct CovOptionProduct OLifEExtension CovOptionProductExtension ParticipantProduct'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠ'PP LP CP COP'(s_keys; "CovOpt_Key")  //CovOpt_KeyŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 5c8165d2 3797b161 0 396ba7bb 0 0 2
PP LP CPExt ParticipantProduct(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProductŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProduct';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key")  //Coverage_KeyŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct CoverageProduct OLifEExtension CoverageProductExtension ParticipantProduct'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key")  //Coverage_KeyŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 396ba7bb 3797b161 0 21c4592b 0 0 2
PP Fee(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct FeeŠIF(EXISTS('Table PolicyProduct Fee';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //feeTypeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct Fee'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //feeTypeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 21c4592b 3797b161 0 27c8d1c4 0 0 2
PP JurisdictionApproval(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct JurisdictionApprovalŠIF(EXISTS('Table PolicyProduct JurisdictionApproval';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'key2 lookup'("Table PolicyProduct JurisdictionApproval"; 'PP'(s_keys; "Policy_Key");e_(v_construct(s_keys); 4))  //jurisdictionŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct JurisdictionApproval'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'key2 lookup'("Table PolicyProduct JurisdictionApproval"; 'PP'(s_keys; "Policy_Key");e_(v_construct(s_keys); 4))  //jurisdictionŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 27c8d1c4 3797b161 0 30678ba1 0 0 2
PP LoanProvision RV(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariationŠIF(EXISTS('Table PolicyProduct LoanProvision RateVariation';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //loanTypeŠe_(v_construct(s_keys); 5)  //rateVariationCodeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LoanProvision RateVariation'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //loanTypeŠe_(v_construct(s_keys); 5)  //rateVariationCodeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 30678ba1 3797b161 0 64cd4a07 0 0 2
PP NonForProvision(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct NonForProvisionŠIF(EXISTS('Table PolicyProduct NonForProvision';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //nonFortProvŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct NonForProvision'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //nonFortProvŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 64cd4a07 3797b161 0 1a38e30c 0 0 2
DefLifeInsMethodCC(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table DefLifeInsMethodCCŠIF(EXISTS('Table DefLifeInsMethodCC';ŠŠe_(v_construct(s_keys); 0)  //DefLifeInsMethodCC_id_extŠŠ);ŠŠŠ// then read from the table Š 'Table DefLifeInsMethodCC'[Še_(v_construct(s_keys); 0)  //DefLifeInsMethodCC_id_extŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 1a38e30c 3797b161 0 3500ac1d 0 0 2
PP PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailableŠIF(EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //commOptionŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct PolicyProductInfo CommOptionAvailable'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4)  //commOptionŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 3500ac1d 3797b161 0 289b8c1c 0 0 2
PP Dividend(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct DividendŠIF(EXISTS('Table PolicyProduct Dividend';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //divTypeŠe_(v_construct(s_keys); 5)  //divOYTOptTypeŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct Dividend'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠe_(v_construct(s_keys); 4);  //divTypeŠe_(v_construct(s_keys); 5)  //divOYTOptTypeŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 289b8c1c 3797b161 0 17788768 0 0 2
PP LP CP UnderwritingClassProduct(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProductŠIF(EXISTS('Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct';ŠŠ'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠ'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));  //underwritingClassŠe_(v_construct(s_keys); 9);  //underwritingSubClassŠ'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));e_(v_construct(s_keys); 9);e_(v_construct(s_keys); 10));  //tobaccoPremiumBasisŠ'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));e_(v_construct(s_keys); 9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));e_(v_construct(s_keys); 9);e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11))  //issueGenderŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct'[Š'PP'(s_keys; "Policy_Key");  //Policy_KeyŠ'PP LP CP'(s_keys; "Coverage_Key");  //Coverage_KeyŠ'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));  //underwritingClassŠe_(v_construct(s_keys); 9);  //underwritingSubClassŠ'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));e_(v_construct(s_keys); 9);e_(v_construct(s_keys); 10));  //tobaccoPremiumBasisŠ'key6 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));e_(v_construct(s_keys); 9);'key5 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");'key3 lookup'("Table PolicyProduct LifeProduct CoverageProduct UnderwritingClassProduct"; 'PP'(s_keys; "Policy_Key");'PP LP CP'(s_keys; "Coverage_Key");e_(v_construct(s_keys); 8));e_(v_construct(s_keys); 9);e_(v_construct(s_keys); 10));e_(v_construct(s_keys); 11))  //issueGenderŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 17788768 3797b161 0 49f6bff5 0 0 2
PP PPInfo(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfoŠIF(EXISTS('Table PolicyProduct PolicyProductInfo';ŠŠ'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct PolicyProductInfo'[Š'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
F1 49f6bff5 3797b161 0 0 0 0 2
PP LP LifeUSAProduct(s_keys; field_name)
Funktion
// Looks up the plan info for field_name from table Table PolicyProduct LifeProduct LifeUSAProductŠIF(EXISTS('Table PolicyProduct LifeProduct LifeUSAProduct';ŠŠ'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ);ŠŠŠ// then read from the table Š 'Table PolicyProduct LifeProduct LifeUSAProduct'[Š'PP'(s_keys; "Policy_Key")  //Policy_KeyŠŠ] (field_name);ŠŠ// Else return error messageŠ"NoProdInfoFound"Š)
A0 25ab32b1 0 0 0 0 0 0

T0 546355df 0 0 0 0 0 0

I0 356a5093 0 0 0 0 0 0

-
X0
O0
E0
L0
B0
P0
F0
A0
T0
;Offset=00000000
