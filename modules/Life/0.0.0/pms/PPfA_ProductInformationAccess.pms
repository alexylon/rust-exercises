;1	24.07.2013 21:19:48	null	null
X0 003f40d0 0 0 0 0 0 0

O0 003f3f8c 0 0 0 0 0 0

E0 003f3ff8 0 0 0 0 0 0

L0 003f4064 0 0 0 0 0 0

B0 003f4214 0 0 0 0 0 0

P0 003f413c 0 0 0 0 0 0

F0 003f41a8 0 003f2928 0 0 0 0

F1 003f2928 003f41a8 003f46f0 003f5008 0 0 2
-- Utility Functions --
Funktion

F1 003f46f0 003f2928 0 003f4870 0 0 2
Table Effective Date(effectiveDate)
Funktion
DATE(effectiveDate;0;0;0;"YMD") //(year(effective_date) * 10000) + (month(effective_date) * 100) + day(effective_date)ä
F1 003f4870 003f2928 003f49a8 0 0 0 2
-- Wildcard Lookup Functions --
Funktion

F1 003f49a8 003f4870 0 003f4b98 0 0 2
key2 lookup(tablename; key1; key2)
Funktion
IF (EXISTS(table(tablename);key1;key2) ; çä  key2 ; çä  IF (EXISTS(table(tablename);key1;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & " not found in " & tablename)çä    )çä)çä)
F1 003f4b98 003f4870 0 003f4e18 0 0 2
key3 lookup(tablename; key1; key2; key3)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3) ; çä  key3 ; çä  IF (EXISTS(table(tablename);key1;key2;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & " not found in " & tablename)çä    )çä)çä)
F1 003f4e18 003f4870 0 003f4f78 0 0 2
key4 lookup(tablename; key1; key2; key3; key4)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4) ; çä  key4 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;1000) ; çä    1000 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;0) ; çä      0 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & " not found in " & tablename)çä    )çä)çä)
F1 003f4f78 003f4870 0 01e607b0 0 0 2
key5 lookup(tablename; key1; key2; key3; key4; key5)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5) ; çä  key5 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & " not found in " & tablename)çä    )çä)çä)
F1 01e607b0 003f4870 0 01e605a8 0 0 2
key6 lookup(tablename; key1; key2; key3; key4; key5; key6)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6) ; çä  key6 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & " not found in " & tablename)çä    )çä)çä)
F1 01e605a8 003f4870 0 01e60cf0 0 0 2
key7 lookup(tablename; key1; key2; key3; key4; key5; key6; key7)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7) ; çä  key7 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf0 003f4870 0 01e60cf1 0 0 2
key8 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8) ; çä  key8 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & key8 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf1 003f4870 0 01e60cf2 0 0 2
key9 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9) ; çä  key9 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & " not found in " & tablename)çä    )çä)çä)
F1 01e60cf2 003f4870 0 0 0 0 2
key10 lookup(tablename; key1; key2; key3; key4; key5; key6; key7; key8, key9, key10)
Funktion
IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;key10) ; çä  key10 ; çä  IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;0) ; çä    0 ; çä    IF (EXISTS(table(tablename);key1;key2;key3;key4;key5;key6;key7;key8;key9;1000) ; çä      1000 ; çä      ERROR("Key fields " & key1 & "/" & key2 & "/" & key3 & "/" & key4 & "/" & key5 & "/" & key6 & "/" & key7 & "/" & key8 & "/" & key9 & "/" & key10 & " not found in " & tablename)çä    )çä)çä)
F1 003f5008 003f41a8 003f5fe0 0 0 0 2
-- NEW Table Access Functions --
Funktion

F1 003f5fe0 003f5008 003f61a0 0 0 0 2
-- Table Access functions --
Funktion

F1 003f61a0 003f5fe0 003f6350 0 0 0 2
--
Funktion

F1 003f6350 003f61a0 0 2dc4f71d 0 0 2
--
Funktion

F1 2dc4f71d 003f61a0 0 370e1bda 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteriaçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3) //operationçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 370e1bda 003f61a0 0 6c272eb4 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9); //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9);  //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c272eb4 003f61a0 0 221f7b7a 0 0 2
PP IPInfo Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 221f7b7a 003f61a0 0 76370b95 0 0 2
PP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76370b95 003f61a0 0 40d78e63 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValueçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40d78e63 003f61a0 0 4dd2fd5c 0 0 2
IP IPInfoExt AllowedArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProductçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //arrTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //arrTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dd2fd5c 003f61a0 0 72dc3e95 0 0 2
PP AP FP FOP DestIP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72dc3e95 003f61a0 0 58ac133 0 0 2
PP AP FP FOP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58ac133 003f61a0 0 47e6bcf7 0 0 2
PP PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailableçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47e6bcf7 003f61a0 0 7280ffb6 0 0 2
ScheduledPaymentCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ScheduledPaymentCCçäIF (EXISTS('Table ScheduledPaymentCC';e_(v_construct(s_keys);0) //ScheduledPaymentCC_id_extçä) ; çä   // then read from the table çä'Table ScheduledPaymentCC'[e_(v_construct(s_keys);0) //ScheduledPaymentCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7280ffb6 003f61a0 0 6bd2efda 0 0 2
Party Producer CarrierAppointment Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment AttachmentçäIF (EXISTS('Table Party Producer CarrierAppointment Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6bd2efda 003f61a0 0 d46f4f3 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef ExtensionçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9); //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9);  //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d46f4f3 003f61a0 0 4cff764 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4cff764 003f61a0 0 5e102ccd 0 0 2
IP IPInfoExt MVA TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e102ccd 003f61a0 0 6db63769 0 0 2
PP AP FP FOP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6db63769 003f61a0 0 23e91f18 0 0 2
RelationshipCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table RelationshipCCçäIF (EXISTS('Table RelationshipCC';e_(v_construct(s_keys);0) //RelationshipCC_id_extçä) ; çä   // then read from the table çä'Table RelationshipCC'[e_(v_construct(s_keys);0) //RelationshipCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 23e91f18 003f61a0 0 2fde7e52 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2fde7e52 003f61a0 0 2d5074f5 0 0 2
PP AP FP FOPExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d5074f5 003f61a0 0 414e843a 0 0 2
PP IPInfoExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 414e843a 003f61a0 0 1aa5d783 0 0 2
PP AP AnnuitizationDateRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct AnnuitizationDateRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1aa5d783 003f61a0 0 25ac7ad1 0 0 2
PP PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25ac7ad1 003f61a0 0 45641add 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 45641add 003f61a0 0 7ec7d693 0 0 2
StatutoryCompanyCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table StatutoryCompanyCCçäIF (EXISTS('Table StatutoryCompanyCC';e_(v_construct(s_keys);0) //StatutoryCompanyCC_id_extçä) ; çä   // then read from the table çä'Table StatutoryCompanyCC'[e_(v_construct(s_keys);0) //StatutoryCompanyCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ec7d693 003f61a0 0 22f7815c 0 0 2
FS(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table FinancialStatementçäIF (EXISTS('Table FinancialStatement';e_(v_construct(s_keys);0) //statementTypeçä) ; çä   // then read from the table çä'Table FinancialStatement'[e_(v_construct(s_keys);0) //statementTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22f7815c 003f61a0 0 61d607be 0 0 2
PPExt QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61d607be 003f61a0 0 1fbb3b6a 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1fbb3b6a 003f61a0 0 6fe0e5ca 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fe0e5ca 003f61a0 0 45dfb332 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 45dfb332 003f61a0 0 1046ba79 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1046ba79 003f61a0 0 474d61e2 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship EntityType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 474d61e2 003f61a0 0 a87dfc2 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a87dfc2 003f61a0 0 7aecdfd0 0 0 2
PP AP FP FOP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7aecdfd0 003f61a0 0 486da459 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 486da459 003f61a0 0 32239591 0 0 2
PP AP FP FOPExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32239591 003f61a0 0 6fe84ed3 0 0 2
Party Carrier License LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License LineOfAuthority ExamçäIF (EXISTS('Table Party Carrier License LineOfAuthority Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä) ; çä   // then read from the table çä'Table Party Carrier License LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fe84ed3 003f61a0 0 601a6c71 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 601a6c71 003f61a0 0 1112fe2f 0 0 2
PP TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct TableRefçäIF (EXISTS('Table PolicyProduct TableRef';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct TableRef'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1112fe2f 003f61a0 0 7c87c0af 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c87c0af 003f61a0 0 42c60d86 0 0 2
PP IPInfoExt IndexCalc(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalcçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //periodModeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //periodModeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42c60d86 003f61a0 0 2f0563c6 0 0 2
IP IPInfo QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntityçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f0563c6 003f61a0 0 2721675 0 0 2
PP AP FeatureTransactionProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2721675 003f61a0 0 13799a80 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13799a80 003f61a0 0 228b093f 0 0 2
PP Breakpoint(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct BreakpointçäIF (EXISTS('Table PolicyProduct Breakpoint';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct Breakpoint'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 228b093f 003f61a0 0 2f5458b6 0 0 2
Party Producer License Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table Party Producer License Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer License Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f5458b6 003f61a0 0 5b7c9212 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b7c9212 003f61a0 0 1aa15e2c 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1aa15e2c 003f61a0 0 116ab66c 0 0 2
PPExt FAVCodeInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FAVCodeInfoçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FAVCodeInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FAVCodeInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 116ab66c 003f61a0 0 2a69efc6 0 0 2
PP Ownership QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a69efc6 003f61a0 0 15a91cc2 0 0 2
PP IPInfoExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15a91cc2 003f61a0 0 687d046d 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 687d046d 003f61a0 0 2f70c17 0 0 2
PP AP FP FOP ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct ExclusionInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct ExclusionInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f70c17 003f61a0 0 4937daf9 0 0 2
PP AP FP FOP BenefitChangeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4937daf9 003f61a0 0 7f867f77 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption ExclusionInvestProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption ExclusionInvestProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f867f77 003f61a0 0 2b81a741 0 0 2
DistributionAgreement CommRemittance(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement CommRemittanceçäIF (EXISTS('Table DistributionAgreement CommRemittance';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement CommRemittance'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b81a741 003f61a0 0 87fcb0b 0 0 2
DistributionAgreement PPInfo APExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo AnnuityProductExcludeçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo AnnuityProductExclude';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo AnnuityProductExclude'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 87fcb0b 003f61a0 0 2d02b667 0 0 2
Party Producer CarrierAppointment Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer CarrierAppointment Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d02b667 003f61a0 0 7b9c34a7 0 0 2
PeriodCertainCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PeriodCertainCCçäIF (EXISTS('Table PeriodCertainCC';e_(v_construct(s_keys);0) //PeriodCertainCC_id_extçä) ; çä   // then read from the table çä'Table PeriodCertainCC'[e_(v_construct(s_keys);0) //PeriodCertainCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b9c34a7 003f61a0 0 4dd28a27 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dd28a27 003f61a0 0 4f64ad0e 0 0 2
IP IPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'key4 lookup'("Table InvestProduct InvestProductInfo JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçä'key4 lookup'("Table InvestProduct InvestProductInfo JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f64ad0e 003f61a0 0 2ae9efc8 0 0 2
PP LoanProvision RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ae9efc8 003f61a0 0 1da37887 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1da37887 003f61a0 0 6eb9ac82 0 0 2
BestDayToCallCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table BestDayToCallCCçäIF (EXISTS('Table BestDayToCallCC';e_(v_construct(s_keys);0) //BestDayToCallCC_id_extçä) ; çä   // then read from the table çä'Table BestDayToCallCC'[e_(v_construct(s_keys);0) //BestDayToCallCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6eb9ac82 003f61a0 0 79941d65 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79941d65 003f61a0 0 1bba330f 0 0 2
SourceInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceInfoçäIF (EXISTS('Table SourceInfo';e_(v_construct(s_keys);0) //sequenceNumberçä) ; çä   // then read from the table çä'Table SourceInfo'[e_(v_construct(s_keys);0) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1bba330f 003f61a0 0 247c2a5e 0 0 2
PP AP FP FOP AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 247c2a5e 003f61a0 0 11557b66 0 0 2
Party Producer License Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer License Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11557b66 003f61a0 0 7f200523 0 0 2
PP AP IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //taxWithholdingPlaceçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //taxWithholdingPlaceçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f200523 003f61a0 0 5325740d 0 0 2
PP Reward(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct RewardçäIF (EXISTS('Table PolicyProduct Reward';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Reward'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5325740d 003f61a0 0 7f61595d 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f61595d 003f61a0 0 645f2855 0 0 2
PP FreelookInvestRuleProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProductçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 645f2855 003f61a0 0 36045895 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36045895 003f61a0 0 2b6b03f 0 0 2
PP AP IncomePayoutProductOption JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b6b03f 003f61a0 0 4ae45962 0 0 2
PP AP IncomePayoutProductOption FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptConflict';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptConflict'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ae45962 003f61a0 0 608e0b2 0 0 2
Party Carrier License Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee TableRefçäIF (EXISTS('Table Party Carrier License Fee TableRef';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee TableRef'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 608e0b2 003f61a0 0 8ca068d 0 0 2
PP PPInfo BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo BusinessProcessAllowedçäIF (EXISTS('Table PolicyProduct PolicyProductInfo BusinessProcessAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo BusinessProcessAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8ca068d 003f61a0 0 42f5db50 0 0 2
Party Carrier License(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier LicenseçäIF (EXISTS('Table Party Carrier License';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier License'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42f5db50 003f61a0 0 74d083b6 0 0 2
Party Producer Registration RegistrationJurisdiction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdictionçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 74d083b6 003f61a0 0 b4803f0 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b4803f0 003f61a0 0 6e4cbe42 0 0 2
Party Producer CarrierAppointment Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e4cbe42 003f61a0 0 4f7f193c 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f7f193c 003f61a0 0 7df393b0 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7df393b0 003f61a0 0 14bcbae7 0 0 2
IP RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation RateVariationByVolumeçäIF (EXISTS('Table InvestProduct RateVariation RateVariationByVolume';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation RateVariationByVolume'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 14bcbae7 003f61a0 0 776989d4 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 776989d4 003f61a0 0 4be12f88 0 0 2
PP AP IncomePayoutProductOption AllowedChange AllowedChangeMode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedChangeModeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedChangeMode';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedChangeMode'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4be12f88 003f61a0 0 74796e20 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenePeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodSickOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 74796e20 003f61a0 0 21526cb2 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef ExtensionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 21526cb2 003f61a0 0 19afe2ae 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 19afe2ae 003f61a0 0 7588be9f 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7588be9f 003f61a0 0 290d5967 0 0 2
PP PPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PolicyProductInfo JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct PolicyProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct PolicyProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 290d5967 003f61a0 0 39f0b5c 0 0 2
Party Organization OrganizationFinancialData Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialData AttachmentçäIF (EXISTS('Table Party Organization OrganizationFinancialData Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39f0b5c 003f61a0 0 53d77c8c 0 0 2
PP AP FP FOPExt Ownership JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 53d77c8c 003f61a0 0 9d29158 0 0 2
Party Carrier License Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Attachment AttachmentReferenceçäIF (EXISTS('Table Party Carrier License Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9d29158 003f61a0 0 3a60a67b 0 0 2
PP AP FP FOPExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a60a67b 003f61a0 0 48f9d4dd 0 0 2
Party EMailAddress(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party EMailAddressçäIF (EXISTS('Table Party EMailAddress';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party EMailAddress'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 48f9d4dd 003f61a0 0 62f50613 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62f50613 003f61a0 0 7e225592 0 0 2
PP TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e225592 003f61a0 0 3cb77d5f 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3cb77d5f 003f61a0 0 61fce21e 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61fce21e 003f61a0 0 442c6a50 0 0 2
PP AP FP FOP BenefitChangeAllowed AllowedPercent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedPercentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedPercent';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedPercent'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 442c6a50 003f61a0 0 272b71e2 0 0 2
IP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table InvestProduct Attachment SignatureInfo'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 272b71e2 003f61a0 0 397f87e7 0 0 2
Party Carrier License Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table Party Carrier License Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Carrier License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Carrier License Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Carrier License Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 397f87e7 003f61a0 0 4381caaa 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4381caaa 003f61a0 0 258bacad 0 0 2
PP LoanProvision RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariationçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 258bacad 003f61a0 0 13d662e7 0 0 2
PP AP FP FOP BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13d662e7 003f61a0 0 64606d35 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64606d35 003f61a0 0 2f63dc68 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f63dc68 003f61a0 0 63ef26ad 0 0 2
Party Producer CarrierAppointment Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee JurisdictionApprovalçäIF (EXISTS('Table Party Producer CarrierAppointment Fee JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer CarrierAppointment Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63ef26ad 003f61a0 0 5a91a9 0 0 2
Party Producer CarrierAppointment Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer CarrierAppointment Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a91a9 003f61a0 0 63a60060 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63a60060 003f61a0 0 41ad558a 0 0 2
AllowedDayCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AllowedDayCCçäIF (EXISTS('Table AllowedDayCC';e_(v_construct(s_keys);0) //AllowedDayCC_id_extçä) ; çä   // then read from the table çä'Table AllowedDayCC'[e_(v_construct(s_keys);0) //AllowedDayCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41ad558a 003f61a0 0 172ef67f 0 0 2
BusinessMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table BusinessMethodCCçäIF (EXISTS('Table BusinessMethodCC';e_(v_construct(s_keys);0) //BusinessMethodCC_id_extçä) ; çä   // then read from the table çä'Table BusinessMethodCC'[e_(v_construct(s_keys);0) //BusinessMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 172ef67f 003f61a0 0 2e21a56e 0 0 2
PP AP FP FOP AdditionalArrClassification(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalArrClassificationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalArrClassification';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalArrClassification'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e21a56e 003f61a0 0 27220b5b 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27220b5b 003f61a0 0 1963e5da 0 0 2
PP AP FP FOPExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1963e5da 003f61a0 0 678f1214 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 678f1214 003f61a0 0 3e3fbe38 0 0 2
SourceOfFundsCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SourceOfFundsCCçäIF (EXISTS('Table SourceOfFundsCC';e_(v_construct(s_keys);0) //SourceOfFundsCC_id_extçä) ; çä   // then read from the table çä'Table SourceOfFundsCC'[e_(v_construct(s_keys);0) //SourceOfFundsCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e3fbe38 003f61a0 0 24757e5 0 0 2
PP IPInfoExt MVA TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24757e5 003f61a0 0 1ce08bfc 0 0 2
Party Producer License Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer License Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer License Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ce08bfc 003f61a0 0 47c0aaa8 0 0 2
IP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee JurisdictionApprovalçäIF (EXISTS('Table InvestProduct Fee JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçä'key3 lookup'("Table InvestProduct Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct Fee JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçä'key3 lookup'("Table InvestProduct Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47c0aaa8 003f61a0 0 6aa4c6fa 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6aa4c6fa 003f61a0 0 6e65eaa 0 0 2
Party Producer CarrierAppointment Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee Attachment SignatureInfoçäIF (EXISTS('Table Party Producer CarrierAppointment Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e65eaa 003f61a0 0 13b9ff58 0 0 2
PPExt QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 13b9ff58 003f61a0 0 56a05feb 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 56a05feb 003f61a0 0 49a7315c 0 0 2
PP AP FP FOP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49a7315c 003f61a0 0 6d55bb7d 0 0 2
PP AP FP FOP PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d55bb7d 003f61a0 0 22467908 0 0 2
PP AP FP FOP AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22467908 003f61a0 0 67e42540 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67e42540 003f61a0 0 5afc97ef 0 0 2
PP AP FP FOPExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //rateVariationCodeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //rateVariationCodeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5afc97ef 003f61a0 0 1790a2ca 0 0 2
PP AP FP FOP AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8);  //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1790a2ca 003f61a0 0 40700322 0 0 2
PP PPInfo AllowedFeatureTransaction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo AllowedFeatureTransactionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo AllowedFeatureTransaction';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo AllowedFeatureTransaction'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40700322 003f61a0 0 580d2163 0 0 2
PP APExt ParticipantProduct EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 580d2163 003f61a0 0 888aa05 0 0 2
PP AP FP FOP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 888aa05 003f61a0 0 145d622 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity Market";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 145d622 003f61a0 0 8f8f344 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8f8f344 003f61a0 0 515aee4e 0 0 2
IncomeOptionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IncomeOptionCCçäIF (EXISTS('Table IncomeOptionCC';e_(v_construct(s_keys);0) //IncomeOptionCC_id_extçä) ; çä   // then read from the table çä'Table IncomeOptionCC'[e_(v_construct(s_keys);0) //IncomeOptionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 515aee4e 003f61a0 0 ad7fc04 0 0 2
PPExt QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ad7fc04 003f61a0 0 7ad073ad 0 0 2
PP AP FP FOP IncomeOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ad073ad 003f61a0 0 1b1304d4 0 0 2
PP LapseProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LapseProvisionçäIF (EXISTS('Table PolicyProduct LapseProvision';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct LapseProvision'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b1304d4 003f61a0 0 1954c37b 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1954c37b 003f61a0 0 76142397 0 0 2
PP AP IncomePayoutProductOption DateCollection(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption DateCollectionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption DateCollection';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption DateCollection'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76142397 003f61a0 0 41c68918 0 0 2
PP DeliveryInfo DeliveryDestination(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DeliveryInfo DeliveryDestinationçäIF (EXISTS('Table PolicyProduct DeliveryInfo DeliveryDestination';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DeliveryInfo DeliveryDestination'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41c68918 003f61a0 0 9cd6c49 0 0 2
PP Ownership AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9cd6c49 003f61a0 0 12ea813e 0 0 2
IP InvestProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductXLatçäIF (EXISTS('Table InvestProduct InvestProductXLat';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct InvestProductXLat'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12ea813e 003f61a0 0 677ff510 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 677ff510 003f61a0 0 3dd83168 0 0 2
DistributionAgreement PPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçä'key3 lookup'("Table DistributionAgreement PolicyProductInfo JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçä'key3 lookup'("Table DistributionAgreement PolicyProductInfo JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3dd83168 003f61a0 0 612eebe 0 0 2
PP CMProduct CommOptionAvailable FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable FeatureOptConflictçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable FeatureOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable FeatureOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 612eebe 003f61a0 0 5e2844c1 0 0 2
PP LoanProvision RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e2844c1 003f61a0 0 58323cb2 0 0 2
PP Authorization QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58323cb2 003f61a0 0 85cbca1 0 0 2
PP AP FP FOP SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 85cbca1 003f61a0 0 207ae5be 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 207ae5be 003f61a0 0 1139ae88 0 0 2
IP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct AttachmentçäIF (EXISTS('Table InvestProduct Attachment';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct Attachment'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1139ae88 003f61a0 0 4079fcad 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4079fcad 003f61a0 0 46a1c3cc 0 0 2
IP IPInfo Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46a1c3cc 003f61a0 0 7f64cabc 0 0 2
PP PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f64cabc 003f61a0 0 aa159f8 0 0 2
Party Organization UnionInvolvementInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization UnionInvolvementInfoçäIF (EXISTS('Table Party Organization UnionInvolvementInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization UnionInvolvementInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 aa159f8 003f61a0 0 25e2ef0b 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25e2ef0b 003f61a0 0 21931d4b 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 21931d4b 003f61a0 0 75312dd 0 0 2
PP Ownership AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationshipçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75312dd 003f61a0 0 52251d3a 0 0 2
PP AP FP FOP RoleRelationRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52251d3a 003f61a0 0 28cdb8bc 0 0 2
PP Ownership JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçä'key3 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçä'key3 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 28cdb8bc 003f61a0 0 6e1c2ad0 0 0 2
PP PPInfo CommissionScheduleKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommissionScheduleKeyçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommissionScheduleKey';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommissionScheduleKey'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e1c2ad0 003f61a0 0 29c126f8 0 0 2
QualifiedPlanCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table QualifiedPlanCCçäIF (EXISTS('Table QualifiedPlanCC';e_(v_construct(s_keys);0) //QualifiedPlanCC_id_extçä) ; çä   // then read from the table çä'Table QualifiedPlanCC'[e_(v_construct(s_keys);0) //QualifiedPlanCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29c126f8 003f61a0 0 25c673f1 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25c673f1 003f61a0 0 27474426 0 0 2
Party Producer CarrierAppointment DistributionChannelInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment DistributionChannelInfoçäIF (EXISTS('Table Party Producer CarrierAppointment DistributionChannelInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment DistributionChannelInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27474426 003f61a0 0 7d490683 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d490683 003f61a0 0 25850873 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25850873 003f61a0 0 55511ee5 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenePeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodAccOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenePeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55511ee5 003f61a0 0 629cbfdf 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 629cbfdf 003f61a0 0 5a28d08e 0 0 2
PP AP FP FOP AllocTypeProduct AmountProduct EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct EnumeratedValueçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a28d08e 003f61a0 0 6b4bf17d 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b4bf17d 003f61a0 0 42a55101 0 0 2
Party Producer CarrierAppointment DistributionAgreementInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment DistributionAgreementInfoçäIF (EXISTS('Table Party Producer CarrierAppointment DistributionAgreementInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment DistributionAgreementInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42a55101 003f61a0 0 4f6a45b9 0 0 2
PP AP FP FOP BenefitChangeAllowed AllowedChangeMode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedChangeModeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedChangeMode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedChangeMode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f6a45b9 003f61a0 0 605dd9 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 605dd9 003f61a0 0 49b95daa 0 0 2
PP AP FP FOP DisabilityHealthProvisions ElimPeriodSickOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodSickOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodSickOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodSickOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49b95daa 003f61a0 0 4918cf64 0 0 2
PP AdminTransactionProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProductçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4918cf64 003f61a0 0 673e6dfe 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 673e6dfe 003f61a0 0 4e249243 0 0 2
IP IPInfoExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e249243 003f61a0 0 16f45b0c 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16f45b0c 003f61a0 0 47d9c5f2 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47d9c5f2 003f61a0 0 4c32ad04 0 0 2
PP AP FP FOP SurrenderChargeSchedule ChargePctSchedule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule ChargePctScheduleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule ChargePctSchedule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule ChargePctSchedule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c32ad04 003f61a0 0 528a9225 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude EntityTypeçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude EntityType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude EntityType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 528a9225 003f61a0 0 5a6a5ce8 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef ExtensionçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a6a5ce8 003f61a0 0 5092bbd9 0 0 2
IP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct JurisdictionApprovalçäIF (EXISTS('Table InvestProduct JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçä'key2 lookup'("Table InvestProduct JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçä'key2 lookup'("Table InvestProduct JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5092bbd9 003f61a0 0 dae373d 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOptionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 dae373d 003f61a0 0 6852fbde 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef ExtensionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4); //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4);  //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6852fbde 003f61a0 0 3c1a1346 0 0 2
PPExt Activity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension ActivityçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c1a1346 003f61a0 0 d3e5b9a 0 0 2
PP AP FP FOP AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d3e5b9a 003f61a0 0 4d9c32d4 0 0 2
PaymentFormCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PaymentFormCCçäIF (EXISTS('Table PaymentFormCC';e_(v_construct(s_keys);0) //PaymentFormCC_id_extçä) ; çä   // then read from the table çä'Table PaymentFormCC'[e_(v_construct(s_keys);0) //PaymentFormCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d9c32d4 003f61a0 0 7a0cfb4a 0 0 2
PP AP IncomePayoutProductOption Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a0cfb4a 003f61a0 0 42f16c94 0 0 2
IP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct FeeçäIF (EXISTS('Table InvestProduct Fee';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42f16c94 003f61a0 0 38d849e5 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 38d849e5 003f61a0 0 1277741e 0 0 2
PP AP FP FOP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1277741e 003f61a0 0 5fbd702b 0 0 2
AgeRestrictionRoleCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AgeRestrictionRoleCCçäIF (EXISTS('Table AgeRestrictionRoleCC';e_(v_construct(s_keys);0) //AgeRestrictionRoleCC_id_extçä) ; çä   // then read from the table çä'Table AgeRestrictionRoleCC'[e_(v_construct(s_keys);0) //AgeRestrictionRoleCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5fbd702b 003f61a0 0 7b97a28 0 0 2
PP IPInfo QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b97a28 003f61a0 0 3b15034 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b15034 003f61a0 0 6a582bf4 0 0 2
Party Producer Registration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer RegistrationçäIF (EXISTS('Table Party Producer Registration';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a582bf4 003f61a0 0 34778e20 0 0 2
IP IPInfo QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity MarketçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity Market';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //marketTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity Market';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //marketTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34778e20 003f61a0 0 741c62d1 0 0 2
Party Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Attachment SignatureInfoçäIF (EXISTS('Table Party Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 741c62d1 003f61a0 0 1fd28f55 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1fd28f55 003f61a0 0 595a493f 0 0 2
Party DesignationInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party DesignationInfoçäIF (EXISTS('Table Party DesignationInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party DesignationInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 595a493f 003f61a0 0 4b35d72c 0 0 2
PP AP FP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'key3 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'key3 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4b35d72c 003f61a0 0 3bf84bf8 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3bf84bf8 003f61a0 0 30a086fd 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30a086fd 003f61a0 0 5ada125f 0 0 2
DistributionAgreement QualifiedPlanEntityExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExcludeçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ada125f 003f61a0 0 35db88f3 0 0 2
IP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct Attachment AttachmentReference';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct Attachment AttachmentReference'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35db88f3 003f61a0 0 7770247 0 0 2
Party Producer ProducerAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer ProducerAgreementçäIF (EXISTS('Table Party Producer ProducerAgreement';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer ProducerAgreement'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7770247 003f61a0 0 6b37a258 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b37a258 003f61a0 0 24b7715c 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24b7715c 003f61a0 0 66e57adc 0 0 2
PP IPInfoExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 66e57adc 003f61a0 0 2ffacc3b 0 0 2
PP AP FP FOP DisabilityHealthProvisions MedProviderOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MedProviderOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MedProviderOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MedProviderOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ffacc3b 003f61a0 0 1aa425c0 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedTransType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedTransType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1aa425c0 003f61a0 0 11416591 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11416591 003f61a0 0 1826b1f1 0 0 2
PP Ownership AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1826b1f1 003f61a0 0 24ba6777 0 0 2
PP AP FP FeatureRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24ba6777 003f61a0 0 1213091f 0 0 2
Party Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Attachment AttachmentReferenceçäIF (EXISTS('Table Party Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1213091f 003f61a0 0 51602a7e 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51602a7e 003f61a0 0 3060ce51 0 0 2
IP QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity EntityType';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity EntityType'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3060ce51 003f61a0 0 3cc23171 0 0 2
PPExt FundAvailability(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailabilityçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //productCodeçäe_(v_construct(s_keys);5); //statutoryCompanyCodeçä'key4 lookup'("Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //productCodeçäe_(v_construct(s_keys);5);  //statutoryCompanyCodeçä'key4 lookup'("Table PolicyProduct OLifEExtension PolicyProductExtension FundAvailability";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3cc23171 003f61a0 0 6c921647 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9); //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9);  //balanceTypeçäe_(v_construct(s_keys);10) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c921647 003f61a0 0 52972d77 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52972d77 003f61a0 0 6e7c679b 0 0 2
DistributionAgreement PPInfo BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo BusinessProcessAllowedçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo BusinessProcessAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo BusinessProcessAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e7c679b 003f61a0 0 39b22c24 0 0 2
PP LoanProvision RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 39b22c24 003f61a0 0 4792b9f8 0 0 2
PP AP FP FeatureConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4792b9f8 003f61a0 0 400d755b 0 0 2
PP AP FP FOP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8); //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8);  //balanceTypeçäe_(v_construct(s_keys);9) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 400d755b 003f61a0 0 6e7ad613 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValueçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3) //operationçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e7ad613 003f61a0 0 15e4f2c5 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15e4f2c5 003f61a0 0 7f8ead4f 0 0 2
PP IPInfo FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f8ead4f 003f61a0 0 31e8717f 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31e8717f 003f61a0 0 234a9bcd 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 234a9bcd 003f61a0 0 1caf206f 0 0 2
IP IPInfo Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo FeeçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1caf206f 003f61a0 0 6eda0892 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6eda0892 003f61a0 0 4dba530f 0 0 2
Party Address(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party AddressçäIF (EXISTS('Table Party Address';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Address'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4dba530f 003f61a0 0 ce9ea7d 0 0 2
PP PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ce9ea7d 003f61a0 0 46aa4d11 0 0 2
Party Producer CarrierAppointment ServiceModelContact(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment ServiceModelContactçäIF (EXISTS('Table Party Producer CarrierAppointment ServiceModelContact';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment ServiceModelContact'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46aa4d11 003f61a0 0 4a84d688 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a84d688 003f61a0 0 751674dc 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 751674dc 003f61a0 0 72f47e26 0 0 2
PP AP FP FOP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72f47e26 003f61a0 0 2017d787 0 0 2
IP RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct RateVariation Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //rateVariationCodeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation Attachment SignatureInfo'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //rateVariationCodeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2017d787 003f61a0 0 25f6707e 0 0 2
PP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25f6707e 003f61a0 0 4b6c9bb5 0 0 2
PP Ownership AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4b6c9bb5 003f61a0 0 73fbd24 0 0 2
AuthorizationEntityCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AuthorizationEntityCCçäIF (EXISTS('Table AuthorizationEntityCC';e_(v_construct(s_keys);0) //AuthorizationEntityCC_id_extçä) ; çä   // then read from the table çä'Table AuthorizationEntityCC'[e_(v_construct(s_keys);0) //AuthorizationEntityCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73fbd24 003f61a0 0 4f1effc4 0 0 2
PP IPInfo Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f1effc4 003f61a0 0 2e49e043 0 0 2
DistributionChannelCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionChannelCCçäIF (EXISTS('Table DistributionChannelCC';e_(v_construct(s_keys);0) //DistributionChannelCC_id_extçä) ; çä   // then read from the table çä'Table DistributionChannelCC'[e_(v_construct(s_keys);0) //DistributionChannelCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e49e043 003f61a0 0 4666532c 0 0 2
IP IPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfoçäIF (EXISTS('Table InvestProduct InvestProductInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4666532c 003f61a0 0 47d2b30b 0 0 2
PP AP FP FOP AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47d2b30b 003f61a0 0 1e987baa 0 0 2
PP AP FP FOP RequisiteIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RequisiteInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RequisiteInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RequisiteInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e987baa 003f61a0 0 655f8539 0 0 2
PP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 655f8539 003f61a0 0 5ba29134 0 0 2
PP LoanProvision RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation TableRefçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5ba29134 003f61a0 0 4b915836 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4b915836 003f61a0 0 598ce64d 0 0 2
PP DeliveryInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DeliveryInfoçäIF (EXISTS('Table PolicyProduct DeliveryInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DeliveryInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 598ce64d 003f61a0 0 556ce2c3 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValueçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 556ce2c3 003f61a0 0 79bf617 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //transTypeçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //transTypeçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79bf617 003f61a0 0 790fed2 0 0 2
PP PPInfo CommOptionAvailable FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable FeatureOptConflictçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable FeatureOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable FeatureOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 790fed2 003f61a0 0 7d38726a 0 0 2
SplitPctIncrementsCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table SplitPctIncrementsCCçäIF (EXISTS('Table SplitPctIncrementsCC';e_(v_construct(s_keys);0) //SplitPctIncrementsCC_id_extçä) ; çä   // then read from the table çä'Table SplitPctIncrementsCC'[e_(v_construct(s_keys);0) //SplitPctIncrementsCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d38726a 003f61a0 0 9b3696c 0 0 2
Party Producer Registration RegistrationJurisdiction Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdiction AttachmentçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 9b3696c 003f61a0 0 317d5444 0 0 2
IP IPInfo Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 317d5444 003f61a0 0 21517541 0 0 2
PeriodCertainCC FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PeriodCertainCC FeatureOptConflictçäIF (EXISTS('Table PeriodCertainCC FeatureOptConflict';e_(v_construct(s_keys);0) //periodCertainçä) ; çä   // then read from the table çä'Table PeriodCertainCC FeatureOptConflict'[e_(v_construct(s_keys);0) //periodCertainçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 21517541 003f61a0 0 771d2b47 0 0 2
PP AP FP FOP DisabilityHealthProvisions OccupClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions OccupClassOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions OccupClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions OccupClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 771d2b47 003f61a0 0 6edb26d8 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDefçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4) //axisNameçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6edb26d8 003f61a0 0 58a947b9 0 0 2
PP IPInfoExt MVA(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVAçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58a947b9 003f61a0 0 31d17fde 0 0 2
DistributionAgreement PPInfo CommissionScheduleKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommissionScheduleKeyçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommissionScheduleKey';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommissionScheduleKey'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31d17fde 003f61a0 0 7e0322d4 0 0 2
PP Ownership AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e0322d4 003f61a0 0 50d1086b 0 0 2
PP AP FP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 50d1086b 003f61a0 0 70d332b6 0 0 2
Party Producer License Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee AttachmentçäIF (EXISTS('Table Party Producer License Fee Attachment';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee Attachment'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 70d332b6 003f61a0 0 954091e 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 954091e 003f61a0 0 57ee0f56 0 0 2
PPExt Activity Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //activityTypeCodeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //activityTypeCodeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57ee0f56 003f61a0 0 1ad71cba 0 0 2
AnnualIndexTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AnnualIndexTypeCCçäIF (EXISTS('Table AnnualIndexTypeCC';e_(v_construct(s_keys);0) //AnnualIndexTypeCC_id_extçä) ; çä   // then read from the table çä'Table AnnualIndexTypeCC'[e_(v_construct(s_keys);0) //AnnualIndexTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ad71cba 003f61a0 0 1bbd032f 0 0 2
PP APExt ParticipantProduct RelatedParticipantProductInfo RelationshipInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo RelationshipInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1bbd032f 003f61a0 0 7ef3df69 0 0 2
PP AP FP FOP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7ef3df69 003f61a0 0 683d709e 0 0 2
Party Carrier License Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License FeeçäIF (EXISTS('Table Party Carrier License Fee';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 683d709e 003f61a0 0 136fffb6 0 0 2
DistributionAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreementçäIF (EXISTS('Table DistributionAgreement';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 136fffb6 003f61a0 0 60b3bfc7 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 60b3bfc7 003f61a0 0 686735eb 0 0 2
IP IPInfo Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 686735eb 003f61a0 0 a6230e2 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpressionçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a6230e2 003f61a0 0 404aa26e 0 0 2
PP IPInfoExt MVA TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 404aa26e 003f61a0 0 3b15580f 0 0 2
PP APExt ParticipantProduct AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct AllowedDesignation';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct AllowedDesignation'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b15580f 003f61a0 0 2f43cf51 0 0 2
IP IPInfo Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee AttachmentçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f43cf51 003f61a0 0 2dfaf2ae 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2dfaf2ae 003f61a0 0 34c3c787 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34c3c787 003f61a0 0 37ead1e0 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37ead1e0 003f61a0 0 46da4dce 0 0 2
PP LoanProvision ImpairedOptions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision ImpairedOptionsçäIF (EXISTS('Table PolicyProduct LoanProvision ImpairedOptions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision ImpairedOptions'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46da4dce 003f61a0 0 1c91a37c 0 0 2
LineOfAuthorityCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LineOfAuthorityCCçäIF (EXISTS('Table LineOfAuthorityCC';e_(v_construct(s_keys);0) //LineOfAuthorityCC_id_extçä) ; çä   // then read from the table çä'Table LineOfAuthorityCC'[e_(v_construct(s_keys);0) //LineOfAuthorityCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c91a37c 003f61a0 0 11a85cf1 0 0 2
PP AP FP FOP AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11a85cf1 003f61a0 0 1e337dec 0 0 2
PP IPInfo Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo FeeçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e337dec 003f61a0 0 1f2830cd 0 0 2
PP IPInfoExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f2830cd 003f61a0 0 1e9a70f2 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedTransType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e9a70f2 003f61a0 0 303b310e 0 0 2
PP IPInfo Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 303b310e 003f61a0 0 5b64b576 0 0 2
DistributionAgreement BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement BusinessProcessAllowedçäIF (EXISTS('Table DistributionAgreement BusinessProcessAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä) ; çä   // then read from the table çä'Table DistributionAgreement BusinessProcessAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b64b576 003f61a0 0 3a44c80b 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a44c80b 003f61a0 0 f8aa929 0 0 2
PP PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f8aa929 003f61a0 0 3ec0ca56 0 0 2
PP AP FP FOPExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ec0ca56 003f61a0 0 6061c82c 0 0 2
Party Carrier License Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee JurisdictionApprovalçäIF (EXISTS('Table Party Carrier License Fee JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Carrier License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Carrier License Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Carrier License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6061c82c 003f61a0 0 180a1948 0 0 2
PP AP FP FOP AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 180a1948 003f61a0 0 31fafa5d 0 0 2
LevelizationOptionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCCçäIF (EXISTS('Table LevelizationOptionCC';e_(v_construct(s_keys);0) //LevelizationOptionCC_id_extçä) ; çä   // then read from the table çä'Table LevelizationOptionCC'[e_(v_construct(s_keys);0) //LevelizationOptionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 31fafa5d 003f61a0 0 74ff0989 0 0 2
PP PPInfo QualifiedPlanEntityExclude EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude EntityTypeçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 74ff0989 003f61a0 0 612563a6 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 612563a6 003f61a0 0 bc844a7 0 0 2
PP Authorization(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AuthorizationçäIF (EXISTS('Table PolicyProduct Authorization';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 bc844a7 003f61a0 0 7b9cf450 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b9cf450 003f61a0 0 6f08a2ab 0 0 2
ContingentJointCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ContingentJointCCçäIF (EXISTS('Table ContingentJointCC';e_(v_construct(s_keys);0) //ContingentJointCC_id_extçä) ; çä   // then read from the table çä'Table ContingentJointCC'[e_(v_construct(s_keys);0) //ContingentJointCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6f08a2ab 003f61a0 0 c2147d4 0 0 2
PP AP FP FOPExt LTCDDCalcRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c2147d4 003f61a0 0 59745b1f 0 0 2
PP AP FP FOP RoleRelationRestriction RoleRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RoleRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RoleRestriction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RoleRestriction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59745b1f 003f61a0 0 189c831 0 0 2
IP IPInfoExt MVA TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 189c831 003f61a0 0 3c053219 0 0 2
Party Organization SitusInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization SitusInfoçäIF (EXISTS('Table Party Organization SitusInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization SitusInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c053219 003f61a0 0 7b54849 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExcludeçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b54849 003f61a0 0 3dc6c4f 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3dc6c4f 003f61a0 0 8362fc1 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOptionçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 8362fc1 003f61a0 0 1f5ef1c6 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDefçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4); //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4);  //keyTypeçäe_(v_construct(s_keys);5) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1f5ef1c6 003f61a0 0 5bc82d8f 0 0 2
Party Carrier License LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License LineOfAuthorityçäIF (EXISTS('Table Party Carrier License LineOfAuthority';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table Party Carrier License LineOfAuthority'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5bc82d8f 003f61a0 0 4f296716 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f296716 003f61a0 0 10da8776 0 0 2
PaymentSourceCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PaymentSourceCCçäIF (EXISTS('Table PaymentSourceCC';e_(v_construct(s_keys);0) //PaymentSourceCC_id_extçä) ; çä   // then read from the table çä'Table PaymentSourceCC'[e_(v_construct(s_keys);0) //PaymentSourceCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10da8776 003f61a0 0 452a71c8 0 0 2
PP AP IncomePayoutProductOption Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 452a71c8 003f61a0 0 1ce1a28d 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ce1a28d 003f61a0 0 6d9f9710 0 0 2
PP AP IncomePayoutProductOption AllocTypeProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d9f9710 003f61a0 0 d1f265c 0 0 2
PP IPInfoExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation AttachmentçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d1f265c 003f61a0 0 3385bc16 0 0 2
Party URL(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party URLçäIF (EXISTS('Table Party URL';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party URL'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3385bc16 003f61a0 0 400fb22e 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 400fb22e 003f61a0 0 55d32996 0 0 2
PP AP FP FOP Reward TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55d32996 003f61a0 0 2aec5a3f 0 0 2
Party Producer CarrierAppointment DistributionLevel(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment DistributionLevelçäIF (EXISTS('Table Party Producer CarrierAppointment DistributionLevel';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment DistributionLevel'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2aec5a3f 003f61a0 0 743a568b 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 743a568b 003f61a0 0 572136f5 0 0 2
IP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee TableRefçäIF (EXISTS('Table InvestProduct Fee TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee TableRef'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 572136f5 003f61a0 0 761c54cb 0 0 2
CreditCardTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CreditCardTypeCCçäIF (EXISTS('Table CreditCardTypeCC';e_(v_construct(s_keys);0) //CreditCardTypeCC_id_extçä) ; çä   // then read from the table çä'Table CreditCardTypeCC'[e_(v_construct(s_keys);0) //CreditCardTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 761c54cb 003f61a0 0 4eb4b8ec 0 0 2
PP AP FP FOP PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçäe_(v_construct(s_keys);10); //balanceTypeçäe_(v_construct(s_keys);11) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçäe_(v_construct(s_keys);10);  //balanceTypeçäe_(v_construct(s_keys);11) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4eb4b8ec 003f61a0 0 6a37c746 0 0 2
PP IPInfo Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee AttachmentçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a37c746 003f61a0 0 1653bb0a 0 0 2
PP AP FP FOP DisabilityHealthProvisions(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisionsçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1653bb0a 003f61a0 0 3db6365 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3db6365 003f61a0 0 188e7afa 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 188e7afa 003f61a0 0 1b36e650 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDefçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6); //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6);  //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b36e650 003f61a0 0 c500224 0 0 2
Party Carrier License Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee AttachmentçäIF (EXISTS('Table Party Carrier License Fee Attachment';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee Attachment'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 c500224 003f61a0 0 5a6e313c 0 0 2
PP AP FP FOP BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a6e313c 003f61a0 0 40c7c187 0 0 2
Party Producer CarrierAppointment Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee TableRefçäIF (EXISTS('Table Party Producer CarrierAppointment Fee TableRef';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee TableRef'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40c7c187 003f61a0 0 421d1d72 0 0 2
PP Ownership RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership RestrictionInfoçäIF (EXISTS('Table PolicyProduct Ownership RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 421d1d72 003f61a0 0 3daaee01 0 0 2
PP AP FP FOP AllocTypeProduct AmountProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct AmountProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3daaee01 003f61a0 0 213a9b6c 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 213a9b6c 003f61a0 0 6f683ac6 0 0 2
Party Producer ProducerAgreement DistributionLevel(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer ProducerAgreement DistributionLevelçäIF (EXISTS('Table Party Producer ProducerAgreement DistributionLevel';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer ProducerAgreement DistributionLevel'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6f683ac6 003f61a0 0 74d63656 0 0 2
TrustTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table TrustTypeCCçäIF (EXISTS('Table TrustTypeCC';e_(v_construct(s_keys);0) //TrustTypeCC_id_extçä) ; çä   // then read from the table çä'Table TrustTypeCC'[e_(v_construct(s_keys);0) //TrustTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 74d63656 003f61a0 0 6382a40e 0 0 2
PP Reward TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Reward TableRefçäIF (EXISTS('Table PolicyProduct Reward TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Reward TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6382a40e 003f61a0 0 565f8fd6 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 565f8fd6 003f61a0 0 5998ccda 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpressionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5998ccda 003f61a0 0 ab2dcf7 0 0 2
PP IPInfoExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ab2dcf7 003f61a0 0 509a9c89 0 0 2
IP IPInfoExt RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDurationçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByDuration';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 509a9c89 003f61a0 0 85c2a01 0 0 2
PP CMProduct CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailableçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 85c2a01 003f61a0 0 6e6e0c59 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedTransType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransTypeçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedTransType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e6e0c59 003f61a0 0 2044b010 0 0 2
PP AP FP FOP AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2044b010 003f61a0 0 fd2a8c5 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 fd2a8c5 003f61a0 0 73b082e9 0 0 2
PP IPInfo RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo RateVariationKeyçäIF (EXISTS('Table PolicyProduct InvestProductInfo RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73b082e9 003f61a0 0 2d183fb4 0 0 2
IP IPInfo FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee OLifEExtension FeeExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6); //sequenceNumberçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d183fb4 003f61a0 0 581dc2c6 0 0 2
PP LoanProvision OLifEExtension LoanProvisionExtension TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRefçäIF (EXISTS('Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 581dc2c6 003f61a0 0 5cc683eb 0 0 2
PP AP IncomePayoutProductOption AllowedChange AllowedTimingBasis(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedTimingBasisçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedTimingBasis';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedTimingBasis'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5cc683eb 003f61a0 0 689552c 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 689552c 003f61a0 0 4ff97185 0 0 2
DistributionAgreement PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ff97185 003f61a0 0 68a168c7 0 0 2
PP AP FP IncomeOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 68a168c7 003f61a0 0 27761d77 0 0 2
PP AP FP FOP SourceIP RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct RateVariationKeyçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SourceInvestProduct RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27761d77 003f61a0 0 5b59add8 0 0 2
PP PPInfo APExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo AnnuityProductExcludeçäIF (EXISTS('Table PolicyProduct PolicyProductInfo AnnuityProductExclude';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo AnnuityProductExclude'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b59add8 003f61a0 0 79a1b0ff 0 0 2
PP AP IncomePayoutProductOption AllocTypeProduct AmountProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79a1b0ff 003f61a0 0 12e36c42 0 0 2
PP DistributionChannelInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct DistributionChannelInfoçäIF (EXISTS('Table PolicyProduct DistributionChannelInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct DistributionChannelInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 12e36c42 003f61a0 0 461e566d 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 461e566d 003f61a0 0 34e85603 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34e85603 003f61a0 0 67f13dfc 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67f13dfc 003f61a0 0 f66875 0 0 2
Party Organization OrganizationFinancialData Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialData Attachment SignatureInfoçäIF (EXISTS('Table Party Organization OrganizationFinancialData Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f66875 003f61a0 0 203ebfa5 0 0 2
PPExt Activity ScheduledChange(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity ScheduledChangeçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity ScheduledChange';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity ScheduledChange'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 203ebfa5 003f61a0 0 3760221e 0 0 2
Party Producer License Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee TableRefçäIF (EXISTS('Table Party Producer License Fee TableRef';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee TableRef'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3760221e 003f61a0 0 3d38a082 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d38a082 003f61a0 0 daf51d7 0 0 2
PP IPInfoExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //rateVariationCodeçä'key4 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //rateVariationCodeçä'key4 lookup'("Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 daf51d7 003f61a0 0 27cf9cef 0 0 2
PP APExt QualTypeLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension QualTypeLimitsçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension QualTypeLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //qualifiedPlançä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension QualTypeLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //qualifiedPlançä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27cf9cef 003f61a0 0 59f3bfd0 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59f3bfd0 003f61a0 0 689da1c1 0 0 2
PP AP FP FOP Reward(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RewardçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rewardResultTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 689da1c1 003f61a0 0 2c9cf26a 0 0 2
PP Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c9cf26a 003f61a0 0 7c89dd7c 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c89dd7c 003f61a0 0 2cfadff 0 0 2
PP AP FP FOP AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2cfadff 003f61a0 0 78ae06c5 0 0 2
PP AP AnnuitizationDateRestriction JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct AnnuitizationDateRestriction JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78ae06c5 003f61a0 0 4f88b4c3 0 0 2
IP OLifEExtension InvestProductExtension ProxyInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct OLifEExtension InvestProductExtension ProxyInfoçäIF (EXISTS('Table InvestProduct OLifEExtension InvestProductExtension ProxyInfo';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct OLifEExtension InvestProductExtension ProxyInfo'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4f88b4c3 003f61a0 0 53a3f370 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 53a3f370 003f61a0 0 52557f48 0 0 2
Party Producer ProducerAgreement ProductTypeInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer ProducerAgreement ProductTypeInfoçäIF (EXISTS('Table Party Producer ProducerAgreement ProductTypeInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer ProducerAgreement ProductTypeInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52557f48 003f61a0 0 130f3bc8 0 0 2
COLIndexCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table COLIndexCCçäIF (EXISTS('Table COLIndexCC';e_(v_construct(s_keys);0) //COLIndexCC_id_extçä) ; çä   // then read from the table çä'Table COLIndexCC'[e_(v_construct(s_keys);0) //COLIndexCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 130f3bc8 003f61a0 0 5d2f7396 0 0 2
LoanIntMethodCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LoanIntMethodCCçäIF (EXISTS('Table LoanIntMethodCC';e_(v_construct(s_keys);0) //LoanIntMethodCC_id_extçä) ; çä   // then read from the table çä'Table LoanIntMethodCC'[e_(v_construct(s_keys);0) //LoanIntMethodCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5d2f7396 003f61a0 0 5745bf0f 0 0 2
PP AP FP FOP AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5745bf0f 003f61a0 0 2696634e 0 0 2
DistributionAgreement PPInfo CommOptionAvailable JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçä'key4 lookup'("Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçä'key4 lookup'("Table DistributionAgreement PolicyProductInfo CommOptionAvailable JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2696634e 003f61a0 0 2aedf2fc 0 0 2
IP RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation RateVariationByDurationçäIF (EXISTS('Table InvestProduct RateVariation RateVariationByDuration';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation RateVariationByDuration'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2aedf2fc 003f61a0 0 18f9709d 0 0 2
PP AP FP FOP BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18f9709d 003f61a0 0 4d3ec0d9 0 0 2
LineOfAuthorityCC LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LineOfAuthorityCC LineOfAuthority ExamçäIF (EXISTS('Table LineOfAuthorityCC LineOfAuthority Exam';e_(v_construct(s_keys);0); //lineOfAuthorityTypeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table LineOfAuthorityCC LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d3ec0d9 003f61a0 0 7b42c43d 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7b42c43d 003f61a0 0 669a82cd 0 0 2
Party Producer License Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee Attachment SignatureInfoçäIF (EXISTS('Table Party Producer License Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer License Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 669a82cd 003f61a0 0 3007eaf4 0 0 2
PP AP FP FOP NumIP SourceIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3007eaf4 003f61a0 0 407f69b6 0 0 2
CommSchedule CommFormula TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommSchedule CommFormula TableRef JurisdictionApprovalçäIF (EXISTS('Table CommSchedule CommFormula TableRef JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //commScheduleCodeçä'key3 lookup'("Table CommSchedule CommFormula TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table CommSchedule CommFormula TableRef JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //commScheduleCodeçä'key3 lookup'("Table CommSchedule CommFormula TableRef JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 407f69b6 003f61a0 0 43d18e76 0 0 2
PP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43d18e76 003f61a0 0 32404579 0 0 2
PP PPInfo QualifiedPlanEntityExclude(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExcludeçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32404579 003f61a0 0 2ef891d7 0 0 2
PP AP FP FOP NumIP SourceIP RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct RateVariationKeyçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct RateVariationKey';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct SourceInvestProduct RateVariationKey'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ef891d7 003f61a0 0 4c0857a7 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProductçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AgeAmtProduct'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c0857a7 003f61a0 0 6b51597 0 0 2
Party Producer CarrierAppointment LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment LineOfAuthorityçäIF (EXISTS('Table Party Producer CarrierAppointment LineOfAuthority';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment LineOfAuthority'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b51597 003f61a0 0 104ffe5a 0 0 2
IP IPInfoExt IndexCalc(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalcçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //periodModeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension IndexCalc';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //periodModeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 104ffe5a 003f61a0 0 161f75c3 0 0 2
PP PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 161f75c3 003f61a0 0 5a87f749 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5a87f749 003f61a0 0 4cbd2d5d 0 0 2
PP PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4cbd2d5d 003f61a0 0 79f51eca 0 0 2
PP AP FP FOP DisabilityHealthProvisions HealthServiceOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions HealthServiceOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions HealthServiceOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions HealthServiceOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 79f51eca 003f61a0 0 41bde1e5 0 0 2
PP Ownership AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 41bde1e5 003f61a0 0 2cc0f7d7 0 0 2
PP IPInfo InvestProductInfoXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo InvestProductInfoXLatçäIF (EXISTS('Table PolicyProduct InvestProductInfo InvestProductInfoXLat';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo InvestProductInfoXLat'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2cc0f7d7 003f61a0 0 3a663baa 0 0 2
PP AP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a663baa 003f61a0 0 4220c434 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct FeeçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4220c434 003f61a0 0 3d1a1fbb 0 0 2
PP Ownership(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OwnershipçäIF (EXISTS('Table PolicyProduct Ownership';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d1a1fbb 003f61a0 0 51a79463 0 0 2
Party Producer CarrierAppointment Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment FeeçäIF (EXISTS('Table Party Producer CarrierAppointment Fee';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 51a79463 003f61a0 0 6edff5db 0 0 2
FinActivityTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table FinActivityTypeCCçäIF (EXISTS('Table FinActivityTypeCC';e_(v_construct(s_keys);0) //FinActivityTypeCC_id_extçä) ; çä   // then read from the table çä'Table FinActivityTypeCC'[e_(v_construct(s_keys);0) //FinActivityTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6edff5db 003f61a0 0 a3c0beb 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçä'key6 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));e_(v_construct(s_keys);8);e_(v_construct(s_keys);9)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a3c0beb 003f61a0 0 1fcdab51 0 0 2
AccountDesignationCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AccountDesignationCCçäIF (EXISTS('Table AccountDesignationCC';e_(v_construct(s_keys);0) //AccountDesignationCC_id_extçä) ; çä   // then read from the table çä'Table AccountDesignationCC'[e_(v_construct(s_keys);0) //AccountDesignationCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1fcdab51 003f61a0 0 6ca60b41 0 0 2
IP IPInfoExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ca60b41 003f61a0 0 710638c3 0 0 2
Party Producer License Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee JurisdictionApprovalçäIF (EXISTS('Table Party Producer License Fee JurisdictionApproval';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçä'key3 lookup'("Table Party Producer License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table Party Producer License Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçä'key3 lookup'("Table Party Producer License Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 710638c3 003f61a0 0 30286221 0 0 2
Party Producer DesignationInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer DesignationInfoçäIF (EXISTS('Table Party Producer DesignationInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer DesignationInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30286221 003f61a0 0 488e5a65 0 0 2
PP AP IncomePayoutProductOption TaxWithholdingProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //taxWithholdingPlaceçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption TaxWithholdingProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //taxWithholdingPlaceçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 488e5a65 003f61a0 0 2122d84d 0 0 2
PP AP FP FOP RoleRelationRestriction RelatedRoleDataCollection(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RelatedRoleDataCollectionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RelatedRoleDataCollection';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct RoleRelationRestriction RelatedRoleDataCollection'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2122d84d 003f61a0 0 738043e 0 0 2
Party Producer License FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table Party Producer License Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2); //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä) ; çä   // then read from the table çä'Table Party Producer License Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2);  //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 738043e 003f61a0 0 7217713d 0 0 2
IP IPInfoExt MVA(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVAçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MVA';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7217713d 003f61a0 0 7bc55086 0 0 2
IdentityVerificationTypeCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table IdentityVerificationTypeCCçäIF (EXISTS('Table IdentityVerificationTypeCC';e_(v_construct(s_keys);0) //IdentityVerificationTypeCC_id_extçä) ; çä   // then read from the table çä'Table IdentityVerificationTypeCC'[e_(v_construct(s_keys);0) //IdentityVerificationTypeCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7bc55086 003f61a0 0 7a9f9e4f 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a9f9e4f 003f61a0 0 37c0eec3 0 0 2
PP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37c0eec3 003f61a0 0 289901e1 0 0 2
IP QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity MarketçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity Market';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //marketTypeçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity Market'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 289901e1 003f61a0 0 78c03ec4 0 0 2
PP Reward TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Reward TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Reward TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //rewardResultTypeçä'key3 lookup'("Table PolicyProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Reward TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //rewardResultTypeçä'key3 lookup'("Table PolicyProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78c03ec4 003f61a0 0 2ebfd868 0 0 2
PP AP FP FOP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ebfd868 003f61a0 0 6b724a3a 0 0 2
IP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct Fee Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table InvestProduct Fee Attachment SignatureInfo'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b724a3a 003f61a0 0 2d0d6cfd 0 0 2
LineOfAuthorityCC LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LineOfAuthorityCC LineOfAuthorityçäIF (EXISTS('Table LineOfAuthorityCC LineOfAuthority';e_(v_construct(s_keys);0) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table LineOfAuthorityCC LineOfAuthority'[e_(v_construct(s_keys);0) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d0d6cfd 003f61a0 0 2817f058 0 0 2
PP AP IncomePayoutProductOption AnnualIndexOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AnnualIndexOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AnnualIndexOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AnnualIndexOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2817f058 003f61a0 0 62e16a82 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62e16a82 003f61a0 0 7753e791 0 0 2
PP AP FP FOP BenefitChangeAllowed RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7753e791 003f61a0 0 5e68530d 0 0 2
PP AP FP Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e68530d 003f61a0 0 608b6772 0 0 2
PP AP FP FOP TargetAgeRestriction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TargetAgeRestrictionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TargetAgeRestriction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TargetAgeRestriction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 608b6772 003f61a0 0 620474cb 0 0 2
PP JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 620474cb 003f61a0 0 7e575328 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e575328 003f61a0 0 48c02de6 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 48c02de6 003f61a0 0 5dfc4e3f 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5dfc4e3f 003f61a0 0 ce56211 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 ce56211 003f61a0 0 66f40d06 0 0 2
IP IPInfo Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçä'key5 lookup'("Table InvestProduct InvestProductInfo Fee JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 66f40d06 003f61a0 0 11501566 0 0 2
PP AP FP FOP Reward TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //rewardResultTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //rewardResultTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Reward TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11501566 003f61a0 0 242f4bb3 0 0 2
PP AP FP FOP DisabilityHealthProvisions NatureSubCategoryOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions NatureSubCategoryOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions NatureSubCategoryOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions NatureSubCategoryOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 242f4bb3 003f61a0 0 67f4610e 0 0 2
PPExt FS(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatementçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension FinancialStatement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //statementTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67f4610e 003f61a0 0 43778b0c 0 0 2
PP AP FP FOP TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 43778b0c 003f61a0 0 1edc608e 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenefitLimitOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1edc608e 003f61a0 0 1b70029a 0 0 2
DistributionAgreement PPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfoçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b70029a 003f61a0 0 d605cb4 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d605cb4 003f61a0 0 2624f44a 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2624f44a 003f61a0 0 4515eda5 0 0 2
PP APExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4515eda5 003f61a0 0 768d6ded 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table LevelizationOptionCC PaymentModeMethProduct Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 768d6ded 003f61a0 0 3d31e8f9 0 0 2
PPExt QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3d31e8f9 003f61a0 0 360bc8f 0 0 2
PP Ownership FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowedçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 360bc8f 003f61a0 0 62669e97 0 0 2
PP AP IncomePayoutProductOption FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptRequisite';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption FeatureOptRequisite'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62669e97 003f61a0 0 76b0d199 0 0 2
IP IPInfoExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //rateVariationCodeçä'key5 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçä'key5 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76b0d199 003f61a0 0 a3fc429 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a3fc429 003f61a0 0 20c7ac1a 0 0 2
PP AP FeatureTransactionProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct AnnuityProduct FeatureTransactionProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 20c7ac1a 003f61a0 0 32d6f782 0 0 2
IP IPInfoExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariationçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32d6f782 003f61a0 0 2f799d56 0 0 2
PP AP FP FOPExt Ownership(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension OwnershipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f799d56 003f61a0 0 22d11dba 0 0 2
PP AP FP FOP Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22d11dba 003f61a0 0 5b6711c2 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b6711c2 003f61a0 0 46c27bd8 0 0 2
Party Phone(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party PhoneçäIF (EXISTS('Table Party Phone';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Phone'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 46c27bd8 003f61a0 0 1080474a 0 0 2
PP AP FP FOP SurrenderChargeSchedule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeScheduleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct SurrenderChargeSchedule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1080474a 003f61a0 0 64ffaf50 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64ffaf50 003f61a0 0 585a3ee 0 0 2
PP LoanProvision RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 585a3ee 003f61a0 0 4126af0c 0 0 2
Party Producer Registration RegistrationJurisdiction Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdiction Attachment SignatureInfoçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4126af0c 003f61a0 0 2e5f3c7b 0 0 2
PP AP IncomePayoutProductOption AllowedChange AllowedPercent(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedPercentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedPercent';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange AllowedPercent'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e5f3c7b 003f61a0 0 e5cdb99 0 0 2
PP PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e5cdb99 003f61a0 0 414b6a29 0 0 2
PP IPInfoExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariationçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 414b6a29 003f61a0 0 29c235f 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29c235f 003f61a0 0 4aeb82d3 0 0 2
PP AP FP FOP DisabilityHealthProvisions ConditionTypeOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ConditionTypeOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ConditionTypeOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ConditionTypeOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4aeb82d3 003f61a0 0 2e902a70 0 0 2
PP Authorization SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization SignatureInfoçäIF (EXISTS('Table PolicyProduct Authorization SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e902a70 003f61a0 0 18db368 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 18db368 003f61a0 0 15355495 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 15355495 003f61a0 0 17272846 0 0 2
IP IPInfo RateVariationKey(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo RateVariationKeyçäIF (EXISTS('Table InvestProduct InvestProductInfo RateVariationKey';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo RateVariationKey';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 17272846 003f61a0 0 b7b2b79 0 0 2
PP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b7b2b79 003f61a0 0 24b6eac4 0 0 2
PP AP IncomePayoutProductOption ContingencyBenefitChange(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption ContingencyBenefitChangeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption ContingencyBenefitChange';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption ContingencyBenefitChange'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 24b6eac4 003f61a0 0 32e2cda9 0 0 2
PP AP FP FOP DisabilityHealthProvisions ManagedCareOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ManagedCareOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ManagedCareOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ManagedCareOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32e2cda9 003f61a0 0 7737ca87 0 0 2
DistributionAgreement PPInfo CommOptionAvailable(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailableçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7737ca87 003f61a0 0 472c1d90 0 0 2
PP AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AdminTransactionProduct QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //transTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 472c1d90 003f61a0 0 1bfbe44b 0 0 2
LevelizationOptionCC PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3); //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3);  //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1bfbe44b 003f61a0 0 2884f5dd 0 0 2
IP Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee AttachmentçäIF (EXISTS('Table InvestProduct Fee Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee Attachment'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2884f5dd 003f61a0 0 33340bc7 0 0 2
PP LoanProvision RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //rateVariationCodeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //rateVariationCodeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 33340bc7 003f61a0 0 157a32d7 0 0 2
IP IPInfo Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo Fee TableRefçäIF (EXISTS('Table InvestProduct InvestProductInfo Fee TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo Fee TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //feeTypeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 157a32d7 003f61a0 0 55305ce9 0 0 2
PP CMProduct CommOptionAvailable ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable ExclusionInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable ExclusionInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 55305ce9 003f61a0 0 5bbe4291 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5bbe4291 003f61a0 0 6a773110 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8); //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8);  //feeTypeçäe_(v_construct(s_keys);9) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a773110 003f61a0 0 470d77e 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 470d77e 003f61a0 0 111426d0 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 111426d0 003f61a0 0 7d9ad901 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d9ad901 003f61a0 0 29e443d5 0 0 2
PP AP FP FOP NumIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29e443d5 003f61a0 0 5b943f7 0 0 2
Party Phone SpeedDial(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Phone SpeedDialçäIF (EXISTS('Table Party Phone SpeedDial';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Phone SpeedDial'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b943f7 003f61a0 0 5957e010 0 0 2
CommSchedule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommScheduleçäIF (EXISTS('Table CommSchedule';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä) ; çä   // then read from the table çä'Table CommSchedule'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5957e010 003f61a0 0 69f24970 0 0 2
IP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProductçäIF (EXISTS('Table InvestProduct';e_(v_construct(s_keys);0) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct';e_(v_construct(s_keys);0); //productCodeçä'table effective date'(e_(v_construct(s_keys);1)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69f24970 003f61a0 0 534aa12b 0 0 2
PP Authorization SignatureInfo Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization SignatureInfo AttachmentçäIF (EXISTS('Table PolicyProduct Authorization SignatureInfo Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization SignatureInfo Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 534aa12b 003f61a0 0 2af96d54 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2af96d54 003f61a0 0 11781cbc 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11781cbc 003f61a0 0 49bb9eb1 0 0 2
Party Producer License LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License LineOfAuthorityçäIF (EXISTS('Table Party Producer License LineOfAuthority';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table Party Producer License LineOfAuthority'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49bb9eb1 003f61a0 0 e1d6640 0 0 2
IP IPInfoExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //rateVariationCodeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäe_(v_construct(s_keys);5); //signatureCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 e1d6640 003f61a0 0 a67af27 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3); //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3);  //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 a67af27 003f61a0 0 236ebd06 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 236ebd06 003f61a0 0 2f4cb8bd 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteriaçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f4cb8bd 003f61a0 0 63f0d9cc 0 0 2
PP AP FP FOPExt RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63f0d9cc 003f61a0 0 579b3492 0 0 2
Party Producer CarrierAppointment ApptCounty(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment ApptCountyçäIF (EXISTS('Table Party Producer CarrierAppointment ApptCounty';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment ApptCounty'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 579b3492 003f61a0 0 142504a4 0 0 2
PP AP FP FOP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçäe_(v_construct(s_keys);5) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçäe_(v_construct(s_keys);5); //productCodeçä'table effective date'(e_(v_construct(s_keys);6)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 142504a4 003f61a0 0 75383c9e 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValueçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75383c9e 003f61a0 0 527f936 0 0 2
PP AP FP FOP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 527f936 003f61a0 0 78da98c1 0 0 2
PP AP FP FOP AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 78da98c1 003f61a0 0 1a798c13 0 0 2
Party Carrier License Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee Attachment AttachmentReferenceçäIF (EXISTS('Table Party Carrier License Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a798c13 003f61a0 0 27472723 0 0 2
PP AP FP FOP TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27472723 003f61a0 0 36fb26ff 0 0 2
IP IPInfoExt RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36fb26ff 003f61a0 0 6a59079d 0 0 2
PP AP IncomePayoutProductOption IncomeOptionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption IncomeOptionInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption IncomeOptionInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption IncomeOptionInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a59079d 003f61a0 0 2367e4dd 0 0 2
Party Producer License Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License ExamçäIF (EXISTS('Table Party Producer License Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer License Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2367e4dd 003f61a0 0 200409a0 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 200409a0 003f61a0 0 562f066e 0 0 2
IP IPInfoExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 562f066e 003f61a0 0 478a9d75 0 0 2
Party Producer License LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License LineOfAuthority ExamçäIF (EXISTS('Table Party Producer License LineOfAuthority Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer License LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 478a9d75 003f61a0 0 7e8429f4 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef ExtensionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4) //axisNameçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef Extension'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e8429f4 003f61a0 0 6fe388b4 0 0 2
Party Producer CarrierAppointment LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment LineOfAuthority ExamçäIF (EXISTS('Table Party Producer CarrierAppointment LineOfAuthority Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment LineOfAuthority Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);2) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fe388b4 003f61a0 0 10dd8fa1 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 10dd8fa1 003f61a0 0 59c50317 0 0 2
PP AP FP FOP TaxWithholdingProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //taxWithholdingPlaceçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //taxWithholdingPlaceçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59c50317 003f61a0 0 6e604ea8 0 0 2
PP IPInfo JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçä'key3 lookup'("Table PolicyProduct InvestProductInfo JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e604ea8 003f61a0 0 2d4f1763 0 0 2
PP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d4f1763 003f61a0 0 3f700556 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f700556 003f61a0 0 3eda999 0 0 2
PP AP FP FOP IncomeOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct IncomeOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3eda999 003f61a0 0 22dada7 0 0 2
PP IPInfoExt AllowedArrangementProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProductçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension AllowedArrangementProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //arrTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22dada7 003f61a0 0 682cf762 0 0 2
PP AP IncomePayoutProductOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 682cf762 003f61a0 0 3e3f979f 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3e3f979f 003f61a0 0 4345ec3c 0 0 2
IP RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct RateVariation Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation Attachment AttachmentReference'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4345ec3c 003f61a0 0 44a0deb3 0 0 2
PP CMProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProductçäIF (EXISTS('Table PolicyProduct CommissionProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6) //participantBasedPartySelectionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6) //participantBasedPartySelectionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 44a0deb3 003f61a0 0 221a6b31 0 0 2
PP AP FP FOPExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 221a6b31 003f61a0 0 2f8b9c56 0 0 2
PP PaymentModeMethProduct Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçä'key5 lookup'("Table PolicyProduct PaymentModeMethProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f8b9c56 003f61a0 0 2d3a2443 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship AllowedDesignation";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d3a2443 003f61a0 0 b66f598 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b66f598 003f61a0 0 6a26f479 0 0 2
IP IPInfoExt RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation AttachmentçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a26f479 003f61a0 0 497ed8fb 0 0 2
PP LineOfAuthority(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LineOfAuthorityçäIF (EXISTS('Table PolicyProduct LineOfAuthority';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //lineOfAuthorityTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LineOfAuthority'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //lineOfAuthorityTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 497ed8fb 003f61a0 0 2dd6b073 0 0 2
PP AP FP FOP DisabilityHealthProvisions EmploymentClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions EmploymentClassOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions EmploymentClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions EmploymentClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2dd6b073 003f61a0 0 58ae01e1 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58ae01e1 003f61a0 0 672a302c 0 0 2
PP AP FP FOP Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 672a302c 003f61a0 0 2ac3466f 0 0 2
Party GovtIDInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party GovtIDInfoçäIF (EXISTS('Table Party GovtIDInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party GovtIDInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ac3466f 003f61a0 0 16fe3c72 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16fe3c72 003f61a0 0 4e7524c8 0 0 2
PP AP FP FOP NumIP DestIP FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct FeatureOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e7524c8 003f61a0 0 40743ba2 0 0 2
PPExt Activity Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 40743ba2 003f61a0 0 52384fea 0 0 2
PP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FeeçäIF (EXISTS('Table PolicyProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 52384fea 003f61a0 0 840a75d 0 0 2
Party Organization OrganizationFinancialData Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialData Attachment AttachmentReferenceçäIF (EXISTS('Table Party Organization OrganizationFinancialData Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 840a75d 003f61a0 0 5c5c5199 0 0 2
PP AP IncomePayoutProductOption AllowedChange(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChangeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c5c5199 003f61a0 0 74b3d965 0 0 2
PP PPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfoçäIF (EXISTS('Table PolicyProduct PolicyProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 74b3d965 003f61a0 0 6b9afa4b 0 0 2
IP RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct RateVariation TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //rateVariationCodeçä'key3 lookup'("Table InvestProduct RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation TableRef JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //rateVariationCodeçä'key3 lookup'("Table InvestProduct RateVariation TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6b9afa4b 003f61a0 0 aa9fb67 0 0 2
PP BusinessProcessAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct BusinessProcessAllowedçäIF (EXISTS('Table PolicyProduct BusinessProcessAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä) ; çä   // then read from the table çä'Table PolicyProduct BusinessProcessAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 aa9fb67 003f61a0 0 58c0dc57 0 0 2
PP Ownership AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58c0dc57 003f61a0 0 687fff79 0 0 2
PP AP FP FOP AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 687fff79 003f61a0 0 7028c6c5 0 0 2
PP AP FP FOPExt RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //rateVariationCodeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //rateVariationCodeçä'key5 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7028c6c5 003f61a0 0 1a6375ba 0 0 2
PP PaymentModeMethProduct Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PaymentModeMethProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct PaymentModeMethProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PaymentModeMethProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a6375ba 003f61a0 0 63cc996b 0 0 2
PP Authorization QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 63cc996b 003f61a0 0 76a03c65 0 0 2
Party Carrier License Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License AttachmentçäIF (EXISTS('Table Party Carrier License Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76a03c65 003f61a0 0 29d473c5 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29d473c5 003f61a0 0 433b5e19 0 0 2
PP AP FP FOP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 433b5e19 003f61a0 0 1a3571bb 0 0 2
IP OLifEExtension InvestProductExtension TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçä'key2 lookup'("Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçä'key2 lookup'("Table InvestProduct OLifEExtension InvestProductExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a3571bb 003f61a0 0 48968687 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 48968687 003f61a0 0 27056205 0 0 2
PP AP FP FOP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 27056205 003f61a0 0 4bc19d2a 0 0 2
IP IPInfoExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRuleçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4); //balanceTypeçäe_(v_construct(s_keys);5) //sequenceNumberçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //balanceTypeçäe_(v_construct(s_keys);5); //sequenceNumberçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4bc19d2a 003f61a0 0 7f011aa 0 0 2
IP IPInfoExt TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçä'key4 lookup'("Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);'table effective date'(e_(v_construct(s_keys);3));e_(v_construct(s_keys);4)); //jurisdictionçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f011aa 003f61a0 0 35375084 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 35375084 003f61a0 0 72fa2d60 0 0 2
Party Carrier License Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee Attachment SignatureInfoçäIF (EXISTS('Table Party Carrier License Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72fa2d60 003f61a0 0 34001e72 0 0 2
IP RV OLifEExtension RateVariationExtension RateVariationByRateVariationCode(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCodeçäIF (EXISTS('Table InvestProduct RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation OLifEExtension RateVariationExtension RateVariationByRateVariationCode'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34001e72 003f61a0 0 5cee84f7 0 0 2
CommSchedule CommFormula(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommSchedule CommFormulaçäIF (EXISTS('Table CommSchedule CommFormula';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä) ; çä   // then read from the table çä'Table CommSchedule CommFormula'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5cee84f7 003f61a0 0 49f262bb 0 0 2
BusinessProcessCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table BusinessProcessCCçäIF (EXISTS('Table BusinessProcessCC';e_(v_construct(s_keys);0) //BusinessProcessCC_id_extçä) ; çä   // then read from the table çä'Table BusinessProcessCC'[e_(v_construct(s_keys);0) //BusinessProcessCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49f262bb 003f61a0 0 2c98bbbf 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c98bbbf 003f61a0 0 34a0a99 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 34a0a99 003f61a0 0 353c6048 0 0 2
PP AP FP FOPExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 353c6048 003f61a0 0 1b658bf3 0 0 2
PP AP FP FOP FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptConflict';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeatureOptConflict'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1b658bf3 003f61a0 0 b3ff633 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDefçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9); //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria KeyDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9);  //keyTypeçäe_(v_construct(s_keys);10) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b3ff633 003f61a0 0 f41f5ad 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 f41f5ad 003f61a0 0 72e5e254 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef ExtensionçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6); //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria KeyDef Extension'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6);  //keyTypeçäe_(v_construct(s_keys);7) //keySubTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72e5e254 003f61a0 0 4463348f 0 0 2
PP AP FP FOPExt Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership FundingSourceMethodsAllowed AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4463348f 003f61a0 0 2daf9130 0 0 2
PP IPInfo QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2daf9130 003f61a0 0 3cae2d96 0 0 2
Party Organization(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party OrganizationçäIF (EXISTS('Table Party Organization';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3cae2d96 003f61a0 0 220b2fc1 0 0 2
PP Ownership AllowedRelationship FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee OLifEExtension FeeExtension MinBalanceCalcRule";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 220b2fc1 003f61a0 0 4ac5fe39 0 0 2
IP QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity QualifiedPlanOption';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity QualifiedPlanOption'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ac5fe39 003f61a0 0 1c3fad68 0 0 2
PP AP FP FOP DestIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DestInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1c3fad68 003f61a0 0 508bae05 0 0 2
IP RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation TableRefçäIF (EXISTS('Table InvestProduct RateVariation TableRef';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation TableRef'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 508bae05 003f61a0 0 2e635f45 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e635f45 003f61a0 0 6fdc626d 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçä'key4 lookup'("Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee JurisdictionApproval";e_(v_construct(s_keys);0);e_(v_construct(s_keys);1);e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6fdc626d 003f61a0 0 36f39373 0 0 2
PP Authorization QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //authorizationKeyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36f39373 003f61a0 0 67259dcf 0 0 2
Party Producer(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party ProducerçäIF (EXISTS('Table Party Producer';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 67259dcf 003f61a0 0 3ce74240 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeatureOptRequisite';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption FeatureOptRequisite'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ce74240 003f61a0 0 7c7e39a1 0 0 2
PP Ownership AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c7e39a1 003f61a0 0 7d687ba 0 0 2
PP AP FP Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d687ba 003f61a0 0 22e7c429 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 22e7c429 003f61a0 0 583f5284 0 0 2
PP Ownership AllowedRelationship Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 583f5284 003f61a0 0 72592c9a 0 0 2
Party Carrier RestrictOwnerJurisdiction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier RestrictOwnerJurisdictionçäIF (EXISTS('Table Party Carrier RestrictOwnerJurisdiction';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier RestrictOwnerJurisdiction'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72592c9a 003f61a0 0 61f935da 0 0 2
Party Carrier License FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table Party Carrier License Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2); //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä) ; çä   // then read from the table çä'Table Party Carrier License Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2);  //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61f935da 003f61a0 0 7340693c 0 0 2
PP AP FP FOP AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7340693c 003f61a0 0 527ea979 0 0 2
DistributionAgreement PPInfo CommOptionAvailable FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable FeatureOptConflictçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable FeatureOptConflict';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable FeatureOptConflict'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 527ea979 003f61a0 0 780d7765 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValueçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //commOptionçäe_(v_construct(s_keys);3); //operationçäe_(v_construct(s_keys);4) //axisNameçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //commOptionçäe_(v_construct(s_keys);3);  //operationçäe_(v_construct(s_keys);4) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 780d7765 003f61a0 0 7c2b8cf6 0 0 2
PP APExt ParticipantProduct RelatedParticipantProductInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct RelatedParticipantProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7c2b8cf6 003f61a0 0 6050af8c 0 0 2
Party(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PartyçäIF (EXISTS('Table Party';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6050af8c 003f61a0 0 6029d35a 0 0 2
PP AP FP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6029d35a 003f61a0 0 2afe5380 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship EntityType';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship EntityType'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2afe5380 003f61a0 0 374882e2 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee Attachment AttachmentReference";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 374882e2 003f61a0 0 2a230f12 0 0 2
IP RV(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariationçäIF (EXISTS('Table InvestProduct RateVariation';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2a230f12 003f61a0 0 161276ff 0 0 2
PP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProductçäIF (EXISTS('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2) //productVersionCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //productCodeçäe_(v_construct(s_keys);2); //productVersionCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 161276ff 003f61a0 0 6c56adc9 0 0 2
PP Ownership AllowedRelationship VerificationRequirement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship VerificationRequirementçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship VerificationRequirement';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship VerificationRequirement'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship VerificationRequirement";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6c56adc9 003f61a0 0 57a29f7e 0 0 2
Party PartyXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party PartyXLatçäIF (EXISTS('Table Party PartyXLat';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party PartyXLat'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57a29f7e 003f61a0 0 76c3f6e4 0 0 2
IP RV Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateVariation AttachmentçäIF (EXISTS('Table InvestProduct RateVariation Attachment';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä) ; çä   // then read from the table çä'Table InvestProduct RateVariation Attachment'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 76c3f6e4 003f61a0 0 3564750f 0 0 2
PP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3564750f 003f61a0 0 4c6a79c2 0 0 2
PP AP FP FOP QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4c6a79c2 003f61a0 0 1602b546 0 0 2
PP IPInfoExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //balanceTypeçäe_(v_construct(s_keys);7) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1602b546 003f61a0 0 38504546 0 0 2
PP Ownership QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 38504546 003f61a0 0 1e6de6d3 0 0 2
PP Ownership AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship Fee TableRef";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e6de6d3 003f61a0 0 313fd3e5 0 0 2
PP AP FP FOP Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 313fd3e5 003f61a0 0 1dbc56a3 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1dbc56a3 003f61a0 0 3ff354ae 0 0 2
PP Ownership AllowedRelationship AgeAmtProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship AgeAmtProductçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship AgeAmtProduct";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3ff354ae 003f61a0 0 2b16e838 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowedçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2b16e838 003f61a0 0 1cb948a1 0 0 2
PolicyStatusCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyStatusCCçäIF (EXISTS('Table PolicyStatusCC';e_(v_construct(s_keys);0) //PolicyStatusCC_id_extçä) ; çä   // then read from the table çä'Table PolicyStatusCC'[e_(v_construct(s_keys);0) //PolicyStatusCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1cb948a1 003f61a0 0 1cfc80c5 0 0 2
PP AP FP FOP AllocTypeProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllocTypeProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);8) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1cfc80c5 003f61a0 0 5df0ff42 0 0 2
PP APExt ParticipantProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension ParticipantProduct'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5df0ff42 003f61a0 0 b7a5751 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship BenePayoutTypeAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b7a5751 003f61a0 0 62ece92 0 0 2
IP IPInfo InvestProductInfoXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo InvestProductInfoXLatçäIF (EXISTS('Table InvestProduct InvestProductInfo InvestProductInfoXLat';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo InvestProductInfoXLat';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62ece92 003f61a0 0 2d249a34 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2d249a34 003f61a0 0 64ba1459 0 0 2
Party Producer NationApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer NationApprovalçäIF (EXISTS('Table Party Producer NationApproval';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer NationApproval'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 64ba1459 003f61a0 0 6ccabda5 0 0 2
IP IPInfo QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity EntityType';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity EntityType';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ccabda5 003f61a0 0 33196178 0 0 2
PP AP FP FOP AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 33196178 003f61a0 0 7d07b9f8 0 0 2
IP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRulesçäIF (EXISTS('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex RateVariationChangeRules';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d07b9f8 003f61a0 0 395e983c 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 395e983c 003f61a0 0 361b9a07 0 0 2
DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 361b9a07 003f61a0 0 567f3796 0 0 2
PP IPInfo Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 567f3796 003f61a0 0 b242551 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b242551 003f61a0 0 1e1b8b54 0 0 2
PP IPInfoExt RV Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e1b8b54 003f61a0 0 4de6103b 0 0 2
PP APExt TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRefçäIF (EXISTS('Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct OLifEExtension AnnuityProductExtension TableRef'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4de6103b 003f61a0 0 768877c0 0 0 2
Party Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party AttachmentçäIF (EXISTS('Table Party Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 768877c0 003f61a0 0 54c704aa 0 0 2
PP PPInfo CommOptionAvailable JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçä'key3 lookup'("Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçä'key3 lookup'("Table PolicyProduct PolicyProductInfo CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 54c704aa 003f61a0 0 2e3f89c4 0 0 2
PP AP FP FOPExt LTCDDCalcRules LTCDDBenefitLimits(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules LTCDDBenefitLimitsçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules LTCDDBenefitLimits';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension LTCDDCalcRules LTCDDBenefitLimits'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2e3f89c4 003f61a0 0 42d66cc 0 0 2
PP AP FP FOP AllowedRelationship Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AllowedRelationship Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //feeTypeçäe_(v_construct(s_keys);8) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 42d66cc 003f61a0 0 25048f5c 0 0 2
AssumedInterestRateCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table AssumedInterestRateCCçäIF (EXISTS('Table AssumedInterestRateCC';e_(v_construct(s_keys);0) //AssumedInterestRateCC_id_extçä) ; çä   // then read from the table çä'Table AssumedInterestRateCC'[e_(v_construct(s_keys);0) //AssumedInterestRateCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 25048f5c 003f61a0 0 5428218 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5428218 003f61a0 0 57bfb85 0 0 2
Party Producer CarrierAppointment FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table Party Producer CarrierAppointment Fee OLifEExtension FeeExtension MinBalanceCalcRule';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1); //feeTypeçäe_(v_construct(s_keys);2); //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee OLifEExtension FeeExtension MinBalanceCalcRule'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1);  //feeTypeçäe_(v_construct(s_keys);2);  //balanceTypeçäe_(v_construct(s_keys);3) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 57bfb85 003f61a0 0 3c24a4ef 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c24a4ef 003f61a0 0 53fcabf4 0 0 2
PP LoanProvision RV RVByDuration(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation RateVariationByDurationçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation RateVariationByDuration';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation RateVariationByDuration'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 53fcabf4 003f61a0 0 733f06f 0 0 2
PP LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçä'key3 lookup'("Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçä'key3 lookup'("Table PolicyProduct LoanProvision OLifEExtension LoanProvisionExtension TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 733f06f 003f61a0 0 2ab6db5b 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReferenceçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee Attachment AttachmentReference'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2ab6db5b 003f61a0 0 3c278c4a 0 0 2
Party Producer CarrierAppointment Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Fee AttachmentçäIF (EXISTS('Table Party Producer CarrierAppointment Fee Attachment';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Fee Attachment'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c278c4a 003f61a0 0 5b051290 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDefçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b051290 003f61a0 0 6075dc3f 0 0 2
PP IPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //productCodeçä) ; çä   // then read from the table çäLOOKUPX('Table PolicyProduct InvestProductInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //productCodeçä'table effective date'(e_(v_construct(s_keys);5)); //saleEffectiveDateçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6075dc3f 003f61a0 0 50dc8da8 0 0 2
PP AP IncomePayoutProductOption ReturnOfPremium(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption ReturnOfPremiumçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption ReturnOfPremium';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption ReturnOfPremium'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 50dc8da8 003f61a0 0 1ca2a9da 0 0 2
PP AP IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1ca2a9da 003f61a0 0 69b3f68c 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69b3f68c 003f61a0 0 515d85d1 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship FeeçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)); //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship Fee";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7));  //issueGenderçäe_(v_construct(s_keys);8) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 515d85d1 003f61a0 0 6d7987b7 0 0 2
PP AP IncomePayoutProductOption AllowedChange FeatureOptConflict(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptConflictçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptConflict';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptConflict'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6d7987b7 003f61a0 0 68f51590 0 0 2
PP IPInfoExt RV Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //rateVariationCodeçäe_(v_construct(s_keys);7) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //rateVariationCodeçäe_(v_construct(s_keys);7) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 68f51590 003f61a0 0 712d4107 0 0 2
Party Organization BusinessInsPurposeInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization BusinessInsPurposeInfoçäIF (EXISTS('Table Party Organization BusinessInsPurposeInfo';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization BusinessInsPurposeInfo'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 712d4107 003f61a0 0 1191a16c 0 0 2
PP FreelookInvestRuleProduct InvestRuleProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct InvestRuleProductçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct InvestRuleProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5) //investRuleçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct InvestRuleProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5) //investRuleçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1191a16c 003f61a0 0 7d0537a9 0 0 2
PP AP IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValueçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllocTypeProduct AmountProduct EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //sourceTransferAmtTypeçäe_(v_construct(s_keys);5) //destTransferAmtTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7d0537a9 003f61a0 0 29613f97 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29613f97 003f61a0 0 62ce738c 0 0 2
Party Carrier License Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License Attachment SignatureInfoçäIF (EXISTS('Table Party Carrier License Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Carrier License Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 62ce738c 003f61a0 0 4979b076 0 0 2
DistributionAgreement PPInfo CommOptionAvailable LogicalExpression(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpressionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable LogicalExpression'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4979b076 003f61a0 0 659ff5f1 0 0 2
PP AP FP FOP NumIP DestIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct NumInvestProduct DestInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //carrierCodeçäe_(v_construct(s_keys);8) //productCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 659ff5f1 003f61a0 0 3a722d00 0 0 2
CommSchedule CommFormula TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CommSchedule CommFormula TableRefçäIF (EXISTS('Table CommSchedule CommFormula TableRef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä) ; çä   // then read from the table çä'Table CommSchedule CommFormula TableRef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //commScheduleCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a722d00 003f61a0 0 3c732174 0 0 2
IP QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct QualifiedPlanEntityçäIF (EXISTS('Table InvestProduct QualifiedPlanEntity';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct QualifiedPlanEntity'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c732174 003f61a0 0 4706e225 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship FeeçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4706e225 003f61a0 0 6bdf8dee 0 0 2
PP CMProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValueçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçäe_(v_construct(s_keys);8); //operationçäe_(v_construct(s_keys);9) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable LogicalExpression LogicalCriteria AxisDef EnumeratedValue'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçäe_(v_construct(s_keys);8);  //operationçäe_(v_construct(s_keys);9) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6bdf8dee 003f61a0 0 611735c0 0 0 2
IP Fee Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee Attachment AttachmentReferenceçäIF (EXISTS('Table InvestProduct Fee Attachment AttachmentReference';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table InvestProduct Fee Attachment AttachmentReference'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 611735c0 003f61a0 0 4a2b4874 0 0 2
PP AP IncomePayoutProductOption PaymentModeMethProduct FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6); //feeTypeçäe_(v_construct(s_keys);7); //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption PaymentModeMethProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6);  //feeTypeçäe_(v_construct(s_keys);7);  //balanceTypeçäe_(v_construct(s_keys);8) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4a2b4874 003f61a0 0 68043804 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 68043804 003f61a0 0 3304a7ad 0 0 2
PP AP FP FOPExt Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3304a7ad 003f61a0 0 5cda6209 0 0 2
IP Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table InvestProduct Fee TableRef JurisdictionApproval';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçä'key3 lookup'("Table InvestProduct Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä) ; çä   // then read from the table çä'Table InvestProduct Fee TableRef JurisdictionApproval'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçä'key3 lookup'("Table InvestProduct Fee TableRef JurisdictionApproval";IP(s_keys;"IInvest_Key");e_(v_construct(s_keys);2);e_(v_construct(s_keys);3)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5cda6209 003f61a0 0 58e82eb4 0 0 2
PP AP IncomePayoutProductOption AllowedChange FeatureOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptRequisite';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedChange FeatureOptRequisite'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 58e82eb4 003f61a0 0 207fa7cd 0 0 2
PP Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)); //issueGenderçäe_(v_construct(s_keys);5); //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));  //issueGenderçäe_(v_construct(s_keys);5);  //feeTypeçä'key4 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");'key2 lookup'("Table PolicyProduct Ownership FundingSourceMethodsAllowed AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4));e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 207fa7cd 003f61a0 0 340e9fba 0 0 2
Party Producer License(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer LicenseçäIF (EXISTS('Table Party Producer License';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer License'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 340e9fba 003f61a0 0 59a45002 0 0 2
PP AP FP FOPExt Ownership AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership AllowedRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 59a45002 003f61a0 0 47b983c7 0 0 2
PP AP FP FOP DateCollection(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DateCollectionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DateCollection';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DateCollection'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 47b983c7 003f61a0 0 2289f5c9 0 0 2
RelatedRoleCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table RelatedRoleCCçäIF (EXISTS('Table RelatedRoleCC';e_(v_construct(s_keys);0) //RelatedRoleCC_id_extçä) ; çä   // then read from the table çä'Table RelatedRoleCC'[e_(v_construct(s_keys);0) //RelatedRoleCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2289f5c9 003f61a0 0 cea7deb 0 0 2
COLIndexCapCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table COLIndexCapCCçäIF (EXISTS('Table COLIndexCapCC';e_(v_construct(s_keys);0) //COLIndexCapCC_id_extçä) ; çä   // then read from the table çä'Table COLIndexCapCC'[e_(v_construct(s_keys);0) //COLIndexCapCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 cea7deb 003f61a0 0 32657132 0 0 2
Party Producer CarrierAppointment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointmentçäIF (EXISTS('Table Party Producer CarrierAppointment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 32657132 003f61a0 0 280fe1d 0 0 2
PP PolicyProductXLat(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductXLatçäIF (EXISTS('Table PolicyProduct PolicyProductXLat';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductXLat'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 280fe1d 003f61a0 0 7578fe2d 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDefçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5); //operationçäe_(v_construct(s_keys);6) //axisNameçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria AxisDef'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5);  //operationçäe_(v_construct(s_keys);6) //axisNameçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7578fe2d 003f61a0 0 5e844c4 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5e844c4 003f61a0 0 29a01b83 0 0 2
PP PPInfo CommOptionAvailable ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable ExclusionInvestProductçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable ExclusionInvestProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable ExclusionInvestProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 29a01b83 003f61a0 0 382b35a 0 0 2
PP AP FP FOP DisabilityHealthProvisions ProviderClassOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ProviderClassOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ProviderClassOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ProviderClassOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 382b35a 003f61a0 0 48b205af 0 0 2
PP AP FP IncomeOptRequisite(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptRequisiteçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptRequisite';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct IncomeOptRequisite'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //featureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 48b205af 003f61a0 0 5c233a57 0 0 2
DistributionAgreement FundingSourceMethodsAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowedçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c233a57 003f61a0 0 772fe244 0 0 2
PP AP FP FOP DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions BenefitLimitOption RequisiteObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 772fe244 003f61a0 0 3c2e523b 0 0 2
PP Authorization SignatureInfo Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization SignatureInfo Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct Authorization SignatureInfo Attachment AttachmentReference';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization SignatureInfo Attachment AttachmentReference'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3c2e523b 003f61a0 0 d391157 0 0 2
PP AP FeatureTransactionProduct AllowedDistributionAgreement(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProduct AllowedDistributionAgreementçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct AllowedDistributionAgreement';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct AllowedDistributionAgreement'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 d391157 003f61a0 0 72750b78 0 0 2
LevelizationOptionCC PaymentModeMethProduct Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProduct Fee TableRefçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1); //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct Fee TableRef'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1);  //paymentMethodçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 72750b78 003f61a0 0 4d635490 0 0 2
PP PPInfo CommOptionAvailable LogicalExpression LogicalCriteria(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteriaçäIF (EXISTS('Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commOptionçäe_(v_construct(s_keys);5) //operationçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo CommOptionAvailable LogicalExpression LogicalCriteria'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commOptionçäe_(v_construct(s_keys);5) //operationçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d635490 003f61a0 0 3207da4d 0 0 2
PP IPInfo Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct InvestProductInfo Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6); //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6);  //feeTypeçä'key4 lookup'("Table PolicyProduct InvestProductInfo Fee JurisdictionApproval";PP(s_keys;"Policy_Key");'PP IPInfo'(s_keys;"Invest_Key");e_(v_construct(s_keys);6);e_(v_construct(s_keys);7)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3207da4d 003f61a0 0 73a53893 0 0 2
CompatiblePaymentFormCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table CompatiblePaymentFormCCçäIF (EXISTS('Table CompatiblePaymentFormCC';e_(v_construct(s_keys);0) //CompatiblePaymentFormCC_id_extçä) ; çä   // then read from the table çä'Table CompatiblePaymentFormCC'[e_(v_construct(s_keys);0) //CompatiblePaymentFormCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 73a53893 003f61a0 0 4581d222 0 0 2
Party Carrier License Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Carrier License ExamçäIF (EXISTS('Table Party Carrier License Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table Party Carrier License Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4581d222 003f61a0 0 4aedb798 0 0 2
PP AP FP FOP DisabilityHealthProvisions DeductionOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions DeductionOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions DeductionOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions DeductionOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4aedb798 003f61a0 0 7251cf3e 0 0 2
IP FeeExt MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct Fee OLifEExtension FeeExtension MinBalanceCalcRuleçäIF (EXISTS('Table InvestProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //feeTypeçäe_(v_construct(s_keys);3); //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä) ; çä   // then read from the table çä'Table InvestProduct Fee OLifEExtension FeeExtension MinBalanceCalcRule'[IP(s_keys;"IInvest_Key");  //IInvest_Keyçäe_(v_construct(s_keys);2);  //feeTypeçäe_(v_construct(s_keys);3);  //balanceTypeçäe_(v_construct(s_keys);4) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7251cf3e 003f61a0 0 dd1e513 0 0 2
IP IPInfoExt RV RVByVolume(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolumeçäIF (EXISTS('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçäe_(v_construct(s_keys);4) //rateVariationCodeçä) ; çä   // then read from the table çäLOOKUPX('Table InvestProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation RateVariationByVolume';IP(s_keys;"IInvest_Key"); //IInvest_Keyçäe_(v_construct(s_keys);2); //productCodeçä'table effective date'(e_(v_construct(s_keys);3)); //saleEffectiveDateçäe_(v_construct(s_keys);4); //rateVariationCodeçäfield_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 dd1e513 003f61a0 0 16ace80f 0 0 2
PP LineOfAuthority Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LineOfAuthority ExamçäIF (EXISTS('Table PolicyProduct LineOfAuthority Exam';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //lineOfAuthorityTypeçäe_(v_construct(s_keys);5) //examTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LineOfAuthority Exam'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //lineOfAuthorityTypeçäe_(v_construct(s_keys);5) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 16ace80f 003f61a0 0 3f6c0412 0 0 2
PP Authorization AuthorizationTransaction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization AuthorizationTransactionçäIF (EXISTS('Table PolicyProduct Authorization AuthorizationTransaction';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //administrativeTransactionçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization AuthorizationTransaction'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //administrativeTransactionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3f6c0412 003f61a0 0 4126db93 0 0 2
PP IPInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4126db93 003f61a0 0 4b70202d 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityTypeçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4b70202d 003f61a0 0 2073dbd3 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee AttachmentçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5); //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct Fee Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5);  //paymentMethodçäe_(v_construct(s_keys);6) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2073dbd3 003f61a0 0 2f449759 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f449759 003f61a0 0 36c5d226 0 0 2
Party Carrier(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party CarrierçäIF (EXISTS('Table Party Carrier';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Carrier'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 36c5d226 003f61a0 0 704bf469 0 0 2
Party Producer CarrierAppointment Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer CarrierAppointment Attachment SignatureInfoçäIF (EXISTS('Table Party Producer CarrierAppointment Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer CarrierAppointment Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 704bf469 003f61a0 0 30d7216 0 0 2
DistributionAgreement QualifiedPlanEntityExclude EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement QualifiedPlanEntityExclude EntityTypeçäIF (EXISTS('Table DistributionAgreement QualifiedPlanEntityExclude EntityType';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement QualifiedPlanEntityExclude EntityType'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 30d7216 003f61a0 0 2c28038a 0 0 2
DistributionAgreement PPInfo CommOptionAvailable ExclusionIP(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo CommOptionAvailable ExclusionInvestProductçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo CommOptionAvailable ExclusionInvestProduct';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo CommOptionAvailable ExclusionInvestProduct'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //commOptionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2c28038a 003f61a0 0 4ab6b194 0 0 2
PP Ownership QualifiedPlanEntity EntityType(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity EntityTypeçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity EntityType';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity EntityType'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity EntityType";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4ab6b194 003f61a0 0 6a9033fb 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment SignatureInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçäe_(v_construct(s_keys);10) //signatureCodeçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee Attachment SignatureInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçäe_(v_construct(s_keys);10) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6a9033fb 003f61a0 0 11237f4f 0 0 2
PP AP FP FOP DisabilityHealthProvisions ElimPeriodAccOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodAccOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodAccOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions ElimPeriodAccOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 11237f4f 003f61a0 0 7f360f7b 0 0 2
PP Ownership AllowedRelationship BenePayoutTypeAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowedçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship BenePayoutTypeAllowed";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7f360f7b 003f61a0 0 4d1c13ba 0 0 2
PP AP IncomePayoutProductOption Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment AttachmentReferenceçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment AttachmentReference';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption Attachment AttachmentReference'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4d1c13ba 003f61a0 0 84139c7 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRefçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1); //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship Fee TableRef'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1);  //distributionAgreementCodeçäe_(v_construct(s_keys);2) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 84139c7 003f61a0 0 2efc03b3 0 0 2
PP IPInfo QualifiedPlanEntity(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo QualifiedPlanEntityçäIF (EXISTS('Table PolicyProduct InvestProductInfo QualifiedPlanEntity';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo QualifiedPlanEntity'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key") //Invest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2efc03b3 003f61a0 0 50d0bf74 0 0 2
Party Availability(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party AvailabilityçäIF (EXISTS('Table Party Availability';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Availability'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 50d0bf74 003f61a0 0 5c283898 0 0 2
PP AP FP FOP BenefitChangeAllowed ConflictObjectInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed ConflictObjectInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed ConflictObjectInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed ConflictObjectInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5c283898 003f61a0 0 69c33088 0 0 2
ActionTypeAllowedCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table ActionTypeAllowedCCçäIF (EXISTS('Table ActionTypeAllowedCC';e_(v_construct(s_keys);0) //ActionTypeAllowedCC_id_extçä) ; çä   // then read from the table çä'Table ActionTypeAllowedCC'[e_(v_construct(s_keys);0) //ActionTypeAllowedCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69c33088 003f61a0 0 49b3a616 0 0 2
PP LoanProvision MinBalanceCalcRule(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision MinBalanceCalcRuleçäIF (EXISTS('Table PolicyProduct LoanProvision MinBalanceCalcRule';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision MinBalanceCalcRule'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //balanceTypeçäe_(v_construct(s_keys);6) //sequenceNumberçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 49b3a616 003f61a0 0 206b5df7 0 0 2
PP Breakpoint JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Breakpoint JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct Breakpoint JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Breakpoint JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct Breakpoint JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Breakpoint JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 206b5df7 003f61a0 0 159eb72c 0 0 2
PP Ownership QualifiedPlanEntity QualifiedPlanOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOptionçäIF (EXISTS('Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership QualifiedPlanEntity QualifiedPlanOption";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 159eb72c 003f61a0 0 324ebea5 0 0 2
IP InformationService(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct InformationServiceçäIF (EXISTS('Table InvestProduct InformationService';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct InformationService'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 324ebea5 003f61a0 0 3b000e5a 0 0 2
PP Authorization QualifiedPlanEntity Market(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Authorization QualifiedPlanEntity MarketçäIF (EXISTS('Table PolicyProduct Authorization QualifiedPlanEntity Market';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //authorizationKeyçäe_(v_construct(s_keys);5) //marketTypeçä) ; çä   // then read from the table çä'Table PolicyProduct Authorization QualifiedPlanEntity Market'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //authorizationKeyçäe_(v_construct(s_keys);5) //marketTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3b000e5a 003f61a0 0 627979e 0 0 2
PPExt Activity Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct OLifEExtension PolicyProductExtension Activity AttachmentçäIF (EXISTS('Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä) ; çä   // then read from the table çä'Table PolicyProduct OLifEExtension PolicyProductExtension Activity Attachment'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //activityTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 627979e 003f61a0 0 6781d6cd 0 0 2
PP AP IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption LevelizationProductOption PaymentModeMethProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //paymentModeçäe_(v_construct(s_keys);5) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6781d6cd 003f61a0 0 69a0670b 0 0 2
LevelizationOptionCC PaymentModeMethProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table LevelizationOptionCC PaymentModeMethProductçäIF (EXISTS('Table LevelizationOptionCC PaymentModeMethProduct';e_(v_construct(s_keys);0); //paymentModeçäe_(v_construct(s_keys);1) //paymentMethodçä) ; çä   // then read from the table çä'Table LevelizationOptionCC PaymentModeMethProduct'[e_(v_construct(s_keys);0);  //paymentModeçäe_(v_construct(s_keys);1) //paymentMethodçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 69a0670b 003f61a0 0 5b8d0099 0 0 2
PP AP FP FOP AdditionalRiderClassification(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalRiderClassificationçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalRiderClassification';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct AdditionalRiderClassification'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5b8d0099 003f61a0 0 6989ea08 0 0 2
Party Availability AvailabilityContactPoint(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Availability AvailabilityContactPointçäIF (EXISTS('Table Party Availability AvailabilityContactPoint';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Availability AvailabilityContactPoint'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6989ea08 003f61a0 0 1a801204 0 0 2
Party Producer Registration Exam(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration ExamçäIF (EXISTS('Table Party Producer Registration Exam';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä) ; çä   // then read from the table çä'Table Party Producer Registration Exam'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //examTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1a801204 003f61a0 0 461575e 0 0 2
PP PPInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowedçäIF (EXISTS('Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct PolicyProductInfo QualifiedPlanEntityExclude QualifiedPlanOption InheritedTimingAllowed'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 461575e 003f61a0 0 75ce3591 0 0 2
PP AP FP FOP DisabilityHealthProvisions MannerOfLossOption(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MannerOfLossOptionçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MannerOfLossOption';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct DisabilityHealthProvisions MannerOfLossOption'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 75ce3591 003f61a0 0 3997cba7 0 0 2
PP AP FP FOP BenefitChangeAllowed AllowedIndexInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedIndexInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedIndexInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct BenefitChangeAllowed AllowedIndexInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key") //FeatureOpt_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3997cba7 003f61a0 0 26db33eb 0 0 2
Party Producer License Fee(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License FeeçäIF (EXISTS('Table Party Producer License Fee';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä) ; çä   // then read from the table çä'Table Party Producer License Fee'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //feeTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 26db33eb 003f61a0 0 2f98d255 0 0 2
IP RateLockInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct RateLockInfoçäIF (EXISTS('Table InvestProduct RateLockInfo';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct RateLockInfo'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f98d255 003f61a0 0 7a6b7085 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //feeTypeçä'key3 lookup'("Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship Fee TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a6b7085 003f61a0 0 edde638 0 0 2
PP AP FP FOPExt Ownership RestrictionInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçä'key4 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct OLifEExtension FeatureOptProductExtension Ownership RestrictionInfo";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 edde638 003f61a0 0 6e6b2d2b 0 0 2
PP AP FP FOP PaymentModeMethProduct Fee JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7); //paymentModeçäe_(v_construct(s_keys);8); //paymentMethodçäe_(v_construct(s_keys);9); //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7);  //paymentModeçäe_(v_construct(s_keys);8);  //paymentMethodçäe_(v_construct(s_keys);9);  //feeTypeçä'key7 lookup'("Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct PaymentModeMethProduct Fee JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);'PP AP FP FOP'(s_keys;"FeatureOpt_Key");e_(v_construct(s_keys);7);e_(v_construct(s_keys);8);e_(v_construct(s_keys);9);e_(v_construct(s_keys);10)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6e6b2d2b 003f61a0 0 2355aab0 0 0 2
DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationshipçäIF (EXISTS('Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement FundingSourceMethodsAllowed AllowedRelationship'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2355aab0 003f61a0 0 6ecd27af 0 0 2
Party Producer License Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License AttachmentçäIF (EXISTS('Table Party Producer License Attachment';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer License Attachment'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 6ecd27af 003f61a0 0 7e97e6b0 0 0 2
JurisdictionCC(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table JurisdictionCCçäIF (EXISTS('Table JurisdictionCC';e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä) ; çä   // then read from the table çä'Table JurisdictionCC'[e_(v_construct(s_keys);0) //JurisdictionCC_id_extçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7e97e6b0 003f61a0 0 1e171572 0 0 2
PP AP FP FOP TaxWithholdingProduct(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProductçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key"); //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //taxWithholdingPlaceçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureProduct FeatureOptProduct TaxWithholdingProduct'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //featureCodeçä'PP AP FP FOP'(s_keys;"FeatureOpt_Key");  //FeatureOpt_Keyçäe_(v_construct(s_keys);7) //taxWithholdingPlaceçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 1e171572 003f61a0 0 b6ce25e 0 0 2
PP Attachment(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AttachmentçäIF (EXISTS('Table PolicyProduct Attachment';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct Attachment'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 b6ce25e 003f61a0 0 4b112cf5 0 0 2
Party Producer Registration RegistrationJurisdiction Attachment AttachmentReference(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer Registration RegistrationJurisdiction Attachment AttachmentReferenceçäIF (EXISTS('Table Party Producer Registration RegistrationJurisdiction Attachment AttachmentReference';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Producer Registration RegistrationJurisdiction Attachment AttachmentReference'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4b112cf5 003f61a0 0 2f931868 0 0 2
Party Organization OrganizationFinancialData(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Organization OrganizationFinancialDataçäIF (EXISTS('Table Party Organization OrganizationFinancialData';e_(v_construct(s_keys);0) //partyTypeCodeçä) ; çä   // then read from the table çä'Table Party Organization OrganizationFinancialData'[e_(v_construct(s_keys);0) //partyTypeCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2f931868 003f61a0 0 3cb3aba0 0 0 2
PP LoanProvision RV TableRef JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //loanTypeçäe_(v_construct(s_keys);5); //rateVariationCodeçä'key4 lookup'("Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //loanTypeçäe_(v_construct(s_keys);5);  //rateVariationCodeçä'key4 lookup'("Table PolicyProduct LoanProvision RateVariation TableRef JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3cb3aba0 003f61a0 0 3a18b57c 0 0 2
PP CMProduct CommOptionAvailable JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5); //commissionAgePartySelectionçäe_(v_construct(s_keys);6); //participantBasedPartySelectionçäe_(v_construct(s_keys);7); //commOptionçä'key6 lookup'("Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //commissionAgeCalculationTypeçäe_(v_construct(s_keys);5);  //commissionAgePartySelectionçäe_(v_construct(s_keys);6);  //participantBasedPartySelectionçäe_(v_construct(s_keys);7);  //commOptionçä'key6 lookup'("Table PolicyProduct CommissionProduct CommOptionAvailable JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5);e_(v_construct(s_keys);6);e_(v_construct(s_keys);7);e_(v_construct(s_keys);8)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 3a18b57c 003f61a0 0 61e6aead 0 0 2
PP AP FeatureTransactionProduct FPInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct FeatureTransactionProduct FeatureProductInfoçäIF (EXISTS('Table PolicyProduct AnnuityProduct FeatureTransactionProduct FeatureProductInfo';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct FeatureTransactionProduct FeatureProductInfo'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61e6aead 003f61a0 0 5cd357b5 0 0 2
PP FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndexçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct QualifiedPlanOption OLifEExtension QualifiedPlanOptionExtension RateVariationThresholdIndex'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 5cd357b5 003f61a0 0 536a80b7 0 0 2
PP AP IncomePayoutProductOption AllowedRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationshipçäIF (EXISTS('Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship';PP(s_keys;"Policy_Key") //Policy_Keyçä) ; çä   // then read from the table çä'Table PolicyProduct AnnuityProduct IncomePayoutProductOption AllowedRelationship'[PP(s_keys;"Policy_Key") //Policy_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 536a80b7 003f61a0 0 500e1e44 0 0 2
PP FreelookInvestRuleProduct JurisdictionApproval(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct JurisdictionApprovalçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4); //investRuleProductçä'key3 lookup'("Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4);  //investRuleProductçä'key3 lookup'("Table PolicyProduct FreelookInvestRuleProduct JurisdictionApproval";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4);e_(v_construct(s_keys);5)) //jurisdictionçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 500e1e44 003f61a0 0 37d42d37 0 0 2
DistributionAgreement PPInfo AllowedFeatureTransaction(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table DistributionAgreement PolicyProductInfo AllowedFeatureTransactionçäIF (EXISTS('Table DistributionAgreement PolicyProductInfo AllowedFeatureTransaction';e_(v_construct(s_keys);0); //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä) ; çä   // then read from the table çä'Table DistributionAgreement PolicyProductInfo AllowedFeatureTransaction'[e_(v_construct(s_keys);0);  //carrierCodeçäe_(v_construct(s_keys);1) //distributionAgreementCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 37d42d37 003f61a0 0 2539cf51 0 0 2
IP OLifEExtension InvestProductExtension TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table InvestProduct OLifEExtension InvestProductExtension TableRefçäIF (EXISTS('Table InvestProduct OLifEExtension InvestProductExtension TableRef';IP(s_keys;"IInvest_Key") //IInvest_Keyçä) ; çä   // then read from the table çä'Table InvestProduct OLifEExtension InvestProductExtension TableRef'[IP(s_keys;"IInvest_Key") //IInvest_Keyçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 2539cf51 003f61a0 0 28cc15c2 0 0 2
PP Ownership AllowedRelationship ComboRelationship(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct Ownership AllowedRelationship ComboRelationshipçäIF (EXISTS('Table PolicyProduct Ownership AllowedRelationship ComboRelationship';PP(s_keys;"Policy_Key"); //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä) ; çä   // then read from the table çä'Table PolicyProduct Ownership AllowedRelationship ComboRelationship'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'key2 lookup'("Table PolicyProduct Ownership AllowedRelationship ComboRelationship";PP(s_keys;"Policy_Key");e_(v_construct(s_keys);4)) //issueGenderçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 28cc15c2 003f61a0 0 7a27a31e 0 0 2
PP LoanProvision(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct LoanProvisionçäIF (EXISTS('Table PolicyProduct LoanProvision';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä) ; çä   // then read from the table çä'Table PolicyProduct LoanProvision'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //loanTypeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 7a27a31e 003f61a0 0 4e1e2b98 0 0 2
Party Producer License Attachment SignatureInfo(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table Party Producer License Attachment SignatureInfoçäIF (EXISTS('Table Party Producer License Attachment SignatureInfo';e_(v_construct(s_keys);0); //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä) ; çä   // then read from the table çä'Table Party Producer License Attachment SignatureInfo'[e_(v_construct(s_keys);0);  //partyTypeCodeçäe_(v_construct(s_keys);1) //signatureCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 4e1e2b98 003f61a0 0 61dc2b19 0 0 2
PP FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignationçäIF (EXISTS('Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation';PP(s_keys;"Policy_Key"); //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä) ; çä   // then read from the table çä'Table PolicyProduct FreelookInvestRuleProduct FundingSourceMethodsAllowed AllowedRelationship AllowedDesignation'[PP(s_keys;"Policy_Key");  //Policy_Keyçäe_(v_construct(s_keys);4) //investRuleProductçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
F1 61dc2b19 003f61a0 0 0 0 0 2
PP IPInfoExt RV TableRef(s_keys; field_name)
Funktion
 // Looks up the plan info for field_name from table Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRefçäIF (EXISTS('Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef';PP(s_keys;"Policy_Key"); //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key"); //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä) ; çä   // then read from the table çä'Table PolicyProduct InvestProductInfo OLifEExtension InvestProductInfoExtension RateVariation TableRef'[PP(s_keys;"Policy_Key");  //Policy_Keyçä'PP IPInfo'(s_keys;"Invest_Key");  //Invest_Keyçäe_(v_construct(s_keys);6) //rateVariationCodeçä](field_name) ; çä   // Else return error messageçä"NoProdInfoFound"çä)
A0 003f4280 0 0 0 0 0 0

T0 003f42ec 0 0 0 0 0 0

I0 003f4358 0 0 0 0 0 0

-
O0
E0
L0
B0
P0
F754
003f2928
003f46f0
003f4870
003f49a8
003f4b98
003f4e18
003f4f78
01e607b0
01e605a8
01e60cf0
01e60cf1
01e60cf2
003f5008
003f5fe0
003f61a0
003f6350
2dc4f71d
370e1bda
6c272eb4
221f7b7a
76370b95
40d78e63
4dd2fd5c
72dc3e95
58ac133
47e6bcf7
7280ffb6
6bd2efda
d46f4f3
4cff764
5e102ccd
6db63769
23e91f18
2fde7e52
2d5074f5
414e843a
1aa5d783
25ac7ad1
45641add
7ec7d693
22f7815c
61d607be
1fbb3b6a
6fe0e5ca
45dfb332
1046ba79
474d61e2
a87dfc2
7aecdfd0
486da459
32239591
6fe84ed3
601a6c71
1112fe2f
7c87c0af
42c60d86
2f0563c6
2721675
13799a80
228b093f
2f5458b6
5b7c9212
1aa15e2c
116ab66c
2a69efc6
15a91cc2
687d046d
2f70c17
4937daf9
7f867f77
2b81a741
87fcb0b
2d02b667
7b9c34a7
4dd28a27
4f64ad0e
2ae9efc8
1da37887
6eb9ac82
79941d65
1bba330f
247c2a5e
11557b66
7f200523
5325740d
7f61595d
645f2855
36045895
2b6b03f
4ae45962
608e0b2
8ca068d
42f5db50
74d083b6
b4803f0
6e4cbe42
4f7f193c
7df393b0
14bcbae7
776989d4
4be12f88
74796e20
21526cb2
19afe2ae
7588be9f
290d5967
39f0b5c
53d77c8c
9d29158
3a60a67b
48f9d4dd
62f50613
7e225592
3cb77d5f
61fce21e
442c6a50
272b71e2
397f87e7
4381caaa
258bacad
13d662e7
64606d35
2f63dc68
63ef26ad
5a91a9
63a60060
41ad558a
172ef67f
2e21a56e
27220b5b
1963e5da
678f1214
3e3fbe38
24757e5
1ce08bfc
47c0aaa8
6aa4c6fa
6e65eaa
13b9ff58
56a05feb
49a7315c
6d55bb7d
22467908
67e42540
5afc97ef
1790a2ca
40700322
580d2163
888aa05
145d622
8f8f344
515aee4e
ad7fc04
7ad073ad
1b1304d4
1954c37b
76142397
41c68918
9cd6c49
12ea813e
677ff510
3dd83168
612eebe
5e2844c1
58323cb2
85cbca1
207ae5be
1139ae88
4079fcad
46a1c3cc
7f64cabc
aa159f8
25e2ef0b
21931d4b
75312dd
52251d3a
28cdb8bc
6e1c2ad0
29c126f8
25c673f1
27474426
7d490683
25850873
55511ee5
629cbfdf
5a28d08e
6b4bf17d
42a55101
4f6a45b9
605dd9
49b95daa
4918cf64
673e6dfe
4e249243
16f45b0c
47d9c5f2
4c32ad04
528a9225
5a6a5ce8
5092bbd9
dae373d
6852fbde
3c1a1346
d3e5b9a
4d9c32d4
7a0cfb4a
42f16c94
38d849e5
1277741e
5fbd702b
7b97a28
3b15034
6a582bf4
34778e20
741c62d1
1fd28f55
595a493f
4b35d72c
3bf84bf8
30a086fd
5ada125f
35db88f3
7770247
6b37a258
24b7715c
66e57adc
2ffacc3b
1aa425c0
11416591
1826b1f1
24ba6777
1213091f
51602a7e
3060ce51
3cc23171
6c921647
52972d77
6e7c679b
39b22c24
4792b9f8
400d755b
6e7ad613
15e4f2c5
7f8ead4f
31e8717f
234a9bcd
1caf206f
6eda0892
4dba530f
ce9ea7d
46aa4d11
4a84d688
751674dc
72f47e26
2017d787
25f6707e
4b6c9bb5
73fbd24
4f1effc4
2e49e043
4666532c
47d2b30b
1e987baa
655f8539
5ba29134
4b915836
598ce64d
556ce2c3
79bf617
790fed2
7d38726a
9b3696c
317d5444
21517541
771d2b47
6edb26d8
58a947b9
31d17fde
7e0322d4
50d1086b
70d332b6
954091e
57ee0f56
1ad71cba
1bbd032f
7ef3df69
683d709e
136fffb6
60b3bfc7
686735eb
a6230e2
404aa26e
3b15580f
2f43cf51
2dfaf2ae
34c3c787
37ead1e0
46da4dce
1c91a37c
11a85cf1
1e337dec
1f2830cd
1e9a70f2
303b310e
5b64b576
3a44c80b
f8aa929
3ec0ca56
6061c82c
180a1948
31fafa5d
74ff0989
612563a6
bc844a7
7b9cf450
6f08a2ab
c2147d4
59745b1f
189c831
3c053219
7b54849
3dc6c4f
8362fc1
1f5ef1c6
5bc82d8f
4f296716
10da8776
452a71c8
1ce1a28d
6d9f9710
d1f265c
3385bc16
400fb22e
55d32996
2aec5a3f
743a568b
572136f5
761c54cb
4eb4b8ec
6a37c746
1653bb0a
3db6365
188e7afa
1b36e650
c500224
5a6e313c
40c7c187
421d1d72
3daaee01
213a9b6c
6f683ac6
74d63656
6382a40e
565f8fd6
5998ccda
ab2dcf7
509a9c89
85c2a01
6e6e0c59
2044b010
fd2a8c5
73b082e9
2d183fb4
581dc2c6
5cc683eb
689552c
4ff97185
68a168c7
27761d77
5b59add8
79a1b0ff
12e36c42
461e566d
34e85603
67f13dfc
f66875
203ebfa5
3760221e
3d38a082
daf51d7
27cf9cef
59f3bfd0
689da1c1
2c9cf26a
7c89dd7c
2cfadff
78ae06c5
4f88b4c3
53a3f370
52557f48
130f3bc8
5d2f7396
5745bf0f
2696634e
2aedf2fc
18f9709d
4d3ec0d9
7b42c43d
669a82cd
3007eaf4
407f69b6
43d18e76
32404579
2ef891d7
4c0857a7
6b51597
104ffe5a
161f75c3
5a87f749
4cbd2d5d
79f51eca
41bde1e5
2cc0f7d7
3a663baa
4220c434
3d1a1fbb
51a79463
6edff5db
a3c0beb
1fcdab51
6ca60b41
710638c3
30286221
488e5a65
2122d84d
738043e
7217713d
7bc55086
7a9f9e4f
37c0eec3
289901e1
78c03ec4
2ebfd868
6b724a3a
2d0d6cfd
2817f058
62e16a82
7753e791
5e68530d
608b6772
620474cb
7e575328
48c02de6
5dfc4e3f
ce56211
66f40d06
11501566
242f4bb3
67f4610e
43778b0c
1edc608e
1b70029a
d605cb4
2624f44a
4515eda5
768d6ded
3d31e8f9
360bc8f
62669e97
76b0d199
a3fc429
20c7ac1a
32d6f782
2f799d56
22d11dba
5b6711c2
46c27bd8
1080474a
64ffaf50
585a3ee
4126af0c
2e5f3c7b
e5cdb99
414b6a29
29c235f
4aeb82d3
2e902a70
18db368
15355495
17272846
b7b2b79
24b6eac4
32e2cda9
7737ca87
472c1d90
1bfbe44b
2884f5dd
33340bc7
157a32d7
55305ce9
5bbe4291
6a773110
470d77e
111426d0
7d9ad901
29e443d5
5b943f7
5957e010
69f24970
534aa12b
2af96d54
11781cbc
49bb9eb1
e1d6640
a67af27
236ebd06
2f4cb8bd
63f0d9cc
579b3492
142504a4
75383c9e
527f936
78da98c1
1a798c13
27472723
36fb26ff
6a59079d
2367e4dd
200409a0
562f066e
478a9d75
7e8429f4
6fe388b4
10dd8fa1
59c50317
6e604ea8
2d4f1763
3f700556
3eda999
22dada7
682cf762
3e3f979f
4345ec3c
44a0deb3
221a6b31
2f8b9c56
2d3a2443
b66f598
6a26f479
497ed8fb
2dd6b073
58ae01e1
672a302c
2ac3466f
16fe3c72
4e7524c8
40743ba2
52384fea
840a75d
5c5c5199
74b3d965
6b9afa4b
aa9fb67
58c0dc57
687fff79
7028c6c5
1a6375ba
63cc996b
76a03c65
29d473c5
433b5e19
1a3571bb
48968687
27056205
4bc19d2a
7f011aa
35375084
72fa2d60
34001e72
5cee84f7
49f262bb
2c98bbbf
34a0a99
353c6048
1b658bf3
b3ff633
f41f5ad
72e5e254
4463348f
2daf9130
3cae2d96
220b2fc1
4ac5fe39
1c3fad68
508bae05
2e635f45
6fdc626d
36f39373
67259dcf
3ce74240
7c7e39a1
7d687ba
22e7c429
583f5284
72592c9a
61f935da
7340693c
527ea979
780d7765
7c2b8cf6
6050af8c
6029d35a
2afe5380
374882e2
2a230f12
161276ff
6c56adc9
57a29f7e
76c3f6e4
3564750f
4c6a79c2
1602b546
38504546
1e6de6d3
313fd3e5
1dbc56a3
3ff354ae
2b16e838
1cb948a1
1cfc80c5
5df0ff42
b7a5751
62ece92
2d249a34
64ba1459
6ccabda5
33196178
7d07b9f8
395e983c
361b9a07
567f3796
b242551
1e1b8b54
4de6103b
768877c0
54c704aa
2e3f89c4
42d66cc
25048f5c
5428218
57bfb85
3c24a4ef
53fcabf4
733f06f
2ab6db5b
3c278c4a
5b051290
6075dc3f
50dc8da8
1ca2a9da
69b3f68c
515d85d1
6d7987b7
68f51590
712d4107
1191a16c
7d0537a9
29613f97
62ce738c
4979b076
659ff5f1
3a722d00
3c732174
4706e225
6bdf8dee
611735c0
4a2b4874
68043804
3304a7ad
5cda6209
58e82eb4
207fa7cd
340e9fba
59a45002
47b983c7
2289f5c9
cea7deb
32657132
280fe1d
7578fe2d
5e844c4
29a01b83
382b35a
48b205af
5c233a57
772fe244
3c2e523b
d391157
72750b78
4d635490
3207da4d
73a53893
4581d222
4aedb798
7251cf3e
dd1e513
16ace80f
3f6c0412
4126db93
4b70202d
2073dbd3
2f449759
36c5d226
704bf469
30d7216
2c28038a
4ab6b194
6a9033fb
11237f4f
7f360f7b
4d1c13ba
84139c7
2efc03b3
50d0bf74
5c283898
69c33088
49b3a616
206b5df7
159eb72c
324ebea5
3b000e5a
627979e
6781d6cd
69a0670b
5b8d0099
6989ea08
1a801204
461575e
75ce3591
3997cba7
26db33eb
2f98d255
7a6b7085
edde638
6e6b2d2b
2355aab0
6ecd27af
7e97e6b0
1e171572
b6ce25e
4b112cf5
2f931868
3cb3aba0
3a18b57c
61e6aead
5cd357b5
536a80b7
500e1e44
37d42d37
2539cf51
28cc15c2
7a27a31e
4e1e2b98
61dc2b19
A0
T0
!10
003f46f0 -2 -2
Description: Converts the date to format YYYYMMDD.çä çäModification Log:çä03/07/2007 CSC Illustrations ILLUS001  Modified function for performanceçä10/31/2007 CSC Initial Calculation/Ruleçä
003f49a8 -2 -2
Description: Checks that Key2 exists in table lookup
003f4b98 -2 -2
Description: Checks that Key3 exists in table lookup
003f4e18 -2 -2
Description: Checks that Key4 exists in table lookup
003f4f78 -2 -2
Description: Checks that Key5 exists in table lookup
01e607b0 -2 -2
Description: Checks that Key6 exists in table lookup
01e605a8 -2 -2
Description: Checks that Key7 exists in table lookup
01e60cf0 -2 -2
Description: Checks that Key8 exists in table lookup
01e60cf1 -2 -2
Description: Checks that Key9 exists in table lookup
01e60cf2 -2 -2
Description: Checks that Key10 exists in table lookup
;Offset=00000000
