;1	08.12.2016 13:25:54	jlawrie2	
X0 266e09c 0 2695d20 0 0 0 0

X0 2695d20 266e09c 2695d98 0 0 0 0
-- Unit Test Cases --
X1 2695d98 2695d20 2695e50 0 0 0 2
Round - 12000
'GEN Round'(12345; -3)
12000
X1 2695e50 2695d98 0 0 0 0 2
Round1 - 13000
'GEN Round'(12545; -3)
13000
O0 266df4c 0 0 0 0 0 0

E0 266dfbc 0 0 0 0 0 0

L0 266e02c 0 0 0 0 0 0

B0 266e1ec 0 0 0 0 0 0

P3 266e10c 0 2696050 0 0 0 2

--description
Face amount solves for Universal Life (UL), Variable Universal Life (VUL) and Whole Life (WL) products are needed within Product Accelerator.  çäThe requirement is to provide support for the following 12 face amount solve options:çä çä1.âGuideline Single Premiumçä2.âGuideline Annual Premiumçä3.â7-Pay Premiumçä4.âMinimum Annual Premiumçä5.âSecondary No Lapse Guarantee Premium çä6.âCommission Target Premiumçä7.âRecommended Premium, Shadow Accountçä8.âLevel Premium to Endow based on Current Assumptionsçä9.âTarget Cash Value for Target Duration çä10.âBase and Term Face Amount Mix UL / VUL çä11.âSell Premium for Participating WL çä12.âBase and Term Face Amount Mix WLçä çäRELEASE LOG:çäRELEASE 1301 - wmA-J DevelopmentçäRELEASE 1301 - SCARAB/JIRA issues PAD-820, PAD-816çäRELEASE 1101 - PAC013 calcTypeçä
LICENSENAME
"CSC US internal use only - Workbench"
COMPILERVERSION
"4.5.4"
P13 2696050 266e10c 267d4f0 0 0 0 2
Illustration Face Amount Solve
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Illustration Face Amount Solve "
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"FaceAmountSolve"
OUTPUT Source Version Number
'GEN VersionInfo'
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 267d4f0 2696050 27a5a60 0 0 0 2
UL and VUL Products
IncType
mandatory
IncRule
'INPUT Calling System'
IncValue
"Test"
P5 27a5a60 267d4f0 0 0 0 0 2
UL Face Amount Solves
IncType
mandatory
IncRule

IncValue

-- OUTPUT Illus Face Amt Solve Face Amount
/* will returned solved face amount*/çä'GEN Round'('FaceSolve Face Amount'('GEN Vector Blank'); 0)çä çä
OUTPUT Illus Face Amt Solve Face Amount
 /* will returned solved face amount*/ 'GEN Round'('FaceSolve Face Amount'('GEN Vector Blank';TransEffDur);0)
F0 266e17c 0 26aab78 0 0 0 0

F1 26aab78 266e17c 421548da 0 0 0 2
:FaceSolve
Funktion

F1 421548da 26aab78 4b5ba841 26aabf0 0 0 2
FaceSolve Face Amount(calcType; yearIndex)
Funktion
'FaceSolve RoundNearestUnit'(calcType;IF (('Illus Face Amt Solve DesignType'(calcType) = 1000500005 || 'Illus Face Amt Solve DesignType'(calcType) = 1000500006) && NOT('ACCS TARGET CalcMethod Used'('CalcType MTGT'(calcType)) = 3) ; çä  'FaceSolve RateFile Solves'('CalcType MTGT'(calcType)) ; çä  IF ('Illus Face Amt Solve DesignType'(calcType) = 1000500007 && NOT('ACCS TARGET CalcMethod Used'('CalcType CTGT'(calcType)) = 3) ; çä    'FaceSolve RateFile Solves'('CalcType CTGT'(calcType)) ; çä    'FaceSolve CashValue Solves'('CalcType Current'(calcType);yearIndex)çä  )çä))
F1 4b5ba841 421548da 0 0 0 0 2
FaceSolve Face Amount FaceSolve FaceAmountInitialGuess(calcType; yearIndex)
Funktion
'FaceSolve FaceAmountInitialGuess'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;yearIndex);yearIndex)
F1 26aabf0 26aab78 0 26aae60 0 0 2
FaceSolve PremiumDuration(calcType)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guideline level premium face solveçä1000500002 : 'TaxCompliance Policy Premium Duration'(calcType;TransEffDur);çä   // Guideline Single premium face solveçä1000500003 : 1;çä   // 7 pay premium face solveçä1000500004 : 7;çä   // Minimum premium solve; NLG premium solveçä1000500005;1000500006 : 'PIDRV NLG ExpirationDuration'(calcType);çä   // Target Premiumçä1000500007 : 'PIDRV CoverageProduct MaturityDuration'(calcType;TransEffDate;0);çä   // shadow account recommended premiumçä1000500008 : 'FaceSolve ShadowAccount TargetDuration'(calcType);çä   // Endow based on Current Assumptionsçä1000500009 : 'PIDRV CoverageProduct MaturityDuration'(calcType;TransEffDate;0);çä   // Target cash value for target durationçä1000500010 : 'Illus Face Amt Solve Target Duration';çä   //  Base / Term mix çä1000500011 : 'PIDRV CoverageProduct MaturityDuration'(calcType;TransEffDate;0);çä   : 0)çä
F1 26aae60 26aab78 266fac8 35795a6d 0 0 2
FaceSolve TargetDuration(calcType)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guideline level premium , GSP, 7-pay, çä1000500002;1000500003;1000500004 : 'TaxCompliance Policy Maturity Duration'(calcType);çä   // Minimum premium sovlveçä1000500005 : 'FaceSolve MinimumTargetPremiumDuration'(calcType);çä   // Shadow account min premiumçä1000500006 : 'FaceSolve MinimumTargetPremiumDuration'(calcType);çä   // Target premiumçä1000500007 : 'FaceSolve PremiumDuration'(calcType);çä   // Recommended premium shadow accountçä1000500008 : 'FaceSolve ShadowAccount TargetDuration'(calcType);çä   // Endow based on Current Assumptionsçä1000500009 : 'PIDRV CoverageProduct MaturityDuration'(calcType;TransEffDate;0);çä   // Target cash value for target durationçä1000500010 : 'Illus Face Amt Solve Target Duration';çä   //  Base / Term mix çä1000500011 : 'PIDRV CoverageProduct MaturityDuration'(calcType;TransEffDate;0);çä   // else - no valid face solve specifiedçä : 0)çä
F1 266fac8 26aae60 0 266fc18 0 0 2
FaceSolve ShadowAccount TargetDuration(calcType)
Funktion
IF ('STD Policy Has Shadow Account'(calcType) ; çä  'SHADOW CPG PlanExpirationDuration'(calcType) ; çä  0çä)
F1 266fc18 26aae60 0 0 0 0 2
FaceSolve MinimumTargetPremiumDuration(calcType)
Funktion
'PIDRV NLG ExpirationDuration'(calcType)
F1 35795a6d 26aab78 0 266fda0 0 0 2
FaceSolve Target CashValue(calcType; faceAmount)
Funktion
IF ('FaceSolve FaceAmount Solve Type Endows'(calcType) ; çä  faceAmount ; çä   // target CVçä'Illus Face Amt Solve Target Cash Value'çä)
F1 266fda0 26aab78 0 266fe80 0 0 2
FaceSolve Premium from Input(calcType)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guideline level premium face solveçä1000500002 : 'Policy LifeUSA GuidelineAnnPrem';çä   // Guideline Single premium face solveçä1000500003 : 'Policy LifeUSA GuidelineSinglePrem';çä   // 7 pay premium face solveçä1000500004 : 'Policy LifeUSA SevenPayPrem';çä   // Minimum premium sovlve, NLG min premiumçä1000500005;1000500006 : 'Policy Life MinPremAmt';çä   // Target Premiumçä1000500007 : 'Policy Life TargetPremAmt';çä   // Recommended premium shadow accountçä1000500008 : 'Illus Face Amt Solve Premium';çä   // Endow based on Current Assumptionsçä1000500009 : 'Illus Face Amt Solve Premium';çä   // Target cash value for target durationçä1000500010 : 'Illus Face Amt Solve Premium';çä   //  Base / Term mix çä1000500011 : 'Illus Face Amt Solve Premium')çä
F1 266fe80 26aab78 0 2670358 0 0 2
FaceSolve calctype(calcType)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guideline level premium face solveçä1000500002 : 'CalcType GLP'(calcType);çä   // Guideline Single premium face solveçä1000500003 : 'CalcType GSP'(calcType);çä   // 7 pay premium face solveçä1000500004 : 'CalcType 7PP'(calcType);çä   // Minimum premium sovlve / NLG premiumçä1000500005;1000500006 : IF ('Std Policy Has MNLP'(calcType) ; çä    'CalcType MTGT'(calcType) ; çä    'GEN Vector Blank'çä  );çä // Target premiumçä1000500007 : 'CalcType CTGT'(calcType);çä // Recommended premium shadow accountçä1000500008 : 'CalcType Shadow'(calcType);çä // Endow based on Current Assumptionsçä1000500009 : 'CalcType Current'(calcType);çä // Target cash value for target durationçä1000500010 : 'CalcType Current'(calcType);çä //  Base / Term mix çä1000500011 : 'CalcType Current'(calcType);çä : 0)çä
F1 2670358 26aab78 0 2670588 0 0 2
FaceSolve Interest Rate(calcType)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guideline level premium face solveçä1000500002;1000500003;1000500004;1000500005;1000500006 : 'TaxCompliance Policy Interest Rate'('FaceSolve calcType'(calcType));çä   // Target premiumçä1000500007;1000500009;1000500010;1000500011 : 'Policy Life CurrIntRate';çä   // Shadow Accountçä1000500008 : 'SHADOW Shadow Interest Rate'(calcType;1);çä   : 0)çä
F1 2670588 26aab78 0 2670730 0 0 2
FaceSolve FaceAmount Solve Type Endows(calcType)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guidelines, 7-pay, target premçä1000500002;1000500003;1000500004;1000500007; //Endow on current assumptions;  base/term mixçä1000500009;1000500011 : 1;çä   // MNLP, Shadow account; Target CV at target Duration ("endows" at target cv)çä1000500005;1000500006;1000500008;1000500010 : 0;çä   : 0)çä
F1 2670730 26aab78 0 45f6f8f 0 0 2
FaceSolve RoundNearestUnit(calcType; faceAmount)
Funktion
'GEN Round'(faceAmount / 'PI CoverageProduct ValuePerUnit'(calcType;'Policy ProductCode';0;'Policy EffDate');0) * 'PI CoverageProduct ValuePerUnit'(calcType;'Policy ProductCode';0;'Policy EffDate')
F1 45f6f8f 26aab78 2670eb0 26729f8 0 0 2
FaceSolve Face Amount Premium(calcType; faceAmount; yearIndex)
Funktion
CASE('Illus Face Amt Solve DesignType'(calcType);çä   // Guideline level premium face solveçä1000500002 : 'TaxCompliance Guideline Level Premium FaceSolve'(calcType;faceAmount);çä   //'FaceSolve Guideline Level Premium'(calcType; faceAmount);çä// Guideline Single premium face solveçä1000500003 : 'TaxCompliance Guideline Single Premium FaceSolve'(calcType;faceAmount);çä   //'FaceSolve Guideline Single Premium'(calcType; faceAmount);çä// 7 pay premium face solveçä1000500004 : 'TaxCompliance 7 Pay Premium FaceSolve'(calcType;faceAmount);çä   //'FaceSolve 7Pay Premium'(calcType; faceAmount);çä// Minimum premium sovlveçä1000500005 : 'FaceSolve Minimum Annual Premium'(calcType;faceAmount;yearIndex);çä   // Shadow account min premiumçä1000500006 : 'FaceSolve Secondary No Lapse Guarantee Premium'(calcType;faceAmount;yearIndex);çä   // Target Premiumçä1000500007 : 'FaceSolve Commission Target Premium'(calcType;faceAmount;yearIndex);çä   // Recommended premium shadow accountçä1000500008 : 'FaceSolve Recommended Shadow Account Premium'(calcType;faceAmount;yearIndex);çä   // Endow based on Current Assumptionsçä1000500009 : 'FaceSolve Level Premium to Endow'(calcType;faceAmount;yearIndex);çä   // Target cash value for target durationçä1000500010 : 'FaceSolve TargetCV Premium'(calcType;faceAmount;yearIndex);çä   //  Base / Term mix çä1000500011 : 'FaceSolve Base Term Mix Premium'(faceAmount))çä
F1 2670eb0 45f6f8f 2671068 0 0 0 2
-- Face Solve Types
Funktion

F1 2671068 2670eb0 0 2671158 0 0 2
FaceSolve Guideline Single Premium(calcType; faceAmount)
Funktion
'TaxCompliance Guideline Single Premium FaceSolve'(calcType;faceAmount)
F1 2671158 2670eb0 0 2671378 0 0 2
FaceSolve Guideline Level Premium(calcType; faceAmount)
Funktion
'TaxCompliance Guideline Level Premium FaceSolve'(calcType;faceAmount)
F1 2671378 2670eb0 0 360d943 0 0 2
FaceSolve 7Pay Premium(calcType; faceAmount)
Funktion
'TaxCompliance 7 Pay Premium FaceSolve'(calcType;faceAmount)
F1 360d943 2670eb0 0 74bf58d3 0 0 2
FaceSolve Minimum Annual Premium(calcType; faceAmount; yearIndex)
Funktion
'TARGET Total Target Premium FaceSolve'(faceAmount;'FaceSolve calcType'(calcType))
F1 74bf58d3 2670eb0 0 1048b253 0 0 2
FaceSolve Secondary No Lapse Guarantee Premium(calcType; faceAmount; yearIndex)
Funktion
'TARGET Total Target Premium FaceSolve'(faceAmount;'FaceSolve calcType'(calcType))
F1 1048b253 2670eb0 0 5ae2f12a 0 0 2
FaceSolve Commission Target Premium(calcType; faceAmount; yearIndex)
Funktion
'TARGET Total Target Premium FaceSolve'(faceAmount;'FaceSolve calcType'(calcType))
F1 5ae2f12a 2670eb0 542fcc7c 6e8d49fb 0 0 2
FaceSolve Recommended Shadow Account Premium(calcType; faceAmount; yearIndex)
Funktion
'GEN Round'(IF ( /*Is there value shadow account?*/ 'STD Policy Has Shadow Account'(calcType) ; çä   /*Yes - return premium required to give zero cash valueçäâââat shadow account maturity*/ 'FaceSolve Premium Required to Give Zero CV'('CalcType Shadow'(calcType);faceAmount;yearIndex) ; çä   // Else specified coverage option is not a shadow accountçä'Messages SystemMessage'("CA1016";'Message Language';v_('SHADOW Model Name';"'Projected Shadow Account Maturity Level Premium FaceSolve'"))çä); // Round 2 placesçä2)
F1 542fcc7c 5ae2f12a 0 0 0 0 2
FaceSolve Premium Required to Give Zero CV(calcType; faceAmount; yearIndex)
Funktion
MIN('SHADOW Iterative Premium Solve Rec'(calcType;'Solve Initial Premium Guess'('SharedVector SolveParms MakeFaceAmount'(calcType;faceAmount);'FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;yearIndex)); // Initial premium guess çä'SHADOW Projected Shadow Account Balance'(calcType;'SharedVector SolveParms ReplaceFaceAmount'(calcType;faceAmount;'SharedVector SolveParms MakePremium'('Solve Initial Premium Guess'('SharedVector SolveParms MakeFaceAmount'(calcType;faceAmount);'FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;yearIndex));'SHADOW Criteria Target Duration'('Vector ULSHD Premium Search Criteria'(calcType))));V_REPLACE('Vector ULSHD Addl Info'(calcType;'GEN Vector Blank';yearIndex);FALSE;2); // Don't limit premiums by guidelines for searchçä'SHADOW Criteria Target Duration'('Vector ULSHD Premium Search Criteria'(calcType));12);0;0;0;faceAmount;1;V_REPLACE('Vector ULSHD Addl Info'(calcType;'GEN Vector Blank';yearIndex);FALSE;2); // Don't limit premiums by guidelines for searchçä'Vector ULSHD Premium Search Criteria'(calcType);'SharedVector SolveParms ReplaceFaceAmount'(calcType;faceAmount;'SharedVector SolveParms MakePremium'('Solve Initial Premium Guess'('SharedVector SolveParms MakeFaceAmount'(calcType;faceAmount);'FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;yearIndex));'SHADOW Criteria Target Duration'('Vector ULSHD Premium Search Criteria'(calcType))))); // Apply max cap of GLPçä'Policy LifeUSA GuidelineAnnPrem')
F1 6e8d49fb 2670eb0 0 6d9fd9ac 0 0 2
FaceSolve Level Premium to Endow(calcType; faceAmount; yearIndex)
Funktion
'ULDocs Premium Solve FaceSolve'(calcType;faceAmount;'FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;yearIndex))
F1 6d9fd9ac 2670eb0 0 26727e0 0 0 2
FaceSolve TargetCV Premium(calcType; faceAmount; yearIndex)
Funktion
'ULDocs Premium Solve FaceSolve'(calcType;faceAmount;'FaceSolve Vector Premium Search Criteria'(calcType;'Illus Face Amt Solve Target Cash Value';yearIndex))
F1 26727e0 2670eb0 0 0 0 0 2
FaceSolve Base Term Mix Premium(faceAmount)
Funktion
0
F1 26729f8 26aab78 26737f0 26740b8 0 0 2
-- Face Amount Solve Functions --
Funktion

F1 26737f0 26729f8 2673fc8 69afbb97 0 0 2
FaceSolve FaceAmount Guess(calcType; currFaceAmountGuess; currPremium; prevFaceAmountGuess; prevPremium; targetPremium;FaceAmountTolerance; lowBound; highBound; iteration_num)
Funktion
IF ( /*starting out*/ iteration_num = 1 ; çä   // Determine the next guess based on only the current guess and current cv for the initial guess sinceçä// the previous guess and previous cv won't be valid for the first iteration.çäIF ( /*Premium guess too high*/ currPremium > targetPremium ; çä     // Try 1 unit below if initial guess is too highçäcurrFaceAmountGuess - 'PI CoverageProduct ValuePerUnit'(calcType;'Policy ProductCode';0;'Policy EffDate') ; çä     /*Try 1 unit above if the premium guess is too low*/ currFaceAmountGuess + 'PI CoverageProduct ValuePerUnit'(calcType;'Policy ProductCode';0;'Policy EffDate')çä  ) ; çä'GEN Round'(IF ( /*Use the secant method for iterations 2 through 6*/ iteration_num <= 6 && targetPremium > 10 ; çä   // Secant method has issues when target  approaches 0çäIF ( /*Has guess changed the premium?*/ currPremium = prevPremium ; çä     /*No - stick with what we've got*/ currFaceAmountGuess ; çä     /* try again*/ 'FaceSolve Bound FaceAmount Guess'(lowBound;highBound;currFaceAmountGuess - ((currPremium - targetPremium) * ((currFaceAmountGuess - prevFaceAmountGuess) / (currPremium - prevPremium))))çä  ) ; çä // Use the bisection method after iteration 6çäIF ( /*Premium guess too low*/ currPremium < targetPremium ; çä   /*Yes - try higher*/ (MAX(lowBound;currFaceAmountGuess) + highBound) * 0.5 ; çä   /*No - try lower*/ (lowBound + MIN(highBound;currFaceAmountGuess)) * 0.5çä)çä);-3)çä)
F1 2673fc8 26737f0 0 0 0 0 2
FaceSolve Bound FaceAmount Guess(lowBound; highBound; FaceAmount_guess)
Funktion
MAX(MIN(highBound;FaceAmount_guess);lowBound)
F1 69afbb97 26729f8 0 4267802e 0 0 2
FaceSolve CashValue Solves(calcType; yearIndex)
Funktion
E_('Solve Iterative Premium Solve Rec2 FaceSolve'('FaceSolve Cash Value Solve Initial Guess'(calcType;yearIndex);'FaceSolve CashValue Given FaceAmount'(calcType;'FaceSolve Cash Value Solve Initial Guess'(calcType;yearIndex);yearIndex) - 'FaceSolve Target CashValue'(calcType;'FaceSolve Cash Value Solve Initial Guess'(calcType;yearIndex));'FaceSolve Cash Value Solve Previous Guess'(calcType;yearIndex); //prevFaceAmountGuess; çä'FaceSolve CashValue Given FaceAmount'(calcType;'FaceSolve Cash Value Solve Previous Guess'(calcType;yearIndex);yearIndex) - 'FaceSolve Target CashValue'(calcType;'FaceSolve Cash Value Solve Previous Guess'(calcType;yearIndex)); //prevPremium; çä0; // lowBound; çä1000000000; //highBound; çä1; //iteration_num; çä'FaceSolve Vector Premium Search Criteria'(calcType;'FaceSolve Cash Value Solve Initial Guess'(calcType;yearIndex);yearIndex);'SharedVector SolveParms MakePremandFaceAmtandDBOptandStartYear'(calcType;'FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType);'FaceSolve Cash Value Solve Initial Guess'(calcType;yearIndex);'Policy Coverage DeathBenefitOptType'(calcType;0;1);1);yearIndex);0)
F1 4267802e 26729f8 0 56b3928b 0 0 2
FaceSolve Iterative FaceAmount Solve Rec(calcType; currFaceAmountGuess; currCashValue; prevFaceAmountGuess; prevCashValue; lowBound; highBound; iteration_num; vectorSearchCriteria; vectorSolveParms)
Funktion
IF ( /*Tolerance reached*/ (ABS(currCashValue - 'Solve Criteria Target Premium'(vectorSearchCriteria)) < 'Solve Criteria Premium Tolerance'(vectorSearchCriteria)) || (ABS(prevFaceAmountGuess - currFaceAmountGuess) < 'Solve Criteria CV Tolerance'(vectorSearchCriteria)) || (iteration_num >= 'Solve Criteria Requested Stop Duration'(vectorSearchCriteria)) ; çä   // Either the premium was successfully found, or the requested stop iteration (used for debugging purposes) was reachedçäv_(currFaceAmountGuess;currCashValue;prevFaceAmountGuess;prevCashValue;lowBound;highBound;iteration_num) ; çä   //  Else give up if we can't get a successful result after 100 iterationsçäIF ( /*Too many iterations?*/ iteration_num > 100 ; çä     /*return error message*/ 'Messages SystemMessage'("CA1044";'Message Language';'GEN Vector Blank') ; çä     // Else call this function recursively againçä'FaceSolve Iterative FaceAmount Solve Rec'(calcType; // New current face Aount guessçä'FaceSolve FaceAmount Guess'(calcType;currFaceAmountGuess;currCashValue;prevFaceAmountGuess;prevCashValue;'Solve Criteria Target Premium'(vectorSearchCriteria);'Solve Criteria CV Tolerance'(vectorSearchCriteria);lowBound;highBound;iteration_num); // Maturity Cash Valueçä'Solve CashValueSolve FaceAmountSolve'('FaceSolve FaceAmount Guess'(calcType;currFaceAmountGuess;currCashValue;prevFaceAmountGuess;prevCashValue;'Solve Criteria Target CV'(vectorSearchCriteria);'Solve Criteria Premium Tolerance'(vectorSearchCriteria);lowBound;highBound;iteration_num);'Solve CashValueSolve Constants Vector'(vectorSearchCriteria;vectorSolveParms)); // New previous Face amount guess   çäcurrFaceAmountGuess; // New previous premiumçäcurrCashValue; // lowBoundâçäIF ( /*Face amount guess too low*/ currCashValue < 'Solve Criteria Target Premium'(vectorSearchCriteria) ; çä       // Face Amount guess was too low, increase lower boundçäMAX(lowBound;currFaceAmountGuess) ; çä       // Else face amount guess was too high.  Keep lower bound the sameçälowBoundçä    ); // highBoundçäIF ( /*FaceAmount guess too high*/ currCashValue > 'Solve Criteria Target Premium'(vectorSearchCriteria) ; çä     // Face Amount guess was too high, lower high boundâçäMIN(highBound;currFaceAmountGuess) ; çä     // Else faceAmount guess was too low.  Keep high bound the sameçähighBoundçä  );iteration_num + 1;vectorSearchCriteria;'SharedVector SolveParms ReplaceFaceAmount'(calcType;'FaceSolve FaceAmount Guess'(calcType;currFaceAmountGuess;currCashValue;prevFaceAmountGuess;prevCashValue;'Solve Criteria Target Premium'(vectorSearchCriteria);'Solve Criteria CV Tolerance'(vectorSearchCriteria);lowBound;highBound;iteration_num);vectorSolveParms))çä)çä)
F1 56b3928b 26729f8 0 0 0 0 2
FaceSolve RateFile Solves(calcType)
Funktion
SOLVE( // solve methodçä'VPMS Solve Debug Switch'(0); //solve functionçäFUNCREF('TARGET Total Target Premium FaceSolve'); //funcref for derivertiveçä0; //targetçä'FaceSolve Premium from Input'(calcType); // negative tolerance for guess toleranceçä//initial guess guess only if using Newton Raphson.çä0; //'TaxCompliance initial Solve guess'(vectorSearchCriteria);çä//Guess toleranceçä-0.01; // negative tolerance is for guess or premium toleranceçä//lowboundçä1; //'TaxCompliance initial Solve guess'(vectorSearchCriteria) + 0.01*'TaxCompliance initial Solve guess'(vectorSearchCriteria);çä//highboundçä1000000000; //'TaxCompliance initial Solve guess'(vectorSearchCriteria) - 0.01*'TaxCompliance initial Solve guess'(vectorSearchCriteria);çä//Stop Iterationçä99; //vConstantsçäcalcType)
F1 26740b8 26aab78 4d6c6e7c 2675320 0 0 2
-- Face Amount initial guess --
Funktion

F1 4d6c6e7c 26740b8 7c72c558 763cbdaa 0 0 2
FaceSolve FaceAmountInitialGuess(vectorSolveParms; vectorSearchCriteria; yearIndex)
Funktion
'FaceSolve RoundNearestUnit'('CalcType SolveCriteria'(vectorSearchCriteria);IF ( /*target premium calculation?*/ 'CalcType Target Is Active'('CalcType SolveCriteria'(vectorSearchCriteria)) ; çä  CASE('Solve Target CalcMethod Used'(vectorSearchCriteria);çä    1 :  // Sum of chargesçä'Solve Target SumOfCharges Init Guess'(vectorSearchCriteria;'SharedVector SolveParms ReplaceFaceAmount'('CalcType SolveCriteria'(vectorSearchCriteria);1;vectorSolveParms));çä    2 :  // Ratefileçä'Solve Target RateFile Init Guess'(vectorSearchCriteria;'SharedVector SolveParms ReplaceFaceAmount'('CalcType SolveCriteria'(vectorSearchCriteria);'PI CoverageProduct ValuePerUnit'('CalcType SolveCriteria'(vectorSearchCriteria);'Policy ProductCode';0;'Policy EffDate');vectorSolveParms);yearIndex);çä     :  // Dynamicçä'Solve Initial Specified Amount Guess'(vectorSolveParms;vectorSearchCriteria))çä   ; çä   //No - normal guess methodçä//'Solve Initial Specified Amount Guess'(vectorSolveParms; vectorSearchCriteria)çä2500000çä))
F1 7c72c558 4d6c6e7c a60c5d0 4f91fbfe 0 0 2
FaceSolve Cash Value Solve Initial Guess(calcType; yearIndex)
Funktion
IF ('FaceSolve Starting Initial Guess CV'(calcType;yearIndex) > 'FaceSolve Starting Initial Guess'(calcType) ; çä  'FaceSolve Starting Initial Guess'(calcType) ; çä  'FaceSolve Minimum Initial Guess'(calcType)çä)
F1 a60c5d0 7c72c558 0 619a053c 0 0 2
FaceSolve Minimum Initial Guess(calcType)
Funktion
IF ('PI CoverageProduct MinFaceAmt'(calcType;'Policy ProductCode';'Std BaseCov Index'(calcType);TransEffDate) ALIKE 'GEN Vector Blank' ; çä  25000 ; çä  'PI CoverageProduct MinFaceAmt'(calcType;'Policy ProductCode';'Std BaseCov Index'(calcType);TransEffDate)çä)
F1 619a053c 7c72c558 0 141afe10 0 0 2
FaceSolve Maximum Initial Guess(calcType)
Funktion
IF ('PI CoverageProduct MaxFaceAmt'(calcType;'Policy ProductCode';'Std BaseCov Index'(calcType);TransEffDate) ALIKE 'GEN Vector Blank' ; çä  10000000 ; çä  'PI CoverageProduct MaxFaceAmt'(calcType;'Policy ProductCode';'Std BaseCov Index'(calcType);TransEffDate)çä)
F1 141afe10 7c72c558 0 183c0eb0 0 0 2
FaceSolve Starting Initial Guess(calcType)
Funktion
.25 * 'FaceSolve Maximum Initial Guess'(calcType)
F1 183c0eb0 7c72c558 0 0 0 0 2
FaceSolve Starting Initial Guess CV(calcType; yearIndex)
Funktion
'Solve CashValueSolve FaceAmountSolve'('FaceSolve Starting Initial Guess'(calcType);'Solve CashValueSolve Constants Vector'('FaceSolve Vector Premium Search Criteria'(calcType;'FaceSolve Starting Initial Guess'(calcType);yearIndex);'SharedVector SolveParms MakePremandFaceAmtandDBOptandStartYear'(calcType;'FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType);'FaceSolve Starting Initial Guess'(calcType);'Policy Coverage DeathBenefitOptType'(calcType;0;1);1)))
F1 4f91fbfe 4d6c6e7c 0 677e8fc8 0 0 2
FaceSolve Cash Value Solve Previous Guess(calcType; yearIndex)
Funktion
IF ('FaceSolve Starting Initial Guess'(calcType) = 'FaceSolve Cash Value Solve Initial Guess'(calcType;yearIndex) ; çä  'FaceSolve Maximum Initial Guess'(calcType) ; çä  'FaceSolve Starting Initial Guess'(calcType)çä)
F1 677e8fc8 4d6c6e7c 0 0 0 0 2
FaceSolve CashValue Given FaceAmount(calcType; faceAmount; yearIndex)
Funktion
'Solve CashValueSolve FaceAmountSolve'(faceAmount;'Solve CashValueSolve Constants Vector'('FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;yearIndex);'SharedVector SolveParms MakePremandFaceAmtandDBOptandStartYear'(calcType;'FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType);faceAmount;'Policy Coverage DeathBenefitOptType'(calcType;0;1);1)))
F1 763cbdaa 26740b8 0 796a906a 0 0 2
FaceSolve Vector SolveParms(targetPremium; premiumDuration)
Funktion
'SharedVector SolveParms MakePremium'(targetPremium;premiumDuration)
F1 796a906a 26740b8 0 5cb7d5ea 0 0 2
FaceSolve Vector Target Prem AddlInfo(calcType; faceAmount; yearIndex)
Funktion
V_(0;0;IF ('FaceSolve SolveType is CurrentCV'(calcType) || 'FaceSolve SolveType is ShadowAcct'(calcType) ; çä  1 ; çä  0çä);IF ('FaceSolve SolveType is CurrentCV'(calcType) || 'FaceSolve SolveType is ShadowAcct'(calcType) ; çäV_('TaxCompliance Guideline Level Premium FaceSolve'(calcType;faceAmount);'TaxCompliance Guideline Single Premium FaceSolve'(calcType;faceAmount)) ; çä0çä);0;'GEN Vector Blank';IF ('Std Calling System Is Illustration Based' ; çä /*Solve for Illustration?*/ v_('TARGET Total Target Premium FaceSolve'(faceAmount;'CalcType LTGT'(calcType))) ; çä /*else use target from INPUT*/ VECTORX(cov;0;'Policy Number Of Coverage'(calcType;TransEffDur) - 1;V_('Policy Coverage TargetPremAmt'(#cov);#cov + 1))çä);'Duration Year'(TransEffDate;'Policy EffDate');1)
F1 5cb7d5ea 26740b8 0 49339308 0 0 2
FaceSolve Vector Premium Search Criteria(calcType; faceAmount; yearIndex)
Funktion
'Vector SLV Premium Solve Search Criteria'('FaceSolve calcType'(calcType); // calculation typeçäIF ('FaceSolve FaceAmount Solve Type Endows'(calcType) ; çä  faceAmount ; çä   // target CVçä'Illus Face Amt Solve Target Cash Value'çä); //'Illus Face Amt Solve Premium';çä'FaceSolve TargetDuration'(calcType); // target durationçä'FaceSolve PremiumDuration'(calcType); // premium duration çä'FaceSolve Interest Rate'(calcType); // Interest rateçä1; // Cash value toleranceçä0.5; // premium toleranceçä999; // requested stop iterationçä'FaceSolve Vector Target Prem AddlInfo'(calcType;faceAmount;yearIndex) // vectorAddlInfo (only uses Target Premiums)çä)
F1 49339308 26740b8 6d04b011 0 0 0 2
FaceSolve Vector Search Criteria(calcType; yearIndex)
Funktion
'Vector SLV Premium Solve Search Criteria'('FaceSolve calcType'(calcType); // calculation typeçä'FaceSolve Premium from Input'(calcType); // target premiumçä'FaceSolve TargetDuration'(calcType); // target durationçä'FaceSolve PremiumDuration'(calcType); // premium duration çä'FaceSolve Interest Rate'(calcType); // Interest rateçä1; // FaceAmount toleranceçä0.001; // premium toleranceçä999; // requested stop iterationçä'FaceSolve TEST Vector Target Prem AddlInfo'(calcType;yearIndex) // vectorAddlInfo (only uses Target Premiums)çä)
F1 6d04b011 49339308 0 20af6f7 0 0 2
FaceSolve TEST Vector Target Prem AddlInfo(calcType; yearIndex)
Funktion
V_(0;0;0;0;0;'GEN Vector Blank';IF ('Std Calling System Is Illustration Based' ; çä   /*Solve for Illustration?*/ v_('TARGET Total Target Premium'('CalcType LTGT'(calcType);yearIndex)) ; çä   /*else use target from INPUT*/ VECTORX(cov;0;'Policy Number Of Coverage'(calcType;TransEffDur) - 1;V_('Policy Coverage TargetPremAmt'(#cov);#cov + 1))çä);'Duration Year'(TransEffDate;'Policy EffDate');1)
F1 20af6f7 49339308 0 0 0 0 2
FaceSolve Test Vector Search Criteria(calcType; stop_iteration; faceAmount; yearIndex)
Funktion
'Vector SLV Premium Solve Search Criteria'('FaceSolve calcType'(calcType); // calculation typeçä'FaceSolve Premium from Input'(calcType); // target premiumçä'FaceSolve TargetDuration'(calcType); // target durationçä'FaceSolve PremiumDuration'(calcType); // premium duration çä'FaceSolve Interest Rate'(calcType); // Interest rateçä0.5; // FaceAmount toleranceçä0.01; // premium toleranceçästop_iteration; // requested stop iterationçä'FaceSolve Vector Target Prem AddlInfo'(calcType;faceAmount;yearIndex) // vectorAddlInfo (only uses Target Premiums)çä)
F1 2675320 26aab78 40278f26 60f2000f 0 0 2
-- Test Initial Specified Amount Guess Functions --
Funktion
/* Test functions allow the initial guess functions to be calledçä   using UTV test files. The standard functions don't allow this due to çä   the vector parameters. çä   çä */
F1 40278f26 2675320 0 2daeddbb 0 0 2
Test Solve Initial Premium(calcType; faceAmount)
Funktion
'Solve Initial Premium Guess'('SharedVector SolveParms MakeFaceAmount'(calcType;faceAmount);'FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;TransEffDur)) // Initial premium guess çä
F1 2daeddbb 2675320 0 6d4ba468 0 0 2
Test FaceSolve Face Amount(calcType; stop_iteration)
Funktion
'FaceSolve Iterative FaceAmount Solve Rec'(calcType;'FaceSolve FaceAmountInitialGuess'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);TransEffDur);'FaceSolve Face Amount Premium'(calcType;'FaceSolve FaceAmountInitialGuess'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);TransEffDur);TransEffDur); // curr face amount guessçä0; //prevFaceAmountGuess; çä0; //prevPremium; çä0; // lowBound; çä1000000000; //highBound; çä1; //iteration_num; çä'FaceSolve Test Vector Search Criteria'(calcType;stop_iteration;'FaceSolve FaceAmountInitialGuess'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);TransEffDur);TransEffDur);'SharedVector SolveParms MakeFaceAmount'(calcType;'FaceSolve FaceAmountInitialGuess'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);TransEffDur)))
F1 6d4ba468 2675320 545d865d 56107ccc 0 0 2
FaceSolve Test Solve Initial Specified Amount Guess(calcType)
Funktion
'FaceSolve FaceAmountInitialGuess'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Search Criteria'(calcType;TransEffDur);TransEffDur)
F1 545d865d 6d4ba468 29ce82b7 372dab35 0 0 2
FaceSolve Test Solve Init Guess Annualize PV Charges Less PerUnit(calcType)
Funktion
'Solve Init Guess Annualize PV Charges Less PerUnit'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Search Criteria'(calcType;TransEffDur))
F1 29ce82b7 545d865d 38400256 0 0 0 2
FaceSolve Test Solve Init Guess Annualize PV Yearly Charge less PerUnit(calcType; yearIndex)
Funktion
'Solve Init Guess Annualize PV Yearly Charge less PerUnit'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);yearIndex)
F1 38400256 29ce82b7 2676238 0 0 0 2
FaceSolve Test Solve Init Guess Total Charges Less PerUnit(calcType; yearIndex)
Funktion
'Solve Init Guess Total Charges Less PerUnit'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);yearIndex)
F1 2676238 38400256 2676408 0 0 0 2
FaceSolve Test Solve Init Guess Monthly Expenses Less PerUnit(calcType; yearIndex)
Funktion
'Solve Init Guess Monthly Expenses Less PerUnit'('FaceSolve calcType'(calcType);yearIndex;'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))
F1 2676408 2676238 0 0 0 0 2
FaceSolve Test Solve Init Guess Monthly Expenses Less PerUnitCalc(calcType; fee_type; cashValue; yearIndex; monthIndex)
Funktion
'Solve Init Guess Monthly Expenses Less PerUnitCalc'(fee_type;'FaceSolve calcType'(calcType);cashValue;yearIndex;monthIndex;'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))
F1 372dab35 6d4ba468 edf50d6 7bec8e30 0 0 2
FaceSolve Test Solve Init Guess SpecAmt Discount(calcType)
Funktion
'Solve Init Guess SpecAmt Discount'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur))
F1 edf50d6 372dab35 20ee0864 0 0 0 2
FaceSolve Test Solve Init Guess PV SpecAmt Charges(calcType; yearIndex)
Funktion
'Solve Init Guess PV SpecAmt Charges'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);yearIndex)
F1 20ee0864 edf50d6 6737aaba 0 0 0 2
FaceSolve Test Solve Init Guess Total SpecAmt Charges(calcType; yearIndex)
Funktion
'Solve Init Guess Total SpecAmt Charges'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);yearIndex)
F1 6737aaba 20ee0864 79e07f4a 45253ec0 0 0 2
FaceSolve Test Solve Init Guess Monthly Expenses PerUnitOnly(calcType; yearIndex)
Funktion
'Solve Init Guess Monthly Expenses PerUnitOnly'('FaceSolve calcType'(calcType);yearIndex;'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur))
F1 79e07f4a 6737aaba 0 0 0 0 2
FaceSolve Test Solve Init Guess Monthly Expenses PerUnitOnly Calc(calcType; fee_type; cashValue; yearIndex; monthIndex)
Funktion
'Solve Init Guess Monthly Expenses PerUnitOnly Calc'(fee_type;'FaceSolve calcType'(calcType);cashValue;yearIndex;monthIndex;'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur))
F1 45253ec0 20ee0864 0 0 0 0 2
FaceSolve Test Solve Init Guess COI Charges Per Dollar(calcType; yearIndex)
Funktion
'Solve Init Guess COI Charges Per Dollar'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);yearIndex)
F1 7bec8e30 6d4ba468 0 184f279b 0 0 2
FaceSolve Test Solve Init Guess Target CV Amount(calcType)
Funktion
'Solve Init Guess Target CV Amount'('FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))
F1 184f279b 6d4ba468 0 7c043fbd 0 0 2
FaceSolve Test Solve Init Guess Annualize PV Yearly Charges(calcType)
Funktion
'Solve Init Guess Annualize PV Yearly Charges'('SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);TransEffDur)
F1 7c043fbd 6d4ba468 0 2d1f40b6 0 0 2
FaceSolve Test Solve Init Guess Annualize PV Payment Factor(calcType)
Funktion
'Solve Init Guess Annualize PV Payment Factor'('FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))
F1 2d1f40b6 6d4ba468 0 79f91b68 0 0 2
FaceSolve Test Solve Annualize Product R Factor(calcType)
Funktion
'Solve Annualize Product R Factor'('FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);'Solve Criteria Target Duration'('FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur));'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))
F1 79f91b68 6d4ba468 0 294c4d8e 0 0 2
FaceSolve Test Solve R Factor(calcType; yearIndex)
Funktion
'Solve R Factor'('FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur);yearIndex;'SharedVector SolveParms MakePremium'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))
F1 294c4d8e 6d4ba468 0 7dcf96b0 0 0 2
FaceSolve Test Solve Criteria Target CV(calcType)
Funktion
'Solve Criteria Target CV'('FaceSolve Vector Premium Search Criteria'(calcType;10000;TransEffDur))
F1 7dcf96b0 6d4ba468 0 0 0 0 2
FaceSolve Test Premium Solve FaceSolve(calcType; faceAmount)
Funktion
'ULDocs Premium Solve FaceSolve'(calcType;faceAmount;'FaceSolve Vector Premium Search Criteria'(calcType;faceAmount;TransEffDur))
F1 56107ccc 2675320 2effaea2 0 0 0 2
Test Solve Net Premium Factor(calcType)
Funktion
'Solve Net Premium Factor'('FaceSolve vector Search Criteria'(calcType;TransEffDur);TransEffDur;0)
F1 2effaea2 56107ccc 20f184f4 263b816a 0 0 2
Test Solve Base TargetPremium(calcType; yearIndex)
Funktion
CASE( /*Target calculation method*/ 'Solve Target CalcMethod Used'('FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Sum of Chargesçä1 : 'Solve SumOfCharges Base TargetPremium'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Rate Fileçä2 : 'Solve RateFile Base TargetPremiumSum'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Iterativeçä3 : 'Messages SystemMessage'("ILL1007";'Message Language';v_('Solve Model Name';"'Solve Target Premium Per Unit'";'CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex))));çä   // Present Value çä4 : 'Solve PresentValue Base TargetPremiumSum'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Else return error messageçä : 'Messages SystemMessage'("CA1009";'Message Language';v_('Solve Model Name';"'Solve Target Premium Per Unit'";'CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex)))))çä
F1 20f184f4 2effaea2 2fdc5499 19a996a2 0 0 2
Test Solve RateFile Base TargetPremiumSum(calcType; yearIndex)
Funktion
SUMX(yearIndex;'Solve Start Year'('FaceSolve vector Search Criteria'(calcType;yearIndex));'Solve Criteria Target Duration'('FaceSolve vector Search Criteria'(calcType;yearIndex));SUMX(coverageIndex;0;'Policy Number of Coverage'(calcType;#yearIndex) - 1;IF ( /*Base or Base Increase*/ ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#coverageIndex)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#coverageIndex))) ; çä   /*Yes*/ 'Solve RateFile TargetPremium'(#coverageIndex;#yearIndex;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex)) ; çä   /*No*/ 0çä)))
F1 2fdc5499 20f184f4 0 0 0 0 2
Test Solve RateFile TargetPremium(calcType; coverageIndex; yearIndex)
Funktion
'RateFile RateLookup Coverage Target'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));coverageIndex;yearIndex;1;'SharedVector SolveParms ReplaceFaceAmount'(calcType;1;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)))) * ('PLC Premium Load Primary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';coverageIndex;yearIndex) * 0.01 - 'PLC Premium Load Secondary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';coverageIndex;yearIndex) * 0.01)
F1 19a996a2 2effaea2 0 5330bcbe 0 0 2
Test Solve SumOfCharges Base TargetPremium(calcType; yearIndex)
Funktion
SUMX(yearIndex;'Solve Start Year'('FaceSolve vector Search Criteria'(calcType;yearIndex));'Solve Criteria Target Duration'('FaceSolve vector Search Criteria'(calcType;yearIndex));'Solve Init Guess PV SpecAmt Charges'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex);#yearIndex) * ('PLC Premium Load Primary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';0;#yearIndex) * 0.01 - 'PLC Premium Load Secondary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';0;#yearIndex) * 0.01))
F1 5330bcbe 2effaea2 25bcaa39 0 0 0 2
Test Solve PresentValue Base TargetPremiumSum(calcType; yearIndex)
Funktion
SUMX(yearIndex;'Solve Start Year'('FaceSolve vector Search Criteria'(calcType;yearIndex));'Solve Criteria Target Duration'('FaceSolve vector Search Criteria'(calcType;yearIndex));SUMX(coverageIndex;0;'Policy Number of Coverage'(calcType;#yearIndex) - 1;IF ( /*Base or Base Increase*/ ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#coverageIndex)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#coverageIndex))) ; çä   /*Yes*/ 'Solve PresentValue TargetPremium'(#coverageIndex;#yearIndex;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex)) ; çä   /*No*/ 0çä)))
F1 25bcaa39 5330bcbe 0 528c8823 0 0 2
-- Test Solve PresentValue TargetPremium(calcType; coverageIndex; yearIndex)
Funktion
'Target Coverage PV Method'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType)); coverageIndex;çäâ'SharedVector SolveParms ReplaceFaceAmount'(calcType; 1; 'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType); 'FaceSolve PremiumDuration'(calcType))))çä çä* ('PLC Premium Load Primary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType)); 'FeeType PremiumLoad'; coverageIndex; yearIndex) * 0.01çäââââ-çäââââ'PLC Premium Load Secondary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType)); 'FeeType PremiumLoad'; coverageIndex; yearIndex) * 0.01çäââââ)
F1 528c8823 5330bcbe 0 0 0 0 2
Test Solve PresentValue TargetPremium(calcType; coverageIndex; yearIndex)
Funktion
'Target Coverage PV Method'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));coverageIndex;'SharedVector SolveParms ReplaceFaceAmount'(calcType;1;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType)));yearIndex) * ('PLC Premium Load Primary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';coverageIndex;yearIndex) * 0.01 - 'PLC Premium Load Secondary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';coverageIndex;yearIndex) * 0.01)
F1 263b816a 56107ccc 21afa4c6 0 0 0 2
Test Solve Rider Target Premium(calcType;  yearIndex)
Funktion
CASE( /*Target calculation method*/ 'Solve Target CalcMethod Used'('FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Sum of Chargesçä1 : 'Solve SumOfCharges Rider TargetPremium'(calcType;yearIndex;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Rate Fileçä2 : 'Solve RateFile rider TargetPremiumSum'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Iterativeçä3 : 'Messages SystemMessage'("ILL1007";'Message Language';v_('Solve Model Name';"'Solve Target Premium Per Unit'";'CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex))));çä   // Present Value çä4 : 'Solve PresentValue Rider TargetPremiumSum'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex));çä   // Else return error messageçä : 'Messages SystemMessage'("CA1009";'Message Language';v_('Solve Model Name';"'Solve Target Premium Per Unit'";'CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex)))))çä
F1 21afa4c6 263b816a 0 498d9c26 0 0 2
Test Solve SumOfCharges Rider TargetPremium(calcType; coverageIndex; yearIndex)
Funktion
'Solve Init Guess Total Charges Less PerUnit'('FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex);yearIndex) * ('PLC Premium Load Primary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';coverageIndex;yearIndex) * 0.01 - 'PLC Premium Load Secondary Rate'('CalcType SolveCriteria'('FaceSolve vector Search Criteria'(calcType;yearIndex));'FeeType PremiumLoad';coverageIndex;yearIndex) * 0.01)
F1 498d9c26 263b816a 0 26854063 0 0 2
Test Solve PresentValue Rider TargetPremiumSum(calcType; yearIndex)
Funktion
SUMX(yearIndex;'Solve Start Year'('FaceSolve vector Search Criteria'(calcType;yearIndex));'Solve Criteria Target Duration'('FaceSolve vector Search Criteria'(calcType;yearIndex));SUMX(coverageIndex;0;'Policy Number of Coverage'(calcType;#yearIndex) - 1;IF ( /*Base or Base Increase*/ ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#coverageIndex)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#coverageIndex))) ; çä   /*Yes*/ 0 ; çä   /*No*/ 'Solve PresentValue TargetPremium'(#coverageIndex;#yearIndex;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex))çä)))
F1 26854063 263b816a 0 0 0 0 2
Test Solve RateFile Rider TargetPremiumSum(calcType; yearIndex)
Funktion
SUMX(yearIndex;'Solve Start Year'('FaceSolve vector Search Criteria'(calcType;yearIndex));'Solve Criteria Target Duration'('FaceSolve vector Search Criteria'(calcType;yearIndex));SUMX(coverageIndex;0;'Policy Number of Coverage'(calcType;#yearIndex) - 1;IF ( /*Base or Base Increase*/ ('IndicatorCode is Base'('Policy Coverage IndicatorCode'(calcType;#coverageIndex)) || 'IndicatorCode is BaseIncrease'('Policy Coverage IndicatorCode'(calcType;#coverageIndex))) ; çä   /*Yes*/ 0 ; çä   /*No*/ 'Solve RateFile TargetPremium'(#coverageIndex;#yearIndex;'FaceSolve Vector SolveParms'('FaceSolve Premium from Input'(calcType);'FaceSolve PremiumDuration'(calcType));'FaceSolve vector Search Criteria'(calcType;yearIndex))çä)))
F1 60f2000f 26aab78 2e03bdc 0 0 0 2
-- Face Solve Readability Functions --
Funktion

F1 2e03bdc 60f2000f 0 5f2a55c2 0 0 2
FaceSolve SolveType is 7702(calcType)
Funktion
'Illus Face Amt Solve DesignType'(calcType) = 1000500002 || 'Illus Face Amt Solve DesignType'(calcType) = 1000500003
F1 5f2a55c2 60f2000f 0 69ab8c88 0 0 2
FaceSolve SolveType is CurrentCV(calcType)
Funktion
'Illus Face Amt Solve DesignType'(calcType) = 1000500009 || 'Illus Face Amt Solve DesignType'(calcType) = 1000500010
F1 69ab8c88 60f2000f 0 0 0 0 2
FaceSolve SolveType is ShadowAcct(calcType)
Funktion
'Illus Face Amt Solve DesignType'(calcType) = 1000500008
A0 266e25c 0 0 0 0 0 0

T0 266e2cc 0 267be18 0 0 0 0

T1 267be18 266e2cc 0 267bee8 0 0 2
-- List Tables --
key
value1
T1 267bee8 266e2cc 0 0 0 0 2
--Rules --
key
value1
I0 266e33c 0 4aea9921 0 0 0 0

I0 4aea9921 266e33c 0 0 0 0 0
ULContractDocuments.pms
-
O0
E0
L0
B0
P3
2696050
267d4f0
27a5a60
F31
26aab78
421548da
26aabf0
26aae60
266fac8
266fc18
35795a6d
266fda0
266fe80
2670358
2670588
2670730
45f6f8f
26729f8
26737f0
2673fc8
69afbb97
4267802e
56b3928b
26740b8
4d6c6e7c
763cbdaa
796a906a
5cb7d5ea
49339308
2675320
40278f26
2daeddbb
6d4ba468
56107ccc
60f2000f
A0
T2
267be18
267bee8
!77
27a5a60 3 -1
Description : Returns face amount solved according to input design type and premium. çä çä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
27a5a60 4 -1
Description : Returns face amount solved according to input design type and premium. çä çäModification Log:çä07/10/2013 PA1401-26 KC added TransEffDur parmçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
421548da -2 -2
Description : Performs face amount solve, and returns the face valueçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä11/01/2012 wmA-J 1301 Release 2 Sprint 6 CMC moved target calc method function to access model.çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/09/2011 pA Regression CMC Expanded for addtional target methods.çä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is used çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
4b5ba841 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructure
26aabf0 -2 -2
Description : Duration for which premium is paidçä çäModification logçä10/12/2012 pA1301 PAD-820 CMC Added yearIndex Parm reference to TaxCompliance Policy Premium Durationçä02/09/2011 pA Regression CMC Updated GLP premium duration.çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä11/23/2009 nbA Integration modified to use the new no lapse provision checking.çä03/31/2008 Phase II CSC Initial Calculation/Ruleçä
26aae60 -2 -2
Description : Duration at which cash value is targeted to provide goal for face solve. çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
266fac8 -2 -2
Description : Target duration for shadow account face solvesçä çäModification logçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
266fc18 -2 -2
Description : Target duration for MNLP face solvesçä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä11/23/2009 nbA Integration modified to use the new no lapse provision checking.çä03/31/2008 Phase II CSC Initial Calculation/Rule
35795a6d -2 -2
Description:âSets the target cash value to the input target or the solve face amount depending on the solve type.çä çäModification Log:çä02/09/2011 pA Regression CMC Added Function
266fda0 -2 -2
Description : Obtains premium from input attributeçä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
266fe80 -2 -2
Description : Calculation type - for using correct basis in calculations in lower modelsçä çäModification logçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä11/23/2009 nbA Integration modified to use the new no lapse provision checking.çä03/31/2008 Phase II CSC Initial Calculation/Ruleçä
2670358 -2 -2
Description : Interest rate to be used in calculationçä çäModification logçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
2670588 -2 -2
Description : Returns 1 if face amount is returned as an endowment benefit, 0 if not. çä çäModification logçä02/09/2011 pA Regression CMC Moved the Target CV and Target Duration to non endow indicatorçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
2670730 -2 -2
Description : Rounds face amount to the nearest unitçä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
45f6f8f -2 -2
Description : Provides a link to the separate premium calculation functions. Each premium function uses face amount as a parameter to enable the models to calculate premium from the parm face amount instead of an attribute. çä çäModification Log:çä07/16/2014 - rm - Performance - Replaced functions that just call another function with same parameters.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
2671068 -2 -2
Description : Guideline single premiumçä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
2671158 -2 -2
Description : Guideline level premiumçä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
2671378 -2 -2
Description : 7-pay premiumçä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
360d943 -2 -2
Description : Minimum annual premiumçä çäModification logçä11/8/2013 pA1401-26 CMC removed yearIndex from Tartget Total Target Prmeium Facesolve due to limitations on çäâââââââonly a single parm being used in the sovle function.  YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/31/2011 - PAC013 calcType CMC reversed parms due to Solve function usage.çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
74bf58d3 -2 -2
Description : Shadow account minimum premiumçä çäModification logçä11/8/2013 pA1401-26 CMC removed yearIndex from Tartget Total Target Prmeium Facesolve due to limitations on çäâââââââonly a single parm being used in the sovle function.  YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/31/2011 - PAC013 calcType CMC reversed parms due to Solve function usage.çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
1048b253 -2 -2
Description : Commission target premiumçä çäModification logçä11/8/2013 pA1401-26 CMC removed yearIndex from Tartget Total Target Prmeium Facesolve due to limitations on çäâââââââonly a single parm being used in the sovle function.  YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/31/2011 - PAC013 calcType CMC reversed parms due to Solve function usage.çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
5ae2f12a -2 -2
Description : Recommended shadow account premiumçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
542fcc7c -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructure
6e8d49fb -2 -2
Description : premium such that the policy endows at the given face amount at maturityçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
6d9fd9ac -2 -2
Description : premium such that the policy has a cash value equal to the input target at a specified durationçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
26727e0 -2 -2
Description : Premium so that the policy endows given a mix of base and term face amountçä çäModification logçä03/31/2008 Phase II CSC Initial Calculation/Rule
26737f0 -2 -2
Description:  Returns a face amount guess based on either the secant method or bisection method (depending upon the iteration number).çä çäModification logçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
2673fc8 -2 -2
Description:  Make sure the face amount guess is within the upper and lower bounds.çä çäModification logçä03/31/2008 Phase II CSC Initial Calculation/Rule
69afbb97 -2 -2
Description:  Face Solve when cash value is the key solve elementçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/09/2011 pA Regression CMC Updated to use the Face Guess or target cash value in netting the cash value.çä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solves
4267802e -2 -2
Description:  Performs an iterative search to solve for the face amount necessary to provide a cash value equal to the target cash value at the target duration.çä çäModification logçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
56b3928b -2 -2
Description:  solve function for solves based on rate per unitçä çäModification log:çä02/10/2011 - pA Regression CMC update for minimum bound to a dollarçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solves
4d6c6e7c -2 -2
Description : Initial guess for face amount. çä çäModification logçä07/10/2013 PA1401-26 KC added yearIndex parmçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - remove calcType parm since can use vectorSearchCriteria to get calcType fromçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
7c72c558 -2 -2
Description:  Initial Guess for cash value face solvesçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solves
a60c5d0 -2 -2
Description:  Minimum Initial guess amount for a face solveçä çäModification Log:çä11/01/2011 pA Regression change to coverage product from underwriting class product
619a053c -2 -2
Description:  Maximum Initial guess amount for a face solveçä çäModification Log:çä11/01/2011 pA Regression change to coverage product from underwriting class product
183c0eb0 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä
4f91fbfe -2 -2
Description:  previous Guess for cash value face solvesçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solves
677e8fc8 -2 -2
Description:  Cash Value for a given face amount.çä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solves
763cbdaa -2 -2
02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solves
796a906a -2 -2
Description : Returns an AddlInfo vector which includes only the target premium informationçä çäModification logçä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.sçä07/10/2013 PA1401-26 KC added yearIndex parmçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/31/2011 - PAC013 calcType CMC reversed parms due to Solve function usage.çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä11/25/2008 CSC Updated to use target function when call for Ilustrationçä10/31/2007 CSC Initial Calculation/Ruleçä çä
5cb7d5ea -2 -2
Description : returns a vector of search criteria for the iteration functions. This is used for the premium search within each face amount search iteration, and so uses target CV, not target premium, as the second element in the vectorçä çäModification logçä07/10/2013 PA1401-26 KC added yearIndex parmçä11/10/2011 pA PAD816 CMC increased cash value tolerance.çä02/09/2011 pA Regression CMC Updated to use the Face Guess or target cash value as the solve targetçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
49339308 -2 -2
Description : returns a vector of search criteria for the iteration functionsçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä03/31/2008 Phase II CSC Initial Calculation/Rule
6d04b011 -2 -2
Description : Returns an AddlInfo vector which includes only the target premium informationçä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/31/2011 - PAC013 calcType CMC reversed parms due to Solve function usage.çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä11/25/2008 CSC Updated to use target function when call for Ilustrationçä10/31/2007 CSC Initial Calculation/Ruleçä çä
20af6f7 -2 -2
Description : Test :  returns a vector of search criteria for the iteration functions, using a parm for the stop-iteration, so that for testing purposes, çä çäModification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä10/31/2007 CSC Initial Calculation/Rule
40278f26 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
2daeddbb -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
6d4ba468 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
545d865d -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
29ce82b7 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
38400256 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
2676238 -2 -2
çä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
2676408 -2 -2
çä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
372dab35 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
edf50d6 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
20ee0864 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
6737aaba -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
79e07f4a -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
45253ec0 -2 -2
Description:  Returns the coi charge for yearIndex.çä çäModification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parmçä12/05/2007 SPR   GLP001 pA Phase 2 Changed the divisor to be for all death benefit options.çä10/31/2007 CSC Initial Calculation/Ruleçä çä
7bec8e30 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
184f279b -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
7c043fbd -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
2d1f40b6 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
79f91b68 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
294c4d8e -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
7dcf96b0 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
56107ccc -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
2effaea2 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä02/01/2011 - PAC013 calcType - BT - Restructureçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
20f184f4 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
2fdc5499 -2 -2
Modification Log:çä11/8/2013 pA1401-26 CMC removed yearIndex. YearIndex replaced with TransEffDur at lower level.çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/20/2011 wmA-J CMC Premium Load Charges enhancement for Premium Taxes (added feeType parm to higher level functions)çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/01/2011 - PAC013 calcType - BT - Restructureçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - remove calcType parm since can use vectorSearchCriteria to get calcType fromçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
19a996a2 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/20/2011 wmA-J CMC Premium Load Charges enhancement for Premium Taxes (added feeType parm to higher level functions)çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/07/2011 - pA Regression CMC updates for Face Solves and corridor usage in solvesçä09/16/2010 - PAC013 calcType - BT - remove calcType parm since can use vectorSearchCriteria to get calcType fromçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
5330bcbe -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
25bcaa39 -2 -2
çä05/20/2011 wmA-J CMC Premium Load Charges enhancement for Premium Taxes (added feeType parm to higher level functions)çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/01/2011 - PAC013 calcType - BT - Restructureçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - remove calcType parm since can use vectorSearchCriteria to get calcType fromçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
528c8823 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/20/2011 wmA-J CMC Premium Load Charges enhancement for Premium Taxes (added feeType parm to higher level functions)çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/01/2011 - PAC013 calcType - BT - Restructureçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - remove calcType parm since can use vectorSearchCriteria to get calcType fromçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
263b816a -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/01/2011 - PAC013 calcType - BT - Restructureçä01/26/2011 - PAC013 CMC removed extra coverage and coverage option indexçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - remove calcType parm since can use vectorSearchCriteria to get calcType fromçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
21afa4c6 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä05/20/2011 wmA-J CMC Premium Load Charges enhancement for Premium Taxes (added feeType parm to higher level functions)çä05/12/2011 - PAC013 calcType - BT - Moved calcType functions into CalcType modelçä02/01/2011 - PAC013 calcType - BT - Restructureçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
498d9c26 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
26854063 -2 -2
Modification Log:çä07/10/2013 PA1401-26 KC added yearIndex parmçä01/12/2011 - PAC013 calcType - BT - Restructureçä09/16/2010 - PAC013 calcType - BT - Remove calcType where SearchCriteria is usedçä07/02/2010 - PAC013 calcType - BT - Initially adding calcType parm
;Offset=00000000
