;1	08.12.2016 13:25:54	jlawrie2	
X0 501de6e0 0 56d79f56 0 0 0 0

X4 56d79f56 501de6e0 0 0 0 0 2
Vector ModePremium DisabilityIncome ROP(calcType; yearIndex)
Vector ModePremium DisabilityIncome ROP("C"; 1)
1
INPUT Calling Program
VPMSTEST
INPUT Calling System
I1
Input TransEffDate
01/01/2006
O0 60d6841b 0 0 0 0 0 0

E0 227cb130 0 0 0 0 0 0

L0 32f7f760 0 0 0 0 0 0

B0 3879bc7b 0 0 0 0 0 0

P1 1d6db522 0 19142049 0 0 0 2

--description
The Disability Contract Documents model calculates the values necessary to produce contract summaries and contract data pages. This will include premiums,  account values, and determination of projected lapses.çä çäCalculates Disability Benefits, Cost Indices, Guaranteed Premium Solve, . Guaranteed basis are included. çä çäRELEASE LOG:çäRELEASE 1101 - PAC022 
P13 19142049 1d6db522 38d6e8d 0 0 0 2
Disability Income Product
IncType
mandatory
IncRule

IncValue

OUTPUT Comment
"Contract Documents for DI"
OUTPUT Runtime Version
"1.0.00"
OUTPUT Runtime Date
"12/12/2016"
OUTPUT Source Version Computer
"VPMS_SERVER"
OUTPUT Source Version File
"DisabilityContractDocs.pms"
OUTPUT Source Version Number
'GEN VersionInfo'
OUTPUT Source Version Date
"12/12/2016"
OUTPUT Source Version Author
"CSC"
OUTPUT Source Version Comment
"PA1603 Delivery"
OUTPUT Audit History Block
"12/12/2016 PA1603 Delivery"
P3 38d6e8d 19142049 310fabfa 0 0 0 2
Contract Documents
IncType
mandatory
IncRule

IncValue

P12 310fabfa 38d6e8d 0 0 0 0 2
Policy Properties
IncType
mandatory
IncRule

IncValue

OUTPUT Policy Mode Premium(rateAssumption)
'GEN Round'('DIDocs Mode Premium'('CalcType Initial Vector'(rateAssumption));'ACCS CalcRule Act Function premium rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUTPUT Policy Total Annual Premium(rateAssumption)
'GEN Round'('DIDocs Mode Premium'('CalcType Initial Vector'(rateAssumption)) * 'Number Of Payments Per Year'('Policy DisabilityHealth ContribMode'('CalcType Initial Vector'(rateAssumption)));'ACCS CalcRule Act Function premium rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUPTUT Coverage PremiumPerUnit(rateAssumption; coverageIndex)
'GEN Round'('DIDocs Coverage PremiumPerUnit'('CalcType Initial Vector'(rateAssumption);coverageIndex);'ACCS CalcRule Act Function premium rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUPTUT CovOption PremiumPerUnit(rateAssumption; coverageIndex; coverageOptionIndex)
'GEN Round'('DIDocs CovOption PremiumPerUnit'('CalcType Initial Vector'(rateAssumption);coverageIndex;coverageOptionIndex);'ACCS CalcRule Act Function premium rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUPUT Policy BenefitAmt(rateAssumption)
'GEN Round'('DIDocs Policy BenefitAmt Due'('CalcType Initial Vector'(rateAssumption);'Policy DisabilityHealth Participant ParticipantStatus'('CalcType Initial Vector'(rateAssumption);'Std BaseCov Index'('CalcType Initial Vector'(rateAssumption)));'DIDocs AccorSick'('Policy DisabilityHealth Participant ParticipantStatus DisabledStatus'('CalcType Initial Vector'(rateAssumption);'Std BaseCov Index'('CalcType Initial Vector'(rateAssumption)))));'ACCS CalcRule Act Function cashvalue rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUTPUT Policy BenefitAmtAcc(rateAssumption)
'GEN Round'('DIDocs Policy BenefitAmt Due'('CalcType Initial Vector'(rateAssumption);'Constant ParticipantStatus DISABLED';'DIDocs AccorSick'('Constant DisabledStatus ACCIDENT'));'ACCS CalcRule Act Function cashvalue rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUTPUT Policy BenefitAmtSick(rateAssumption)
'GEN Round'('DIDocs Policy BenefitAmt Due'('CalcType Initial Vector'(rateAssumption);'Constant ParticipantStatus DISABLED';'DIDocs AccorSick'('Constant DisabledStatus SICK'));'ACCS CalcRule Act Function cashvalue rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUTPUT Policy BenefitAmtPartialRecovery(rateAssumption)
'GEN Round'('DIDocs Policy BenefitAmt Due'('CalcType Initial Vector'(rateAssumption);'Constant ParticipantStatus PARTIALRECOVERED';'DIDocs AccorSick'('Constant DisabledStatus ACCIDENT'));'ACCS CalcRule Act Function cashvalue rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
OUTPUT Policy BenefitAmtDeath(rateAssumption)
'GEN Round'('DIDocs Policy BenefitAmt Due'('CalcType Initial Vector'(rateAssumption);'Constant ParticipantStatus DECEASED';'DIDocs AccorSick'('Constant DisabledStatus ACCIDENT'));'ACCS CalcRule Act Function cashvalue rounding'('Policy CarrierCode';'Policy ProductCode';TransEffDate))
F0 3192fffa 0 4a60b8d4 0 0 0 0

F1 4a60b8d4 3192fffa 6e180ea 680636ba 0 0 2
-- Premiums --
Funktion

F1 6e180ea 4a60b8d4 8f39bb0 4553b228 0 0 2
DIDocs Mode Premium(calcType)
Funktion
IF (NOT('DIDocs WP in Effect'(calcType)) ; çä  'ModePremium Mode Premium'(calcType;'Vector ModePremium Create Parms Vector for DisabilityIncome'(calcType;TransEffDur)) ; çä  0çä)
F1 8f39bb0 6e180ea 0 780ce4d 0 0 2
Vector ModePremium Create Parms Vector for DisabilityIncome(calcType; yearIndex)
Funktion
v_('Policy DisabilityHealth ContribMode'(calcType);0; //'INPUT Forced Payment Mode';çä0; //'INPUT Mode Premium Calc Option' - 0 for Entire Policyçä0; //'INPUT Commission Premium Calc Ind' - No Commissions for Phase 1çä'GEN Vector Blank'; //1; //'INPUT Specified Phase';çä'GEN Vector Blank'; //'INPUT Specified Element'; //- 'CalcType Current'(calcType) for Coverage, "R" for Rider (see TABLE MP calc element)çä'GEN Vector Blank'; //0; //'INPUT Specified Element Index' - for Flats which are out of scope for phase 1çä'INPUT TransEffDate';"P"; //'INPUT Premium Type' - will always be "P"çä"R"; //'INPUT Premium Subtype' -   R = Regular,  W = Waiver, A = Additional, B = Reinstatementçä0; //'INPUT Rate Info Passed Ind'; 1- Yes, 0 - Noçä'INPUT Calling System';'Policy PaymentForm'; //'INPUT Payment Form' - 0 is Unknown, 1 is Cash, 2 is Credit Card, 7 is EFT, çäyearIndex;yearIndex;calcType; // C for Current and G for Guaranteedçä'Policy DisabilityHealth BenefitAmt'(calcType;0) / 'DIDocs Constant ValuePerUnit')
F1 780ce4d 6e180ea fc21f5b 0 0 0 2
DIDocs WP in Effect(calcType)
Funktion
'DIDocs Coverage WP exists'(calcType;'Std BaseCov Index'(calcType)) && 'ParticipantStatus is Disabled'('Policy DisabilityHealth Participant ParticipantStatus'(calcType;'Std BaseCov Index'(calcType)))
F1 fc21f5b 780ce4d 2941f625 0 0 0 2
DIDocs Coverage WP exists(calcType; coverageIndex)
Funktion
'DIDocs Coverage WP exists Rec'(calcType;coverageIndex;0)
F1 2941f625 fc21f5b 0 0 0 0 2
DIDocs Coverage WP exists Rec(calcType; coverageIndex; coverageOptionIndex)
Funktion
IF (coverageOptionIndex = 'Policy Number of CovOption'(calcType;coverageIndex) ; çä  0 ; çä  IF ('RiderType is WP'('Policy DisabilityHealth Rider RiderTypeCode'(calcType;coverageIndex;coverageOptionIndex)) ; çä    1 ; çä    'DIDocs Coverage WP exists Rec'(calcType;coverageIndex;coverageOptionIndex + 1)çä  )çä)
F1 4553b228 4a60b8d4 0 21f75cd8 0 0 2
DIDocs Coverage PremiumPerUnit(calcType; coverageIndex)
Funktion
'ModePremium Coverage PremiumPerUnit'(calcType;coverageIndex;'Vector ModePremium Create Parms Vector for DisabilityIncome'(calcType;TransEffDur))
F1 21f75cd8 4a60b8d4 0 6288398 0 0 2
DIDocs CovOption PremiumPerUnit(calcType; coverageIndex; coverageOptionIndex)
Funktion
'ModePremium CovOption PremiumPerUnit'(calcType;coverageIndex;coverageOptionIndex;'Vector ModePremium Create Parms Vector for DisabilityIncome'(calcType;TransEffDur))
F1 6288398 4a60b8d4 2f27e486 0 0 0 2
DIDocs Accumulated ROP Eligible Premium(calcType)
Funktion
SUMX(yr;1;TransEffDur - 1;'DIDocs Mode Premium'(calcType))
F1 2f27e486 6288398 0 0 0 0 2
Vector ModePremium DisabilityIncome ROP(calcType; yearIndex)
Funktion
v_(1; // Force mode to 1çä0; //'INPUT Forced Payment Mode';çä"R"; //ROPçä0; //'INPUT Commission Premium Calc Ind' - No Commissions for Phase 1çä'GEN Vector Blank'; //1; //'INPUT Specified Phase';çä'GEN Vector Blank'; //'INPUT Specified Element'; //- 'CalcType Current'(calcType) for Coverage, "R" for Rider (see TABLE MP calc element)çä'GEN Vector Blank'; //0; //'INPUT Specified Element Index' - for Flats which are out of scope for phase 1çä'Increase Date By Years'('Policy EffDate';yearIndex - 1);"P"; //'INPUT Premium Type' - will always be "P"çä"R"; //'INPUT Premium Subtype' -   R = Regular,  W = Waiver, A = Additional, B = Reinstatementçä0; //'INPUT Rate Info Passed Ind'; 1- Yes, 0 - Noçä'INPUT Calling System';0; //'INPUT Payment Form' - 0 is Unknown, 1 is Cash, 2 is Credit Card, 7 is EFT, çäyearIndex;yearIndex;calcType; // C for Current and G for Guaranteedçä0)
F1 680636ba 3192fffa 659751fb 36f1bf00 0 0 2
-- Elimination Period --
Funktion

F1 659751fb 680636ba 706f1034 76e39ff8 0 0 2
DIDocs Coverage ElimPeriod Passed(calcType; coverageIndex; AccOrSick)
Funktion
'DATE Is Date1 Greater Than Date2'(TransEffDate;'Increase Date By Days'('Policy Coverage EffDate'(calctype;coverageIndex);'DIDocs Coverage ElimPeriod'(calcType;coverageIndex;AccOrSick)))
F1 706f1034 659751fb 0 0 0 0 2
DIDocs Coverage ElimPeriod(calcType; coverageIndex; AccOrSick)
Funktion
'DIDocs ElimPeriod'(CASE(AccOrSick;çä  "ACC" : 'Policy DisabilityHealth ElimPeriodAcc'(calcType;coverageIndex);çä  "SICK" : 'Policy DisabilityHealth ElimPeriodSick'(calcType;coverageIndex);çä   : 0)çä)
F1 76e39ff8 680636ba 0 0 0 0 2
DIDocs ElimPeriod(elimPeriod)
Funktion
CASE(elimPeriod;çä  1 : 0;çä  2 : 365;çä  4 : 30;çä  6 : 180;çä  7 : 60;çä  9 : 90;çä   : 0)çä
F1 36f1bf00 3192fffa a195c44 c8e7c 0 0 2
-- Benefit Period --
Funktion

F1 a195c44 36f1bf00 36e34548 64b6ca63 0 0 2
DIDocs Coverage BenefitPeriod Passed(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
IF ('ParticipantStatus is Active'('Policy DisabilityHealth Participant ParticipantStatus'(calcType;coverageIndex)) ; çä  0 ; çä  'DATE Is Date1 Greater Than Date2'(TransEffDate;IF ('ParticipantStatus is PartialRecovered'('Policy DisabilityHealth Participant ParticipantStatus'(calcType;coverageIndex)) ; çä    'Increase Date By Months'('Policy DisabilityHealth Participant ParticipantStatus EffDate'(calcType;coverageIndex);6) ; çä    'Increase Date By Years'('Policy DisabilityHealth Participant ParticipantStatus EffDate'(calcType;coverageIndex);'DIDocs Coverage BenefitPeriod'(calcType;coverageIndex;participantStatus;AccOrSick))çä  ))çä)
F1 36e34548 a195c44 0 0 0 0 2
DIDocs Coverage BenefitPeriod(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
IF ('ParticipantStatus is Disabled'(participantStatus) || 'ParticipantStatus is PartialRecovered'(participantStatus) ; çä  'DIDocs BenefitPeriod'(calcType;CASE(TOUPPER(AccOrSick);çä    "ACC" : 'Policy DisabilityHealth BenefitPeriodAcc'(calcType;coverageIndex);çä    "SICK" : 'Policy DisabilityHealth BenefitPeriodSick'(calcType;coverageIndex);çä     : 0)çä  ;coverageIndex) ; çä  0çä)
F1 64b6ca63 36f1bf00 0 0 0 0 2
DIDocs BenefitPeriod(calcType; benefitPeriod; coverageIndex)
Funktion
CASE(benefitPeriod;çä  6 : 1;çä  7 : 2;çä  10 : 5;çä  17 : 67 - 'Policy DisabilityHealth Participant IssueAge'(calcType;coverageIndex) + 1;çä   //Coverage to age 67çä48 : 10;çä   : 0)çä
F1 c8e7c 3192fffa 6a109db9 3099f17b 0 0 2
-- Benefit Receivable --
Funktion

F1 6a109db9 c8e7c 7cfaef5f 53aad56c 0 0 2
DIDocs Policy BenefitAmt Due(calcType;  participantStatus; AccOrSick)
Funktion
SUMX(cov;0;'Policy Number Of Coverage'(calcType;TransEffDur) - 1;'DIDocs Coverage BenefitAmt Due'(calcType;#cov;participantStatus;AccOrSick)) + 'DIDocs ROP Benefit'(calcType;participantStatus;AccOrSick)
F1 7cfaef5f 6a109db9 0 0 0 0 2
DIDocs Coverage BenefitAmt Due(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
IF ('DIDocs Coverage BenefitInd'(calcType;coverageIndex;participantStatus; //'Policy DisabilityHealth Participant ParticipantStatus'(calcType; coverageIndex);çäAccOrSick //'DIDocs AccorSick'('Policy DisabilityHealth Participant ParticipantStatus DisabledStatus'(calcType; coverageIndex))çä) ; çä  'DIDocs Coverage BenefitAmt'(calcType;coverageIndex;participantStatus //'Policy DisabilityHealth Participant ParticipantStatus'(calcType; coverageIndex)çä) ; çä  0çä)
F1 53aad56c c8e7c 2f087e07 0 0 0 2
DIDocs ROP Benefit(calcType;  participantStatus; AccOrSick)
Funktion
IF ('DIDocs ROP Benefit Due'(calcType) ; çä  MAX(0;'DIDocs Accumulated ROP Eligible Premium'(calcType) - SUMX(cov;0;'Policy Number Of Coverage'(calcType;TransEffDur) - 1;'Policy DisabilityHealth BenefitAmt ReceivedLifetime'(calcType;#cov))) ; çä  0çä)
F1 2f087e07 53aad56c 0 62e520b7 0 0 2
DIDocs ROP Benefit Due(calcType)
Funktion
'DIDocs Coverage ROP exists'(calcType;'Std BaseCov Index'(calcType)) && 'Yearly Duration Month'(TransEffDate;'Policy EffDate') = 1 && TransEffDur = 'PI DisabilityHealthProduct RiderProduct MaturityDuration'(calcType;'Policy Coverage ProductCode'(calcType;'Std BaseCov Index'(calcType));'Std BaseCov Index'(calcType);'DIDocs Coverage ROP CovOpt'(calcType;'Std BaseCov Index'(calcType));TransEffDate) + 1
F1 62e520b7 53aad56c 12698d3c 6ec6cd32 0 0 2
DIDocs Coverage ROP exists(calcType; coverageIndex)
Funktion
'DIDocs Coverage ROP exists Rec'(calcType;coverageIndex;0)
F1 12698d3c 62e520b7 0 0 0 0 2
DIDocs Coverage ROP exists Rec(calcType; coverageIndex; coverageOptionIndex)
Funktion
IF (coverageOptionIndex = 'Policy Number of CovOption'(calcType;coverageIndex) ; çä  0 ; çä  IF ('RiderType is ROP'('Policy DisabilityHealth Rider RiderTypeCode'(calcType;coverageIndex;coverageOptionIndex)) ; çä    1 ; çä    'DIDocs Coverage ROP exists Rec'(calcType;coverageIndex;coverageOptionIndex + 1)çä  )çä)
F1 6ec6cd32 53aad56c 6347952c 0 0 0 2
DIDocs Coverage ROP CovOpt(calcType; coverageIndex)
Funktion
'DIDocs Coverage ROP CovOpt Rec'(calcType;coverageIndex;0)
F1 6347952c 6ec6cd32 0 0 0 0 2
DIDocs Coverage ROP CovOpt Rec(calcType; coverageIndex; coverageOptionIndex)
Funktion
IF (coverageOptionIndex = 'Policy Number of CovOption'(calcType;coverageIndex) ; çä  -1 ; çä  IF ('RiderType is ROP'('Policy DisabilityHealth Rider RiderTypeCode'(calcType;coverageIndex;coverageOptionIndex)) ; çä    coverageOptionIndex ; çä    'DIDocs Coverage ROP exists Rec'(calcType;coverageIndex;coverageOptionIndex + 1)çä  )çä)
F1 3099f17b 3192fffa 14cceb6f 2c987902 0 0 2
-- Benefit Amounts --
Funktion

F1 14cceb6f 3099f17b 314e0d95 0 0 0 2
DIDocs Coverage BenefitAmt(calcType; coverageIndex; participantStatus)
Funktion
CASE(participantStatus;çä  4 : 'DIDocs Coverage BenefitAmt Curr'(calcType;coverageIndex);çä  1000500001 : 'DIDocs Coverage BenefitAmt PartialRecovery'(calcType;coverageIndex);çä  3 : 'DIDocs Coverage BenefitAmt DeathBenefit'(calcType;coverageIndex);çä   : 0)çä
F1 314e0d95 14cceb6f 0 65698ff2 0 0 2
DIDocs Coverage BenefitAmt Curr(calcType; coverageIndex)
Funktion
'DIBen Coverage BenefitAmt SumInsured'(calcType;'Constant ParticipantStatus DISABLED';coverageIndex)
F1 65698ff2 14cceb6f 0 534653e5 0 0 2
DIDocs Coverage BenefitAmt PartialRecovery(calcType; coverageIndex)
Funktion
'DIBen Coverage BenefitAmt SumInsured'(calcType;'Constant ParticipantStatus PARTIALRECOVERED';coverageIndex)
F1 534653e5 14cceb6f 0 0 0 0 2
DIDocs Coverage BenefitAmt DeathBenefit(calcType; coverageIndex)
Funktion
'DIBen Coverage BenefitAmt SumInsured'(calcType;'Constant ParticipantStatus DECEASED';coverageIndex)
F1 2c987902 3192fffa 3efb95e0 77287891 0 0 2
-- Benefit Indicator --
Funktion

F1 3efb95e0 2c987902 2ae46255 0 0 0 2
DIDocs Coverage BenefitInd(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
CASE(participantStatus;çä  4 : 'DIDocs Coverage BenefitInd Curr'(calcType;coverageIndex;participantStatus;AccOrSick);çä  1000500001 : 'DIDocs Coverage BenefitInd PartialRecovery'(calcType;coverageIndex;participantStatus;AccOrSick);çä  3 : 'DIDocs Coverage BenefitInd DeathBenefit'(calcType;coverageIndex;participantStatus;AccOrSick);çä   : 0)çä
F1 2ae46255 3efb95e0 0 4bb14035 0 0 2
DIDocs Coverage BenefitInd Curr(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
'DIDocs Coverage ElimPeriod Passed'(calcType;coverageIndex;AccOrSick) && ('ParticipantStatus is Active'(participantStatus) || 'ParticipantStatus is Disabled'(participantStatus) || 'ParticipantStatus is PartialRecovered'(participantStatus)) && NOT('DIDocs Coverage BenefitPeriod Passed'(calcType;coverageIndex;'Constant ParticipantStatus DISABLED';AccOrSick))
F1 4bb14035 3efb95e0 0 4e31ea77 0 0 2
DIDocs Coverage BenefitInd PartialRecovery(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
'DIDocs Coverage ElimPeriod Passed'(calcType;coverageIndex;AccOrSick) && ('ParticipantStatus is Active'(participantStatus) || 'ParticipantStatus is Disabled'(participantStatus) || 'ParticipantStatus is PartialRecovered'(participantStatus)) && NOT('DIDocs Coverage BenefitPeriod Passed'(calcType;coverageIndex;'Constant ParticipantStatus PARTIALRECOVERED';AccOrSick))
F1 4e31ea77 3efb95e0 0 0 0 0 2
DIDocs Coverage BenefitInd DeathBenefit(calcType; coverageIndex; participantStatus; AccOrSick)
Funktion
'DIDocs Coverage ElimPeriod Passed'(calcType;coverageIndex;AccOrSick) && ('ParticipantStatus is Deceased'(participantStatus) || 'ParticipantStatus is Disabled'(participantStatus) || 'ParticipantStatus is PartialRecovered'(participantStatus)) && NOT('DIDocs Coverage BenefitPeriod Passed'(calcType;coverageIndex;'Constant ParticipantStatus DISABLED';AccOrSick))
F1 77287891 3192fffa 3fa02153 145e265 0 0 2
--Constants--
Funktion

F1 3fa02153 77287891 0 7f253765 0 0 2
DIDocs Model Name
Funktion
"DisabilityContractDocs"
F1 7f253765 77287891 0 23cbfbfd 0 0 2
DIDocs AccorSick(DisabledStatus)
Funktion
IF ('DisabledStatus is Accident'(disabledStatus) ; çä  'DIDocs Constant Accident' ; çä  IF ('DisabledStatus is Sick'(disabledStatus) ; çä    'DIDocs Constant Sick' ; çä    ""çä  )çä)
F1 23cbfbfd 77287891 0 4934f448 0 0 2
DIDocs Constant Sick
Funktion
"SICK"
F1 4934f448 77287891 0 320f3579 0 0 2
DIDocs Constant Accident
Funktion
"ACC"
F1 320f3579 77287891 0 0 0 0 2
DIDocs Constant ValuePerUnit
Funktion
100
F1 145e265 3192fffa 132918a 0 0 0 2
--TESTING
Funktion

F1 132918a 145e265 0 0 0 0 2
Premium Test
Funktion
'ModePremium Mode Premium'('GEN Vector Blank';'Vector ModePremium Create Parms Vector for DisabilityIncome'('GEN Vector Blank';1))
A0 7df78fd6 0 0 0 0 0 0

T0 82b1fcf 0 0 0 0 0 0

I0 10f2148c 0 11f108cb 0 0 0 0

I0 11f108cb 10f2148c 0 2fe3114c 0 0 0
DisabilityBenefits.pms
I0 2fe3114c 10f2148c 0 0 0 0 0
TaxWithholding.pms
-
O0
E0
L0
B0
P1
19142049
F8
4a60b8d4
680636ba
36f1bf00
c8e7c
3099f17b
2c987902
77287891
145e265
A0
T0
!43
310fabfa 3 -1
Description: Returns the modal DI premiumçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä06/10/2011 PAC022 DI JL Initial Calculation
310fabfa 4 -1
Description: Returns the annualized DI premiumçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/26/2011 PAC023 DI JL Use Policy Contrib Mode, not PaymentModeçä06/10/2011 PAC022 DI JL Initial Calculation
310fabfa 5 -1
Description: Coverage Premium per unit ($100/month benefit)çä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
310fabfa 6 -1
Description: CovOption Premium per unit ($100/month benefit)çä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
310fabfa 7 -1
Description: Actual benefit amount to be paid, due to disabilityçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
310fabfa 8 -1
Description: Benefit amount paid for disabilitiesçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
310fabfa 9 -1
Description: Benefit amount paid for sicknessçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
310fabfa 10 -1
Description: Benefit amount paid for Partial Recoveryçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
310fabfa 11 -1
Description: Survivor benefit amount paidçä çäModification Log:çä09/06/2011 PAC022 DI JL Roundingçä08/31/2011 PAC022 DI JL Initial Output
6e180ea -2 -2
Description: Returns the modal DI premiumçä çäModification Log:çä09/01/2011 PAC022 DI JL Check WPçä06/10/2011 PAC022 DI JL Initial Calculation
8f39bb0 -2 -2
Description: Vector of Parameters for DI Productsçä çäModification Log:çä07/18/2011 PAC022 DI JL Use 'ContribMode' not 'PaymentMode' (DI property)çä06/10/2011 PAC022 DI JL Remove mode parm, add input callçä06/08/2011 PAC022 DI JL Initial Calculation
780ce4d -2 -2
Description: Return 1 (TRUE) if the WP is in effect. Else returns 0 (FALSE).çä çäModification Log:çä09/01/2011 PAC022 DI JL Initial Calculation
fc21f5b -2 -2
Description: Returns 1 if a WP rider exists on the specified coverage, else returns 0.çä çäModification Log:çä08/10/2011 PAC022 DI JL - Initial Calculation
2941f625 -2 -2
Description: Returns 1 if the specified covOpt is WP else recurses through the remaining covOpts.çä çäModification Log:çä08/10/2011 PAC022 DI JL - Initial Calculation
6288398 -2 -2
Description:  Returns the projected accumulated ROP eligible premium.çä çäModification Log:çä09/01/2011 PAC022 DI JL Use DIDocs Premçä08/10/2011 PAC022 DI JL Initial Calculation
2f27e486 -2 -2
Description: Vector of Parameters for DI Products, for ROP calcçä çäModification Log:çä02/13/2013 pA1301 -DeliveryTesting - Addressed warning error - invalid counter "#yr".  Updated to use "yearIndex" in 'Increase Date By Years'çä08/10/2011 PAC022 DI JL Initial Calculation
659751fb -2 -2
Description: Returns TRUE if the elimination period has passedçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
706f1034 -2 -2
Description: Coverage Elimination Period, in Days.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
76e39ff8 -2 -2
Description: Elimination Period in days associated with the elimPeriod parmçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
a195c44 -2 -2
Description: Returns TRUE if the benefit period has passedçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
36e34548 -2 -2
Description: Coverage Benefit Period, in years.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
64b6ca63 -2 -2
Description: Benefit Period in years associated with the benefitPeriod parmçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
6a109db9 -2 -2
Description: Total Benefit Amount currently Due.çä çäModification Log:çä08/31/2011 PAC022 DI JL Add Participant Status parmsçä08/26/2011 PAC022 DI JL Remove Cov parmçä07/18/2011 PAC022 DI JL - Initial Calculation
7cfaef5f -2 -2
Description: Coverage Benefit Amount currently Due.çä çäModification Log:çä08/31/2011 PAC022 DI JL Add Participant Status parmsçä08/26/2011 PAC022 DI JL Convert DisabledStatus code to Constantçä07/18/2011 PAC022 DI JL - Initial Calculation
53aad56c -2 -2
Description: Total ROP benefit amount due.çä çäModification Log:çä09/01/2011 PAC022 DI JL Floor at 0; Do not deduct current benefits (as they are after the ROP period)çä08/31/2011 PAC022 DI JL Add Participant Status parmsçä08/10/2011 PAC022 DI JL - Initial Calculation
2f087e07 -2 -2
Description: Returns 1 if the ROP benefit is due, else 0..çä çäModification Log:çä09/01/2011 PAC022 DI JL Add one to Maturity Dur as TransEffDur is base 1çä08/10/2011 PAC022 DI JL - Initial Calculation
62e520b7 -2 -2
Description: Returns 1 if a ROP rider exists on the specified coverage, else returns 0.çä çäModification Log:çä08/10/2011 PAC022 DI JL - Initial Calculation
12698d3c -2 -2
Description: Returns 1 if the specified covOpt is ROP else recurses through the remaining covOpts.çä çäModification Log:çä08/10/2011 PAC022 DI JL - Initial Calculation
6ec6cd32 -2 -2
Description: Returns the covOpt index of a ROP rider if one exists on the specified coverage, else returns -1.çä çäModification Log:çä08/10/2011 PAC022 DI JL - Initial Calculation
6347952c -2 -2
Description: Returns the covOpt index of a ROP rider if the specified covOpt is ROP else recurses through the remaining covOpts.çä çäModification Log:çä08/10/2011 PAC022 DI JL - Initial Calculation
14cceb6f -2 -2
Description: Coverage Benefit Amount by cause, without taking elimination & benefit periods into account.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
314e0d95 -2 -2
Description: Coverage Disability Benefit Amount, without taking elimination & benefit periods into account.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
65698ff2 -2 -2
Description: Coverage Partial Recovery Benefit Amount, without taking elimination & benefit periods into account.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
534653e5 -2 -2
Description: Coverage Death Benefit Amount, without taking elimination & benefit periods into account.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
3efb95e0 -2 -2
Description: Indicator returing TRUE if the elimination period is passed, and the Benefit period is still in force, depending on the cause of the claim.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
2ae46255 -2 -2
Description: Indicator returing TRUE if the elimination period is passed, and the Benefit period is still in force, for Disability.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
4bb14035 -2 -2
Description: Indicator returing TRUE if the elimination period is passed, and the Benefit period is still in force, for Partial Recovery.çä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
4e31ea77 -2 -2
Description: Indicator returing TRUE if the elimination period is passed, and the Benefit period is still in force, for Death.çä çäModification Log:çä08/31/2011 PAC022 DI JL Add ParticipantStatus is Deceasedçä07/18/2011 PAC022 DI JL - Initial Calculation
3fa02153 -2 -2
Description: Model Nameçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
7f253765 -2 -2
Description: Constant string based on DisabledStatusçä çäModification Log:çä08/26/2011 PAC022 DI JL Initial Rule
23cbfbfd -2 -2
Description: Constant - Disability due to Sicknessçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
4934f448 -2 -2
Description: Constant - Disability due to Accidentçä çäModification Log:çä07/18/2011 PAC022 DI JL - Initial Calculation
132918a -2 -2
Description: Test DI Premium Functionçä çäModification Log:çä06/10/2011 PAC022 DI JL Remove mode parm from parms vectorçä06/08/2011 PAC022 DI JL Initial Calculation
;Offset=00000000
